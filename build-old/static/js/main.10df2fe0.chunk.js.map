{"version":3,"sources":["assets/img/brand/argon-react.png","assets/img/theme/team-1-800x800.jpg","assets/img/brand/argon-react-white.png","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","views/Index.js","views/examples/tables/Userlisttable.js","views/examples/tables/Paginationtable.js","views/examples/contexts/UserContext.js","views/examples/Userslist.js","views/examples/contexts/CategoryContext.js","views/examples/tables/Categoriestable.js","views/examples/models/Categorymodel.js","views/examples/Categories.js","views/examples/tables/Subcategoriestable.js","views/examples/models/Subcategorymodel.js","views/examples/Subcategories.js","views/examples/tables/Supsubcategoriestable.js","views/examples/models/Supsubcategorymodel.js","views/examples/Supsubcategories.js","views/examples/contexts/TopicsContext.js","views/examples/tables/Articletable.js","views/examples/tables/Articlevideotable.js","views/examples/tables/Videoarticletable.js","views/examples/models/Articlevideomodel.js","views/examples/models/Videoarticlemodel.js","views/examples/Topicsforms.js","routes.js","layouts/Admin.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","index.js","variables/charts.js","assets/img/theme/user.jpg"],"names":["module","exports","AdminNavbar","Navbar","className","expand","id","Container","fluid","to","this","props","brandText","Form","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","type","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","DropdownMenu","right","DropdownItem","header","tag","divider","href","React","Component","Footer","Row","Col","xl","rel","target","NavItem","NavLink","Sidebar","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","layout","path","NavLinkRRD","onClick","activeClassName","icon","name","activeRoute","bind","routeName","location","pathname","indexOf","navbarBrandProps","bgColor","logo","innerLink","Link","outterLink","NavbarBrand","imgAlt","imgSrc","aria-labelledby","e","preventDefault","Collapse","isOpen","xs","aria-label","defaultProps","Header","Alert","propTypes","PropTypes","string","closeClassName","color","bool","toggle","func","oneOfType","fade","Userlisttable","useState","swalert","exampleModal","setExampleModal","editModal","setEditModal","isalert","setIsalert","alertmsgcolor","setAlertmsgcolor","alertmsg","setAlertmsg","userstate","setUserstate","initialFormData","Object","freeze","username","email","password","password1","phone","capability","initialeditingform","_id","formchangedata","updateFormchangedata","editingform","updateEditingform","handleChange","value","trim","rhandleChange","ehandleChange","statuschange","console","log","checked","form_data","FormData","append","config","headers","getCookie","axios","post","then","res","data","message","tosttrigger","catch","err","cookieValue","document","cookie","cookies","split","i","length","substring","decodeURIComponent","toggleModal","toggleeditModal","dataset","handlechange","event","userstateaction","nowobj","isChecked","filter","val","msg","status","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","newestOnTop","rtl","pauseOnFocusLoss","md","Button","size","area-hidden","deleteUser","totalpages","Table","responsive","onChange","allelm","querySelectorAll","forEach","elm","setAttribute","removeAttribute","htmlFor","scope","users","row","userinfo","phonenumber","is_active","defaultChecked","is_superuser","data-id","deleteUserind","aria-hidden","data-username","data-email","Modal","data-dismiss","Spinner","role","onSubmit","Paginationtable","UsersContext","createContext","QueryContext","PaginationContext","UsersProvider","rows","children","setUsers","q","setQ","currentpage","setCurrentpage","setTotalpages","useEffect","a","get","total","fetchusers","Provider","toLowerCase","Userslist","useContext","list","push","Card","CardHeader","CardFooter","CategoryContext","CategoryProvider","match","categories","setCategories","subcategories","setSubcategories","supsubcategories","setSupsubcategories","setSwlert","catmodel","setCatmodel","subcatmodel","setSubcatmodel","supsubcatmodel","setSupsubcatmodel","updatecatmodel","setUpdatecatmodel","isspinner","setIsspinner","categorystate","setCategorystate","category","mainref","superref","maincats","subcats","supsubcats","addsubcategorymodel","addsupsubcategorymodel","deleteThisGoal","delsid","handleSubmit","prevCategories","indexkey","categorytateaction","handleAllChecked","updatehandlesubmit","subcathandleSubmit","prevSubcategories","subcatgorydeletebutton","parseInt","supsubcathandleSubmit","prevSupsubcategories","masterrefrence","refrence","supsubcatgorydeletebutton","Categoriestable","addcatmodeltrigger","cats","index","data-category","Categorymodel","Categories","catmanager","trys","useRouteMatch","params","token","catref","delete","Subcategoriestable","refcats","ris","Subcategorymodel","Label","for","Subcategories","Supsubcategoriestable","masterefcat","Supsubcategorymodel","Supsubcategories","TopicsContext","TopicsProvider","Topicsform","iptype","iptextarea","urlid","typeofsubmit","multirefiles","perpage","page","start_from","feedform","updateFeedform","feedreadylist","setFeedreadylist","setTopicstate","fetchcategory","howmanyfetch","setHowmanyfetch","articlevideoperpage","articlevideopage","articlevideosearch","setArticlevideosearch","articlevideoauthor","setArticlevideoauthor","articlevideostatus","articlevideoisactive","setArticlevideoisactive","articlevideoisview","setArticlevideoisview","articlevideochannel","setArticlevideochannel","totalresults","setTotalresults","allarticles","setAllarticles","articlemodel","setArticlemodel","videomodel","setVideomodel","collectioncountarticle","setCollectioncountarticle","paginationcount","setPaginationcount","allvideos","setAllvideos","handlePageClick","feeds","spin","setSpin","sendforFetch","ispin","triggerfeedsfetch","sendforvideoFetch","procespinner","sendforFetchtable","reactfetch","valid","prevHowmany","successdatalength","handlePageClickarticle","articles","getallarticles","getallvideos","videos","collectioncountvideos","reviewupdate","tablename","statusupdate","bulkdeleter","bulkdeletervideos","options","onUploadProgress","progressEvent","loaded","percent","Math","floor","keys","onFileChange","files","getallfeedstable","delpin","someval","topicstatuschange","togglemodel","statetoggle","viewtoggle","articlevideohandlesubmit","articlestatuschange","searchquery","handlePageClickvideo","deletefeeditem","sitequery","authorquery","togglevideomodel","Videoarticlehandlesubmit","videostatuschange","Articletable","topicmanager","data-url","feedlist","style","width","wordWrap","whiteSpace","isactive","isfetched","parent_id","pubdate","lastmodified","spinid","Articlevideotable","URL","title","height","image","subcategory","supersubcat","isreview","videopublishedat","data-mainref","data-superref","Videoarticletable","Articlevideomodel","superrefsarticle","Videoarticlemodel","PaginationComponent","totalItems","number","isRequired","pageSize","onSelect","maxPaginationNumbers","defaultActivePage","firstPageText","previousPageText","nextPageText","lastPageText","Topicsforms","component","tabs","setTabs","toggleNavs","pills","aria-selected","classnames","active","CardBody","TabContent","activeTab","TabPane","tabId","CustomInput","label","disabled","outline","bsSize","Pagination","inline","ceil","Admin","getRoutes","getBrandText","documentElement","scrollTop","scrollingElement","refs","mainContent","ref","from","AdminFooter","UncontrolledCollapse","toggler","Login","Auth","body","classList","add","remove","AuthNavbar","lg","xmlns","preserveAspectRatio","version","viewBox","x","y","points","AuthFooter","ReactDOM","render","exact","getElementById","Chart","elements","Rectangle","prototype","draw","left","top","bottom","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","default","primary","secondary","info","danger","warning","chartExample1","scales","yAxes","gridLines","zeroLineColor","ticks","callback","tooltips","callbacks","item","datasets","datasetIndex","yLabel","content","data1","canvas","labels","data2","chartOptions","defaults","global","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","padding","legend","display","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parseOptions","parent","chartExample2","maxBarThickness"],"mappings":"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","file":"static/js/main.10df2fe0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/argon-react-white.275a2629.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {this.props.brandText}\n            </Link>\n            <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n              <FormGroup className=\"mb-0\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"fas fa-search\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n            </Form>\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/theme/user.jpg\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                        Admin\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  {/* <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-settings-gear-65\" />\n                    <span>Settings</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-calendar-grid-58\" />\n                    <span>Activity</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-support-16\" />\n                    <span>Support</span>\n                  </DropdownItem> */}\n                  <DropdownItem divider />\n                  <DropdownItem href=\"/accounts/users/logout\">\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"6\">\n            <div className=\"copyright text-center text-xl-left text-muted\">\n              © 2020{\" \"}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Kiran Voleti\n              </a>\n            </div>\n          </Col>\n\n          <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink\n                  href=\"/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Kiran Voleti\n                </NavLink>\n              </NavItem>\n\n             </Nav>\n          </Col>\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n \n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}            \n           </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","\nimport React from \"react\";\n\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            \n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\"\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n  };\n  render() {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Overview\n                      </h6>\n                      <h2 className=\"text-white mb-0\">Sales value</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\n                        Performance\n                      </h6>\n                      <h2 className=\"mb-0\">Total orders</h2>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  <div className=\"chart\">\n                    <Bar\n                      data={chartExample2.data}\n                      options={chartExample2.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row className=\"mt-5\">\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Page visits</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Page name</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\">Unique users</th>\n                      <th scope=\"col\">Bounce rate</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">/argon/</th>\n                      <td>4,569</td>\n                      <td>340</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/index.html</th>\n                      <td>3,985</td>\n                      <td>319</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/charts.html</th>\n                      <td>3,513</td>\n                      <td>294</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-warning mr-3\" />{\" \"}\n                        36,49%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/tables.html</th>\n                      <td>2,050</td>\n                      <td>147</td>\n                      <td>\n                        <i className=\"fas fa-arrow-up text-success mr-3\" />{\" \"}\n                        50,87%\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">/argon/profile.html</th>\n                      <td>1,795</td>\n                      <td>190</td>\n                      <td>\n                        <i className=\"fas fa-arrow-down text-danger mr-3\" />{\" \"}\n                        46,53%\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n            <Col xl=\"4\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"border-0\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h3 className=\"mb-0\">Social traffic</h3>\n                    </div>\n                    <div className=\"col text-right\">\n                      <Button\n                        color=\"primary\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                        size=\"sm\"\n                      >\n                        See all\n                      </Button>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <Table className=\"align-items-center table-flush\" responsive>\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">Referral</th>\n                      <th scope=\"col\">Visitors</th>\n                      <th scope=\"col\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>1,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">60%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"60\"\n                              barClassName=\"bg-gradient-danger\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Facebook</th>\n                      <td>5,480</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">70%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"70\"\n                              barClassName=\"bg-gradient-success\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Google</th>\n                      <td>4,807</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">80%</span>\n                          <div>\n                            <Progress max=\"100\" value=\"80\" />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Instagram</th>\n                      <td>3,678</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">75%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"75\"\n                              barClassName=\"bg-gradient-info\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">twitter</th>\n                      <td>2,645</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">30%</span>\n                          <div>\n                            <Progress\n                              max=\"100\"\n                              value=\"30\"\n                              barClassName=\"bg-gradient-warning\"\n                            />\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Userlisttable = (props) => {\r\n    const [swalert, setSwlert] = useState(\"\");\r\n    const [exampleModal, setExampleModal] = useState(false);\r\n    const [editModal, setEditModal] = useState(false);\r\n    const [isalert, setIsalert] = useState(false);\r\n    const [alertmsgcolor, setAlertmsgcolor] = useState(\"info\");\r\n    const [alertmsg, setAlertmsg] = useState(\"\");\r\n    const [userstate, setUserstate] = useState([]);\r\n\r\n\r\n\r\n\r\n    // form state\r\n    const initialFormData = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password1: \"\",\r\n        phone: \"\",\r\n        capability: \"\"\r\n    });\r\n\r\n    const initialeditingform = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        _id: \"\",\r\n    });\r\n\r\n    const [formchangedata, updateFormchangedata] = React.useState(initialFormData);\r\n    const [editingform, updateEditingform] = React.useState(initialeditingform);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        updateFormchangedata({\r\n            ...formchangedata,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n\r\n    const rhandleChange = (e) => {\r\n\r\n        updateFormchangedata({\r\n            ...formchangedata,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.id.trim()\r\n\r\n        });\r\n    };\r\n\r\n    const ehandleChange = (e) => {\r\n\r\n        updateEditingform({\r\n            ...editingform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n    const ehandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(editingform)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        if (formchangedata.password === formchangedata.password1 && formchangedata.password.length < 5) {\r\n            setIsalert(!isalert)\r\n            setAlertmsg(\"plase check your password\");\r\n            setAlertmsgcolor('danger');\r\n\r\n        }\r\n        let form_data = new FormData();\r\n        form_data.append('username', formchangedata.username);\r\n        form_data.append('pwd', formchangedata.password);\r\n        form_data.append('email', formchangedata.email);\r\n        form_data.append('userrole', formchangedata.capability);\r\n        form_data.append('phonenumber', formchangedata.phone);\r\n        let url = 'https://app.kiranvoleti.com/saveuser';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                // 'X-CSRFToken': this.getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                console.log(res.data)\r\n\r\n            })\r\n            .catch(err =>\r\n                console.log(err)\r\n            )\r\n        // Object.entries(formData).map(entry => { \r\n        //     // let key = entry[0]; \r\n        //     // let value = entry[1]; \r\n        //     return console.log(entry); \r\n        // }); \r\n\r\n        // toggleModal(\"exampleModal\")\r\n        // ... submit to API or something\r\n    };\r\n    // form state\r\n    const statuschange = (e)=>{\r\n        console.log(e.target.checked);  \r\n        \r\n        let form_data = new FormData();\r\n        form_data.append('user_id', e.target.id);\r\n        form_data.append('is_active', e.target.checked);\r\n        console.log(e.target.checked,e.target.id);  \r\n        let url = 'https://app.kiranvoleti.com/getuserupdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                console.log(res.data.message)\r\n                tosttrigger(\"Successfully Status Changed !\",\"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\",\"error\")\r\n                \r\n            )    \r\n\r\n    }\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n          const cookies = document.cookie.split(';');\r\n          for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return cookieValue;\r\n      }\r\n    const toggleModal = () => {\r\n        setExampleModal(!exampleModal);\r\n        setIsalert(false)\r\n    };\r\n    const toggleeditModal = (e) => {\r\n        \r\n        const initialeditingform = Object.freeze({\r\n            username: e.target.dataset.username,\r\n            email: e.target.dataset.email,\r\n            _id: e.target.dataset.id\r\n\r\n        });\r\n        updateEditingform(initialeditingform)\r\n        setEditModal(!editModal);\r\n        setIsalert(false)\r\n    };\r\n\r\n    // Checkbox\r\n    const handleAllChecked = (event) => {\r\n        console.log(event.target.checked)\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        if (event.target.checked) {\r\n            allelm.forEach(elm => {\r\n                elm.setAttribute(\"checked\", event.target.checked)\r\n            })\r\n\r\n        }\r\n        else {\r\n            allelm.forEach(elm => {\r\n                elm.removeAttribute(\"checked\")\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handlechange = (event) => {\r\n        let userstateaction = userstate;\r\n        function ischeckf(val) {\r\n            if (val._id === event.target.id) {\r\n                return val !== event.target.id;\r\n            }\r\n        }\r\n        if (event.target.checked) {\r\n            let nowobj = [{ _id: event.target.id, isChecked: event.target.checked }]\r\n            setUserstate([...userstateaction, ...nowobj]);\r\n        } else {\r\n            let nowobj = userstateaction.filter(ischeckf)\r\n            setUserstate([...nowobj]);\r\n        }\r\n        console.log(userstateaction);\r\n    }\r\n    // end checkbox\r\n\r\n    \r\n    function tosttrigger(msg,status){\r\n        if(status === \"success\"){\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            }else{\r\n                toast.error(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n}\r\n        \r\n    }\r\n    function hideSwalert() {\r\n        setSwlert(\"\");\r\n    }\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            {swalert}\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Button trigger modal */}\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"exampleModal\")}\r\n                    >\r\n                        Add User<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteUser}\r\n                    >\r\n                        Delete<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            Total Records: {props.totalpages}\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Mobile</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Capability</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.users.map(row => (\r\n\r\n                        <tr key={row._id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n                                <Media className=\"align-items-center\">\r\n                                    <a\r\n                                        className=\"avatar rounded-circle mr-3\"\r\n                                        href=\"#pablo\"\r\n                                        onClick={e => e.preventDefault()}\r\n                                    >\r\n                                        <img\r\n                                            alt=\"...\"\r\n                                            src={require(\"assets/img/theme/user.jpg\")}\r\n                                        />\r\n                                    </a>\r\n                                    <Media>\r\n                                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                                            <input\r\n                                                className=\"custom-control-input\"\r\n                                                id={row._id}\r\n                                                type=\"checkbox\"\r\n                                                name=\"childbox\"\r\n                                                onChange={handlechange}\r\n\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor={row._id}>\r\n\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </Media>\r\n                                </Media>\r\n                            </th>\r\n                            <td>{row.username}</td>\r\n                            <td>{row.email}</td>\r\n\r\n                            {\r\n                                row.userinfo.length > 0 ? row.userinfo.map((val) => (\r\n\r\n                                    <td key={val.id}>{val.phonenumber}</td>\r\n\r\n\r\n                                )) : <td key={row.id}>----</td>}\r\n\r\n                              \r\n\r\n                                <td id={row._id}>\r\n                                <label className=\"custom-toggle\">\r\n                                {row.is_active ? \r\n                                \r\n                                <input id={row._id} onChange={statuschange} defaultChecked type=\"checkbox\" />\r\n                                \r\n                                : \r\n                                \r\n                                \r\n                                <input id={row._id} onChange={statuschange} type=\"checkbox\" />\r\n                                \r\n                                \r\n                                }\r\n                                <span className=\"custom-toggle-slider rounded-circle\" />\r\n                              </label>\r\n                                </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            <td>\r\n                                {row.is_superuser ? \"Admin\" : \"Staff\"}\r\n                            </td>\r\n\r\n                            <td>\r\n\r\n                                <Button data-id={row._id} color=\"danger\" size=\"sm\" type=\"button\"\r\n                                    onClick={props.deleteUserind}\r\n                                >\r\n                                    <i data-id={row._id} className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row.id}\r\n                                    data-email={row.email}\r\n                                    onClick={toggleeditModal}\r\n                                >\r\n                                    <i className=\"fas fa-pen\"                                    \r\n                                    data-username={row.username}\r\n                                    data-id={row.id}\r\n                                    data-email={row.email}\r\n                                    aria-hidden=\"true\"></i>\r\n                                </Button>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={exampleModal}\r\n                toggle={() => toggleModal(\"exampleModal\")}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New User\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"exampleModal\")}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {isalert ?\r\n                        <Alert color={alertmsgcolor}>\r\n                            {alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={handleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-user\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Username\" id=\"username\" name=\"username\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-email-83\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Email\" id=\"email\" name=\"email\" type=\"email\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fa fa-phone\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Phone\" id=\"phone\" name=\"phone\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-lock-circle-open\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Password\" id=\"password\" name=\"password\" type=\"password\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-lock-circle-open\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Confirm Password\" id=\"password1\" name=\"password1\" type=\"password\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputGroup>\r\n                                <div className=\"custom-control custom-radio mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"adminradio\"\r\n                                        name=\"capability\"\r\n                                        type=\"radio\"\r\n                                        onChange={rhandleChange}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"adminradio\">\r\n                                        Gold Plan\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-radio mb-3 ml-2\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        defaultChecked\r\n                                        id=\"userradio\"\r\n                                        name=\"capability\"\r\n                                        type=\"radio\"\r\n                                        onChange={rhandleChange}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"userradio\">\r\n                                        Free Plan\r\n                                    </label>\r\n                                </div>\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={() => toggleModal(\"exampleModal\")}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n            {/* Modal for editing */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={editModal}\r\n                toggle={() => toggleeditModal(\"editmodal\")}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"editmodal\">\r\n                        Edit User\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={toggleeditModal}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {isalert ?\r\n                        <Alert color={alertmsgcolor}>\r\n                            {alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={ehandleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-user\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={ehandleChange}\r\n                                    value={editingform.username}\r\n                                    placeholder=\"Username\" id=\"username\" name=\"username\"\r\n                                    type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-email-83\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={ehandleChange}\r\n                                    value={editingform.email}\r\n                                    placeholder=\"Email\" id=\"email\" name=\"email\" type=\"email\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fa fa-phone\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <input type=\"hidden\" value={editingform._id} />\r\n                                <Input onChange={ehandleChange}\r\n                                    value={editingform.phone}\r\n                                    placeholder=\"Phone\" id=\"phone\" name=\"phone\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={toggleeditModal}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    closeClassName: PropTypes.string,\r\n    color: PropTypes.string, // default: 'success'\r\n    isOpen: PropTypes.bool,  // default: true\r\n    toggle: PropTypes.func,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    fade: PropTypes.bool, // default: true\r\n    // Controls the transition of the alert fading in and out\r\n    // See Fade for more details\r\n}\r\nexport default Userlisttable\r\n","import React from 'react'\r\nimport {\r\n    CardFooter,\r\n    Pagination\r\n} from \"reactstrap\";\r\n\r\nfunction Paginationtable() {\r\n    return (\r\n        <>\r\n\r\n            <CardFooter className=\"py-4\">\r\n                <nav aria-label=\"...\">\r\n                    <Pagination\r\n                        className=\"pagination justify-content-end mb-0\"\r\n                        listClassName=\"justify-content-end mb-0\"\r\n                    >\r\n                       \r\n                    </Pagination>\r\n                </nav>\r\n            </CardFooter>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Paginationtable\r\n","import React, {useState,createContext, useEffect} from 'react';\r\nimport axios from 'axios';\r\nexport const UsersContext = createContext();\r\nexport const QueryContext = createContext();\r\nexport const PaginationContext = createContext();\r\nexport const UserslengthContext = createContext();\r\n\r\nconst UsersProvider = ({children})=> {\r\n    const [users, setUsers] = useState([])\r\n    const [q, setQ] = useState('');\r\n    const [currentpage, setCurrentpage] = useState(1);\r\n    const [totalpages, setTotalpages] = useState(1);\r\n    \r\n    \r\n    const url=\"https://app.kiranvoleti.com/getuserlist\";\r\n\r\n    useEffect(() => {\r\n        const fetchusers = async () => {\r\n        await axios.get(url)\r\n        .then(res=>{            \r\n            setUsers(res.data.users);\r\n            setTotalpages(res.data.total)\r\n            \r\n                    \r\n            \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    fetchusers()\r\n    },[])\r\n\r\n\r\n    // Get Current Posts\r\n  \r\n    // const postsperpage = 5;\r\n    // const indexoflastpost = currentpage * postsperpage;\r\n    // const indexoffirstpost = indexoflastpost - postsperpage;\r\n    // const currentposts = users.slice(indexoffirstpost,indexoflastpost);\r\n\r\n    function search(rows) {\r\n        return rows.filter(\r\n            (row) =>\r\n            row.username.toLowerCase().indexOf(q) > -1 ||\r\n            row.email.toLowerCase().indexOf(q) > -1\r\n        )\r\n    }\r\n\r\n    function sorting(forsort){\r\n        // return forsort.sort((a,b) => b['id'] - a['id'])\r\n        return forsort.sort((a,b) => (\r\n            -1 * a['name'].localeCompare(b['name'])\r\n        ))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <UsersContext.Provider value={[search(users),setUsers]}>        \r\n        <QueryContext.Provider value={[q,setQ]}>\r\n        <PaginationContext.Provider value={{currentpage, setCurrentpage, totalpages,setTotalpages}}>\r\n        \r\n          \r\n            {children}\r\n        \r\n        </PaginationContext.Provider>\r\n        </QueryContext.Provider>\r\n        \r\n        </UsersContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default UsersProvider","import React, { useContext } from \"react\";\nimport axios from 'axios';\n// reactstrap components\nimport {\n\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Col,\n  Spinner,\n  CardFooter,\n  Button\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport Userlisttable from \"./tables/Userlisttable\";\nimport Paginationtable from \"./tables/Paginationtable\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { UsersContext, QueryContext, PaginationContext } from './contexts/UserContext';\n\nconst Userslist = () => {\n  const [users, setUsers] = useContext(UsersContext);\n  const [q, setQ] = useContext(QueryContext);\n  const {currentpage, setCurrentpage, totalpages,setTotalpages} = useContext(PaginationContext); \n  \n\n  const paginate = () => {   \n    setCurrentpage(currentpage+1)\n    fetchusers()\n    console.log(currentpage)\n    \n  }\n  const fetchusers = async () => {\n    const url=\"https://app.kiranvoleti.com/getuserlist\";\n    let form_data = new FormData();\n    form_data.append('page', currentpage);\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          // 'X-CSRFToken': this.getCookie('csrftoken')\n      }\n    }\n    await axios.post(url, form_data, config)\n    .then(res=>{            \n        setUsers(res.data.users);                        \n        \n    })\n    .catch(err=>{\n        console.log(err)\n    })\n}\n\n\n\nconst deleteUser = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   var allelm = document.querySelectorAll(\"input[name=childbox]\");\n\n   await allelm.forEach(elm => {\n       if (elm.checked) {\n           list.push(elm.id)           \n       }\n   })\n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'auth_user');\n   let url = 'https://app.kiranvoleti.com/bulkdeltereactusers';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           fetchusers()\n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nconst deleteUserind = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   list.push(e.target.dataset.id)      \n \n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'auth_user');\n   let url = 'https://app.kiranvoleti.com/bulkdeltereactusers';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           fetchusers()\n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nfunction tosttrigger(msg,status){\n  if(status === \"success\"){\n\n      toast.success(msg, {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n      });\n\n      }else{\n          toast.error(msg, {\n              position: \"top-right\",\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n          });\n\n}\n  \n}\n\nconst getCookie = (name) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\n\n \n  \n  \n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Table */}\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Users</h3>\n              </CardHeader>\n              <Form>\n                <Row>\n                  <Col md=\"4 m-2\">\n                    <FormGroup>\n                    <InputGroup className=\"mb-4\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-zoom-split-in\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input value= {q} onChange={e => setQ((e.target.value).toLowerCase())} placeholder=\"Filter\" type=\"text\" />\n                </InputGroup>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4 m-2\">\n                    <FormGroup>\n                    <InputGroup className=\"mb-4\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-zoom-split-in\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search from Database\" type=\"text\" />\n                </InputGroup>\n                    </FormGroup>\n                  </Col>                  \n                </Row>\n              </Form>              \n\n              <Userlisttable deleteUserind = {deleteUserind} deleteUser = {deleteUser} users={users} totalpages={totalpages} />\n              <Button color=\"primary\" size=\"sm\" onClick={paginate}>Next</Button>\n\n              {users.length === 0 ? <Spinner color=\"primary\" />\n\n              :\n\n\n             null\n              \n              \n              }\n              <CardFooter className=\"py-4\">\n                                    \n                      \n                      \n                </CardFooter>\n              \n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n\nexport default Userslist;\n","import React, { useState, createContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport const CategoryContext = createContext();\r\n\r\nconst CategoryProvider = ({ children, match }) => {\r\n    const [categories, setCategories] = useState([])\r\n    const [subcategories, setSubcategories] = useState([])\r\n    const [supsubcategories, setSupsubcategories] = useState([])\r\n    const [swalert, setSwlert] = useState(\"\");\r\n    const [catmodel, setCatmodel] = useState(false);\r\n    const [subcatmodel, setSubcatmodel] = useState(false);   \r\n    const [supsubcatmodel, setSupsubcatmodel] = useState(false);\r\n    const [updatecatmodel, setUpdatecatmodel] = useState(false);\r\n    // const [editModal, setEditModal] = useState(false);\r\n    const [isalert, setIsalert] = useState(false);\r\n    const [isspinner, setIsspinner] = useState(false);\r\n    const [alertmsgcolor, setAlertmsgcolor] = useState(\"info\");\r\n    const [alertmsg, setAlertmsg] = useState(\"\");\r\n    const [categorystate, setCategorystate] = useState([]);\r\n    const [deleteid, setDeleteid] = useState('');\r\n\r\n    // form state\r\n    const initialFormData = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password1: \"\",\r\n        phone: \"\",\r\n        capability: \"\",\r\n        category: \"\",\r\n        id: \"\",\r\n        mainref:\"\",\r\n        superref:\"\"\r\n    });\r\n\r\n    const initialeditingform = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password1: \"\",\r\n        phone: \"\",\r\n        capability: \"\",\r\n        category: \"\",\r\n        id: \"\"\r\n    });\r\n    const [formchangedata, updateFormchangedata] = React.useState(initialFormData);\r\n    const [editingform, updateEditingform] = React.useState(initialeditingform);\r\n\r\n    const rhandleChange = (e) => {\r\n\r\n        updateFormchangedata({\r\n            ...formchangedata,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n\r\n    // Checkbox\r\n    const handleAllChecked = (event) => {\r\n        \r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        if (event.target.checked) {\r\n            allelm.forEach(elm => {\r\n                elm.setAttribute(\"checked\", event.target.checked)\r\n            })\r\n\r\n        }\r\n        else {\r\n            allelm.forEach(elm => {\r\n                elm.removeAttribute(\"checked\")\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    const handlechange = (event) => {\r\n        let categorytateaction = categorystate;\r\n        function ischeckf(val) {\r\n            if (val.id === event.target.id) {\r\n                return val !== event.target.id;\r\n            }\r\n        }\r\n        if (event.target.checked) {\r\n            let nowobj = [{ id: event.target.id, isChecked: event.target.checked }]\r\n            setCategorystate([...categorytateaction, ...nowobj]);\r\n        } else {\r\n            let nowobj = categorytateaction.filter(ischeckf)\r\n            setCategorystate([...nowobj]);\r\n        }\r\n        \r\n    }\r\n    // end checkbox\r\n    const statuschange = () => {\r\n\r\n    }\r\n\r\n    const toggleeditModal = (e) => {\r\n        setUpdatecatmodel(!updatecatmodel);\r\n        const initialeditingform = Object.freeze({\r\n            category: e.target.dataset.category,\r\n            id: e.target.dataset.id\r\n        });\r\n        updateEditingform(initialeditingform)\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    }\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    function tosttrigger(msg, status) {\r\n        if (status === \"success\") {\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } else {\r\n            toast.error(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        setIsspinner(!isspinner);\r\n        setIsalert(!isalert)\r\n        setAlertmsg(\"Submitting Please Wait...\");\r\n        setAlertmsgcolor('info');\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', formchangedata.category);\r\n\r\n        let url = \"https://app.kiranvoleti.com/addmaincat\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                toggleModal();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                // setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('info'),\r\n\r\n            )\r\n\r\n    };\r\n\r\n    const updatehandlesubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n\r\n        // let form_data = new FormData();\r\n        setIsspinner(!isspinner);\r\n        if (formchangedata.category === \"\") {\r\n            setIsalert(!isalert)\r\n            setAlertmsg(\"Submitting please wait....\");\r\n            setAlertmsgcolor('success');\r\n            setIsspinner(!isspinner);\r\n            return\r\n        }\r\n        let form_data = new FormData();\r\n        form_data.append('catdata', formchangedata.category);\r\n        form_data.append('catid', editingform.id);\r\n\r\n        let url = \"https://app.kiranvoleti.com/main_cat_update/\";\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                toggleeditModal();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setAlertmsg(\"Submitting please wait....\"),\r\n                setIsspinner(!isspinner)\r\n\r\n\r\n            )\r\n\r\n    };\r\n    function hideSwalert() {\r\n        setSwlert(\"\");\r\n    }\r\n    const toggleModal = () => {\r\n        setCatmodel(!catmodel);\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    };\r\n\r\n\r\n    const deleteThisGoal = (e) => {\r\n        let delsid = e.target.id\r\n        setIsspinner(!isspinner);\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', e.target.id);\r\n\r\n        let url = \"https://app.kiranvoleti.com/delmaincat\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                setSwlert(\"\");\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                // const teamPlayers = this.state.teamPlayers.filter(i => i.idTeam !== id));\r\n                setCategories(categories.filter(i => i.category !== delsid))\r\n\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('danger'),\r\n\r\n            )\r\n        setSwlert(\"\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const url = \"https://app.kiranvoleti.com/addmaincat\";\r\n\r\n    useEffect(() => {\r\n        const fetchusers = async () => {\r\n            await axios.get(url)\r\n                .then(res => {\r\n                    setCategories(res.data.maincats);\r\n                    setSubcategories(res.data.subcats);\r\n                    setSupsubcategories(res.data.supsubcats);\r\n\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n        fetchusers()\r\n    }, [])\r\n\r\n\r\n// SubCategory Section\r\n\r\n// Deleting Purpose\r\nconst subcatgorydeletebutton = (e) => {\r\n    let delsid = e.target.dataset.id\r\n\r\n    tosttrigger(\"Deleting plz Wait\", 'success')    \r\n    \r\n\r\n    let form_data = new FormData();\r\n    form_data.append('catid', e.target.dataset.id);\r\n\r\n    let url = \"https://app.kiranvoleti.com/sub_cat_delete/\";\r\n    \r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken')\r\n        }\r\n    }\r\n    axios.post(url, form_data, config)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                tosttrigger(res.data.msg, 'error')\r\n            }        \r\n            else{\r\n                tosttrigger(res.data.msg, 'success')\r\n                setSubcategories(subcategories.filter(i => parseInt(i.id) !== parseInt(delsid)))\r\n            }\r\n        })\r\n        .catch(err =>\r\n            console.log(err)          \r\n\r\n        )\r\n    setSwlert(\"\");\r\n\r\n    \r\n    }\r\n\r\n    // Editing purpose(sub category)\r\n    // Editing Purpose(sub category)\r\n\r\n    \r\n\r\n    \r\n\r\n   \r\n\r\n    // Adding purpose (Sub Category)\r\n\r\n    \r\n    const addsubcategorymodel = () => {\r\n        setSubcatmodel(!subcatmodel);\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    };\r\n\r\n    const subcathandleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        \r\n        \r\n        setIsspinner(!isspinner);\r\n        setIsalert(!isalert)\r\n        setAlertmsg(\"Submitting Please Wait...\");\r\n        setAlertmsgcolor('info');\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', formchangedata.category);\r\n        form_data.append('mainref', formchangedata.mainref);\r\n\r\n        let url = \"https://app.kiranvoleti.com/addsubcat\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                addsubcategorymodel();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                setSubcategories(prevSubcategories => [...prevSubcategories, { id: res.data.indexkey, category: formchangedata.category, mainref:formchangedata.mainref }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                // setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('info'),\r\n\r\n            )\r\n\r\n    };\r\n\r\n    // Sup Sub Category Section\r\n    // Adding Purpose\r\n\r\n    const addsupsubcategorymodel = () => {\r\n        setSupsubcatmodel(!supsubcatmodel);\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    };\r\n\r\n    const supsubcathandleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        \r\n        \r\n        \r\n        setIsspinner(!isspinner);\r\n        setIsalert(!isalert)\r\n        setAlertmsg(\"Submitting Please Wait...\");\r\n        setAlertmsgcolor('info');\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', formchangedata.category);\r\n        form_data.append('refrence', formchangedata.mainref);\r\n        form_data.append('masterrefrence', formchangedata.superref);\r\n\r\n        let url = \"https://app.kiranvoleti.com/addsupsubcat\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                addsupsubcategorymodel();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                setSupsubcategories(prevSupsubcategories => [...prevSupsubcategories, { id: res.data.indexkey, category: formchangedata.category, \r\n                    masterrefrence:formchangedata.superref,\r\n                    refrence:formchangedata.mainref\r\n                }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                // setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('info'),\r\n\r\n            )\r\n\r\n    };\r\n\r\n    // Deleting Purpose\r\nconst supsubcatgorydeletebutton = (e) => {\r\n    let delsid = e.target.dataset.id\r\n\r\n    tosttrigger(\"Deleting plz Wait\", 'success')  \r\n    \r\n    let form_data = new FormData();\r\n    form_data.append('catid', e.target.dataset.id);\r\n\r\n    let url = \"https://app.kiranvoleti.com/sup_sub_cat_delete/\";\r\n    \r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken')\r\n        }\r\n    }\r\n    axios.post(url, form_data, config)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                tosttrigger(res.data.msg, 'error')\r\n            }        \r\n            else{\r\n                tosttrigger(res.data.msg, 'success')\r\n                setSupsubcategories(supsubcategories.filter(i => parseInt(i.id) !== parseInt(delsid)))\r\n            }\r\n        })\r\n        .catch(err =>\r\n            console.log(err)          \r\n\r\n        )\r\n    setSwlert(\"\");\r\n\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <CategoryContext.Provider value={{\r\n            categories, setCategories, subcategories,\r\n            setSubcategories, supsubcategories, setSupsubcategories,\r\n            deleteThisGoal, toggleModal, toggleeditModal, updatecatmodel, formchangedata, initialeditingform, updateFormchangedata,\r\n            editingform, updateEditingform, swalert, catmodel, handleSubmit, isalert,\r\n            alertmsgcolor, alertmsg, rhandleChange, isspinner, handlechange, handleAllChecked, updatehandlesubmit,\r\n\r\n            addsubcategorymodel,subcatmodel,subcathandleSubmit,subcatgorydeletebutton,\r\n\r\n            addsupsubcategorymodel, supsubcatmodel, supsubcathandleSubmit,supsubcatgorydeletebutton\r\n\r\n        }}>\r\n\r\n            {children}\r\n\r\n        </CategoryContext.Provider>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default CategoryProvider","import React from \"react\";\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nfunction Categoriestable(props) {\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n                <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.addcatmodeltrigger}\r\n                    >\r\n                        Add Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    {/* <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteThisGoal}\r\n                    >\r\n                        Delete Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button> */}\r\n                </Col>\r\n\r\n            </Row>\r\n        \r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={props.handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Category</th>                        \r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cats.map((row,index) => (\r\n\r\n                        <tr key={index}>\r\n\r\n                            <th scope=\"row\">\r\n                                \r\n                                    \r\n                                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                                            <input\r\n                                                className=\"custom-control-input\"\r\n                                                id={row.id}\r\n                                                type=\"checkbox\"\r\n                                                name=\"childbox\"\r\n                                                onChange={props.handlechange}\r\n\r\n                                            />\r\n                                            \r\n                                            <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                            {index + 1}\r\n                                            </label>\r\n                                        </div>\r\n                                        \r\n\r\n                                   \r\n                            </th>\r\n                            \r\n                            <td>{row.category}</td>\r\n                                                      \r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\"\r\n                                id={row.category} onClick={props.deleteThisGoal}\r\n                                >\r\n                                    <i id={row.category} className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-category={row.category}\r\n                                    data-id={row.id}                                    \r\n                                    onClick={props.toggleeditModal}\r\n                                >\r\n                                    <i \r\n                                    data-category={row.category}\r\n                                    data-id={row.id}\r\n                                    className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n           \r\n                     \r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categoriestable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Categorymodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.catmodel}\r\n                toggle={props.addcatmodeltrigger}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New Category\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.addcatmodeltrigger}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.handleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={props.rhandleChange} placeholder=\"category\" id=\"category\" name=\"category\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.addcatmodeltrigger}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n            {/* Modal for editing */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.updatecatmodel}\r\n                toggle={props.toggleeditModal}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"editmodal\">\r\n                        Edit User\r\n                </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.toggleeditModal}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.updatehandlesubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            \r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input                                     \r\n                                    value={props.formchangedata.category}\r\n                                    onChange={props.rhandleChange}\r\n                                    placeholder=\"category\" id=\"category\" name=\"category\"\r\n                                    type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>                                             \r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.toggleeditModal}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categorymodel\r\n","import React, {  useContext } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { ToastContainer} from 'react-toastify';\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport {\r\n\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row\r\n    \r\n} from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport Categoriestable from \"./tables/Categoriestable\";\r\nimport Categorymodel from \"./models/Categorymodel\";\r\nfunction Categories(props) {\r\n    const catmanager = useContext(CategoryContext);\r\n    // const { token } = useParams();\r\n    let trys = useRouteMatch(\"/admin/categories/:token\");\r\n    \r\n\r\n    return (\r\n        <>\r\n        \r\n        {catmanager.swalert}\r\n        <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Header />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                \r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">{trys.params.token}</h3>\r\n                            </CardHeader>\r\n\r\n                            \r\n\r\n                            <Categoriestable catref={trys.params.token} cats={catmanager.categories}\r\n                            addcatmodeltrigger={catmanager.toggleModal} deleteThisGoal={catmanager.deleteThisGoal}\r\n                            handlechange={catmanager.handlechange} handleAllChecked={catmanager.handleAllChecked}\r\n                            updatecatmodel = {catmanager.updatecatmodel} toggleeditModal = {catmanager.toggleeditModal}\r\n                            \r\n                            \r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Categorymodel \r\n                delete = {catmanager.deleteThisGoal}     \r\n                editingform = {catmanager.editingform}   \r\n                formchangedata = {catmanager.formchangedata} \r\n                addcatmodeltrigger={catmanager.toggleModal}      \r\n                catmodel = {catmanager.catmodel}\r\n                handleSubmit = {catmanager.handleSubmit}\r\n                isalert ={catmanager.isalert}\r\n                alertmsgcolor = {catmanager.alertmsgcolor}\r\n                alertmsg = {catmanager.alertmsg}\r\n                rhandleChange = {catmanager.rhandleChange}\r\n                isspinner = {catmanager.isspinner}\r\n                updatecatmodel = {catmanager.updatecatmodel}\r\n                toggleeditModal = {catmanager.toggleeditModal}\r\n                updatehandlesubmit = {catmanager.updatehandlesubmit}\r\n                initialeditingform = {catmanager.initialeditingform}\r\n\r\n                />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Row,\r\n    Col,\r\n   \r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Subcategoriestable(props) {\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.addsubcategorymodel}\r\n                    >\r\n                        Add Sub Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    {/* <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteThisGoal}\r\n                    >\r\n                        Delete Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button> */}\r\n                </Col>\r\n\r\n            </Row>\r\n           \r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            #\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Sub Category</th>\r\n                        <th scope=\"col\">Topics</th>                        \r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cats.map((row,index) => (\r\n\r\n                        <tr key={row.id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n                                 {index + 1}                                   \r\n                            </th>\r\n                            \r\n                            <td>{row.category}</td>\r\n                            \r\n\r\n                            <td>{props.refcats.map(ris=>(ris.id === parseInt(row.mainref) ? ris.category: null))}</td>                                \r\n                                \r\n                                                     \r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\" data-id={row.id}\r\n                                    onClick={props.subcatgorydeletebutton}\r\n                                >\r\n                                    <i className=\"fa fa-trash\" data-id={row.id} aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                {/* <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row._id}\r\n                                    data-email={row.email}\r\n                                    onClick={props.subcategoryeditmodel}\r\n                                >\r\n                                    <i className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button> */}\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n\r\n\r\n\r\n            \r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subcategoriestable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Subcategorymodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.subcatmodel}\r\n                toggle={props.addsubcategorymodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New Sub Category\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.addsubcategorymodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.subcathandleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={props.rhandleChange} placeholder=\"category\" id=\"category\" name=\"category\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Category</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.refcats.map((val,index) =>(\r\n                                    <option key={index} value={val.id}>{val.category}</option>\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.addsubcategorymodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n            {/* Edit SubCategory Model */}\r\n             \r\n             {/* <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.updatesubcatmodel}\r\n                toggle={props.subcategoryeditmodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"editmodal\">\r\n                        Edit User\r\n                </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.subcategoryeditmodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.updatesubcathandlesubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            \r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input                                     \r\n                                    value={props.formchangedata.category}\r\n                                    onChange={props.rhandleChange}\r\n                                    placeholder=\"category\" id=\"category\" name=\"category\"\r\n                                    type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>                                             \r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.subcategoryeditmodel}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n */}\r\n\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Subcategorymodel\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport { ToastContainer} from 'react-toastify';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row\r\n  } from \"reactstrap\";\r\n  import Header from \"components/Headers/Header.js\";\r\nimport Subcategoriestable from \"./tables/Subcategoriestable\";\r\nimport Subcategorymodel from \"./models/Subcategorymodel\";\r\n\r\nfunction Subcategories() {\r\n    const catmanager = useContext(CategoryContext);   \r\n    let trys = useRouteMatch(\"/admin/categories/:token\");\r\n\r\n    // const vals = catmanager.categories.map(val=>{\r\n    //     catmanager.subcategories.filter(val1=>{\r\n    //         val1.ref\r\n    //     })\r\n    // });\r\n    // console.log(vals);\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">{trys.params.token}</h3>\r\n                            </CardHeader>  \r\n                                                      \r\n                            <Subcategoriestable cats={catmanager.subcategories} refcats = {catmanager.categories}\r\n                            addsubcategorymodel={catmanager.addsubcategorymodel}\r\n                            subcatgorydeletebutton = {catmanager.subcatgorydeletebutton}\r\n                            \r\n                            \r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Subcategorymodel \r\n                addsubcategorymodel={catmanager.addsubcategorymodel}\r\n                subcatmodel={catmanager.subcatmodel}\r\n                refcats = {catmanager.categories}\r\n                subcathandleSubmit = {catmanager.subcathandleSubmit}\r\n                rhandleChange = {catmanager.rhandleChange}\r\n                \r\n\r\n                />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Subcategories\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Supsubcategoriestable(props) {\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.addsupsubcategorymodel}\r\n                    >\r\n                        Add Sup Sub Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                   \r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            #\r\n                        </th>\r\n                        <th scope=\"col\">Sup Sub Category</th>\r\n                        <th scope=\"col\">Sub Category</th>\r\n                        <th scope=\"col\">Topics</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cats.map((row, index) => (\r\n\r\n                        <tr key={row.id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                            {index + 1}\r\n\r\n\r\n\r\n                            </th>\r\n\r\n                            <td>{row.category}</td>\r\n\r\n\r\n                            <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td>\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\" data-id={row.id}\r\n                                    onClick={props.supsubcatgorydeletebutton}\r\n                                >\r\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\" data-id={row.id}></i>\r\n                                </Button>\r\n                                {/* <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row._id}\r\n                                    data-email={row.email}\r\n                                    onClick={toggleeditModal}\r\n                                >\r\n                                    <i className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button> */}\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Supsubcategoriestable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\n\r\nfunction Supsubcategorymodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.supsubcatmodel}\r\n                toggle={props.addsupsubcategorymodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New Sup Sub Category\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.addsupsubcategorymodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.supsubcathandleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={props.rhandleChange} placeholder=\"Sub Category\" id=\"category\" name=\"category\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.masterefcat.map((val,index) =>(\r\n                                    <option key={index} value={val.id}>{val.category}</option>\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.refcats.map((val,index) =>(  \r\n                                    parseInt(val.mainref) === parseInt(props.formchangedata.superref) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.formchangedata.superref})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.addsupsubcategorymodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Supsubcategorymodel\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport {\r\n\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row\r\n  } from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport Supsubcategoriestable from \"./tables/Supsubcategoriestable\";\r\nimport Supsubcategorymodel from \"./models/Supsubcategorymodel\";\r\nimport { ToastContainer} from 'react-toastify';\r\n\r\nfunction Supsubcategories() {\r\n    const catmanager = useContext(CategoryContext);   \r\n    console.log(catmanager.supsubcategories);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">Super-Sub Categories</h3>\r\n                            </CardHeader>  \r\n                                                      \r\n                            <Supsubcategoriestable cats={catmanager.supsubcategories} \r\n                            refcats = {catmanager.subcategories}\r\n                            masterefcat = {catmanager.categories}\r\n                            addsupsubcategorymodel = {catmanager.addsupsubcategorymodel}\r\n                            supsubcatgorydeletebutton = {catmanager.supsubcatgorydeletebutton}\r\n                             />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Supsubcategorymodel \r\n                refcats = {catmanager.subcategories}\r\n                masterefcat = {catmanager.categories}\r\n                rhandleChange = {catmanager.rhandleChange}\r\n                addsupsubcategorymodel = {catmanager.addsupsubcategorymodel}\r\n                supsubcatmodel = {catmanager.supsubcatmodel}\r\n                formchangedata = {catmanager.formchangedata}\r\n                supsubcathandleSubmit = {catmanager.supsubcathandleSubmit}\r\n                isspinner={catmanager.isspinner}\r\n                \r\n\r\n                />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Supsubcategories\r\n","import React, { useState, createContext } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const TopicsContext = createContext();\r\n\r\nconst TopicsProvider = ({ children }) => {\r\n    const [isspinner, setIsspinner] = useState(false)\r\n    // form state\r\n    const Topicsform = Object.freeze({\r\n        category: \"\",\r\n        iptype: \"multiple\",\r\n        iptextarea: \"\",\r\n        id: \"\",\r\n        urlid: \"\",\r\n        mainref: \"\",\r\n        superref: \"\",\r\n        typeofsubmit: \"googlenewsfeeds\",\r\n        multirefiles: \"\",\r\n        perpage: 20,\r\n        page: 1,\r\n        start_from: 0\r\n    });\r\n\r\n    const [feedform, updateFeedform] = useState(Topicsform);\r\n    const [feedreadylist, setFeedreadylist] = useState([]);\r\n    const [topicstate, setTopicstate] = useState([]);\r\n    const [fetchcategory, setFetchcategory] = useState('');\r\n    const [howmanyfetch, setHowmanyfetch] = useState(0);\r\n    // \r\n    const [articlevideoperpage, setArticlevideoperpage] = useState(20);\r\n    const [articlevideopage, setArticlevideopage] = useState(1);\r\n    const [articlevideosearch, setArticlevideosearch] = useState('');\r\n    const [articlevideoauthor, setArticlevideoauthor] = useState('');    \r\n    const [articlevideostatus, setArticlevideostatus] = useState('checked');\r\n    const [articlevideoisactive, setArticlevideoisactive] = useState('');\r\n    const [articlevideoisview, setArticlevideoisview] = useState('');\r\n    const [articlevideochannel, setArticlevideochannel] = useState('');        \r\n    const [totalresults, setTotalresults] = useState(0);\r\n    const [allarticles, setAllarticles] = useState([]);\r\n    const [articlemodel, setArticlemodel] = useState(false)\r\n    const [videomodel, setVideomodel] = useState(false)\r\n    const [collectioncountarticle, setCollectioncountarticle] = useState(0)\r\n    const [paginationcount, setPaginationcount] = useState(0)\r\n    const [allvideos, setAllvideos] = useState([]);\r\n\r\n\r\n\r\n    // Handle Change Section\r\n\r\n    const rhandleChange = (e) => {\r\n\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.files\r\n\r\n        });\r\n    }\r\n\r\n\r\n    // End Handle Change Section\r\n\r\n    // Handle Toggle\r\n    const togglemodel = (e) => {\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            mainref: e.target.dataset.mainref,\r\n            superref: e.target.dataset.superref,\r\n            urlid: e.target.dataset.id,\r\n\r\n        });\r\n\r\n        setArticlemodel(!articlemodel)\r\n\r\n    }\r\n\r\n    const togglevideomodel = (e) => {\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            mainref: e.target.dataset.mainref,\r\n            superref: e.target.dataset.superref,\r\n            urlid: e.target.dataset.id,\r\n\r\n        });\r\n\r\n        setVideomodel(!videomodel)\r\n\r\n    }\r\n\r\n    // End Handle Toggle\r\n\r\n    // State Toggle\r\n    const statetoggle = (e) => {\r\n        setArticlevideoisactive(e.target.value.trim())\r\n    }\r\n    const viewtoggle = (e) => {\r\n        setArticlevideoisview(e.target.value.trim())\r\n    }\r\n    const searchquery = (e) => {\r\n        setArticlevideosearch(e.target.value.trim())\r\n    }\r\n    const authorquery = (e) => {\r\n        setArticlevideoauthor(e.target.value.trim())\r\n    }\r\n    \r\n    const sitequery = (e) => {\r\n        setArticlevideochannel(e.target.value.trim())\r\n    }\r\n    \r\n\r\n    // End State Toggle\r\n    // Deleting Purpose\r\nconst deletefeeditem = (e) => {\r\n    let delsid = e.target.dataset.id\r\n\r\n    tosttrigger(\"Deleting plz Wait\", 'success')    \r\n    let list = []\r\n    list.push(e.target.dataset.id)\r\n\r\n    let form_data = new FormData();\r\n    form_data.append('deletelist', e.target.dataset.id);\r\n    form_data.append('tablename', 'feedentryboard');\r\n\r\n    let url = \"https://app.kiranvoleti.com/bulkdeltereact\";\r\n    \r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken')\r\n        }\r\n    }\r\n    axios.post(url, form_data, config)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                tosttrigger(res.data.msg, 'error')\r\n            }        \r\n            else{\r\n                tosttrigger(res.data.msg, 'success')\r\n                setFeedreadylist(feedreadylist.filter(i => parseInt(i.id) !== parseInt(list[0])))\r\n            }\r\n        })\r\n        .catch(err =>\r\n            console.log(err)          \r\n\r\n        )\r\n    \r\n\r\n    \r\n    }\r\n\r\n\r\n    // Handle Submit Section\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const options = {\r\n            onUploadProgress: (progressEvent) => {\r\n                const { loaded, total } = progressEvent;\r\n                let percent = Math.floor((loaded * 100) / total);\r\n                console.log(`${loaded} kb of ${total} kb | ${percent}`)\r\n            }\r\n        }\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('category', feedform.superref);\r\n        form_data.append('datatype', feedform.iptype);\r\n        form_data.append('feed', feedform.iptextarea);\r\n\r\n\r\n        if (feedform.multirefiles) {\r\n            for (const key of Object.keys(feedform.multirefiles)) {\r\n                form_data.append('uploadfile', feedform.multirefiles[key])\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        tosttrigger('Sit back .. Process is initiating..', 'success')\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/feedsummary\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config, options)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n                console.log(res.data.feeds)\r\n                setIsspinner(false);\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                {setIsspinner(false)\r\n                tosttrigger(err, 'error')}\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n    // End Hndle Submit Section\r\n\r\n\r\n\r\n    // Get All Feed Tables\r\n    const handlePageClick = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', feedform.perpage);\r\n        form_data.append('page', e);\r\n        form_data.append('typeofsubmit', feedform.typeofsubmit);\r\n\r\n        // form_data.append('start_from', feedform.start_from);\r\n\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        tosttrigger('Sit back .. Process is initiating..', 'success')\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getfeedlist\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        await axios.post(url, form_data, config)\r\n            .then(res => {\r\n                setFeedreadylist(res.data.feeds)\r\n                setPaginationcount(res.data.total)\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n    };\r\n\r\n\r\n    const getallfeedstable = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', feedform.perpage);\r\n        form_data.append('page', parseInt(feedform.page));\r\n        form_data.append('typeofsubmit', feedform.typeofsubmit);\r\n\r\n        // form_data.append('start_from', feedform.start_from);\r\n\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        tosttrigger('Sit back .. Process is initiating..', 'success')\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getfeedlist\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                setFeedreadylist(res.data.feeds)\r\n\r\n                setPaginationcount(res.data.total)\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // End Get All Feed Tables\r\n\r\n\r\n    // Fetch All Section\r\n\r\n    const [spin, setSpin] = useState([])\r\n\r\n    const delpin = (e) => {\r\n        const someval = spin.filter(i => parseInt(i.id) !== parseInt(130))\r\n        setSpin(someval)\r\n\r\n    }\r\n\r\n    const sendforFetch = async (e) => {\r\n        e.preventDefault();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                let nowobj = { id: elm.id, ispin: true }\r\n                list.push(nowobj)\r\n\r\n                triggerfeedsfetch(elm.id)\r\n\r\n            }\r\n        })\r\n        setSpin(list)\r\n\r\n        tosttrigger('Process initiated', 'success')\r\n        setSpin([])\r\n\r\n\r\n    }\r\n\r\n    // list fetch\r\n\r\n    const sendforvideoFetch = async (e) => {\r\n        e.preventDefault();\r\n        var list = []\r\n        var procespinner = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                let nowobj = { id: elm.id, ispin: true }\r\n                list.push(elm.id)\r\n                procespinner.push(nowobj)\r\n\r\n            }\r\n        })\r\n        setSpin(procespinner)\r\n        await triggerfeedsfetch(list)\r\n\r\n        tosttrigger('Process initiated', 'success')\r\n        setSpin([])\r\n\r\n\r\n    }\r\n\r\n    // End List fetch\r\n    const sendforFetchtable = async (e) => {\r\n        e.preventDefault();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                let nowobj = { id: elm.id, ispin: true }\r\n\r\n                reactfetch(elm.id)\r\n                list.push(nowobj)\r\n\r\n            }\r\n        })\r\n        setSpin(list)\r\n\r\n\r\n\r\n        await tosttrigger('Success Process is Done', 'success')\r\n        setSpin([])\r\n\r\n\r\n    }\r\n    const triggerfeedsfetch = (valid) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('category', feedform.typeofsubmit);\r\n        form_data.append('index', 1);\r\n        form_data.append('urlid', valid);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/fetchfeeds\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n\r\n                setHowmanyfetch(prevHowmany => parseInt(prevHowmany) + parseInt(res.data.successdatalength))\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // End Fetch All Section\r\n    // React fetch to tables\r\n    const reactfetch = (valid) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('fetchcategory', fetchcategory);\r\n        form_data.append('id', valid);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/reactfetcher\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                setIsspinner(false);\r\n                setHowmanyfetch(res.data.successdatalength)\r\n                tosttrigger('Fetched Successfully', 'success')\r\n\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // End Fetch to tables\r\n\r\n    // Get All Articles\r\n    const handlePageClickarticle = async (e) => {\r\n        \r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', e);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getarticlelist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setTotalresults(res.data.total)\r\n                setCollectioncountarticle(res.data.collectioncountarticle)\r\n                setAllarticles(res.data.articles);\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n    };\r\n    const getallarticles = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', articlevideopage);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n        form_data.append('author', articlevideoauthor);\r\n        \r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getarticlelist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setTotalresults(res.data.total)\r\n                setCollectioncountarticle(res.data.collectioncountarticle)\r\n                setAllarticles(res.data.articles);\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n    // End All Articles\r\n    // All Videos\r\n\r\n    const handlePageClickvideo = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', e);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getvideolist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setAllvideos(res.data.videos)\r\n                setCollectioncountarticle(res.data.collectioncountvideos)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n    const getallvideos = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', articlevideopage);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getvideolist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setAllvideos(res.data.videos)\r\n                setCollectioncountarticle(res.data.collectioncountvideos)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n\r\n    // End All Videos\r\n    // Handle All Checks\r\n    const handleAllChecked = (event) => {\r\n\r\n        setTopicstate([])\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        if (event.target.checked) {\r\n            allelm.forEach(elm => {\r\n                elm.setAttribute(\"checked\", true)\r\n            })\r\n\r\n        }\r\n        else {\r\n            allelm.forEach(elm => {\r\n                elm.removeAttribute(\"checked\")\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handlechange = (event) => \r\n    {\r\n        // let categorytateaction = topicstate;\r\n        // function ischeckf(val) {\r\n        //     if (parseInt(val.id) === parseInt(event.target.id)) {\r\n        //         return parseInt(val) !== parseInt(event.target.id);\r\n        //     }\r\n        // }\r\n        // if (event.target.checked) {\r\n\r\n        //     let nowobj = [{ id: parseInt(event.target.id), isChecked: event.target.checked }]\r\n        //     setTopicstate([...categorytateaction, ...nowobj]);\r\n        // } else {\r\n\r\n        //     let nowobj = categorytateaction.filter(ischeckf)\r\n        //     setTopicstate([...nowobj]);\r\n        // }\r\n        if (event.target.checked){\r\n            \r\n            event.target.setAttribute(\"checked\", true)          \r\n        }else{\r\n            event.target.removeAttribute(\"checked\")  \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // End Handle All Checks\r\n\r\n\r\n    // Status Changer\r\n\r\n    const topicstatuschange = (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('is_active', e.target.checked);\r\n\r\n        let url = 'https://app.kiranvoleti.com/statechanger';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                \r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    // Status Changer\r\n\r\n    // Dynamic status changer\r\n    const articlestatuschange = (e) => {\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('isactive', e.target.checked);\r\n        form_data.append('action', 'updateactive');\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                getallarticles(e)\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n    const videostatuschange = (e) => {\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('isactive', e.target.checked);\r\n        form_data.append('action', 'videoactive');\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n    // End Dynamci status changer\r\n\r\n    // Bulk Review updater\r\n\r\n    const reviewupdate = async (e) => {\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        var tablename = e.target.id;\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n       \r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', tablename);\r\n        form_data.append('statereview', 'review');\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        \r\n\r\n        let url = 'https://app.kiranvoleti.com/bulkreviewupdater';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }    \r\n        \r\n       \r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                if(res.data.error){\r\n                    tosttrigger(res.data.msg, 'error')\r\n                }        \r\n                else{\r\n                    tosttrigger(res.data.msg, 'success')\r\n                    if (tablename === \"Videos\"){\r\n                        getallvideos(e);\r\n                    }\r\n                    else{\r\n                        getallarticles(e)\r\n                    }\r\n                    \r\n                }\r\n            })\r\n            .catch(err =>\r\n                console.log(err)          \r\n    \r\n            )\r\n        \r\n    \r\n        \r\n        }\r\n    \r\n\r\n    // End Bulk Review Updater\r\n\r\n    // Status Changer\r\n\r\n    const statusupdate = async (e) => {\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        var tablename = e.target.id\r\n        \r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n       \r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', tablename);\r\n        form_data.append('statereview', 'state');\r\n        form_data.append('is_active', articlevideoisactive);\r\n        \r\n\r\n        let url = 'https://app.kiranvoleti.com/bulkreviewupdater';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }    \r\n        \r\n       \r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                  \r\n                    tosttrigger(res.data.msg, 'success')\r\n                    if (tablename === \"Videos\"){\r\n                        getallvideos(e);\r\n                    }\r\n                    else{\r\n                        getallarticles(e)\r\n                    }\r\n                }\r\n            )\r\n            .catch(err =>\r\n                console.log(err)          \r\n    \r\n            )\r\n        \r\n    \r\n        \r\n        }\r\n\r\n    // End Status Changer\r\n\r\n    // Edit form\r\n\r\n    const articlevideohandlesubmit = (e) => {\r\n        e.preventDefault();\r\n        let form_data = new FormData();\r\n        form_data.append('id', feedform.urlid);\r\n        form_data.append('mainref', feedform.mainref);\r\n        form_data.append('supersubcat', feedform.superref);\r\n        form_data.append('action', 'updatearticle');\r\n\r\n\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(\"Successfully Status Changed !\", \"success\");\r\n                setArticlemodel(false);\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    const Videoarticlehandlesubmit = (e) => {\r\n        e.preventDefault();\r\n        let form_data = new FormData();\r\n        form_data.append('id', feedform.urlid);\r\n        form_data.append('mainref', feedform.mainref);\r\n        form_data.append('supersubcat', feedform.superref);\r\n        form_data.append('action', 'updatevideo');\r\n\r\n\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                setVideomodel(false);\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n\r\n    // End Edit form\r\n\r\n    // Deleter\r\n    const bulkdeleter = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n\r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', 'Articles');\r\n        let url = 'https://app.kiranvoleti.com/bulkdeltereact';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.msg, \"success\");\r\n                getallarticles(e)\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\", \"error\")\r\n\r\n            )\r\n\r\n    }\r\n    const bulkdeletervideos = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n\r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', 'Videos');\r\n        let url = 'https://app.kiranvoleti.com/bulkdeltereact';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                getallvideos(e)\r\n                tosttrigger(res.data.msg, \"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\", \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    // End Deleter\r\n\r\n\r\n    // ui Elements\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    function tosttrigger(msg, status) {\r\n        if (status === \"success\") {\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } else {\r\n            toast.error(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // End Ui Elements\r\n\r\n\r\n\r\n    return (\r\n        <TopicsContext.Provider value={{\r\n            handleSubmit, rhandleChange, onFileChange, feedform, isspinner,\r\n            feedreadylist, getallfeedstable, handlechange, handleAllChecked,\r\n\r\n            sendforFetch, spin, delpin, topicstatuschange, howmanyfetch, fetchcategory,\r\n\r\n            sendforFetchtable, sendforvideoFetch,\r\n\r\n            allarticles, totalresults, articlevideostatus, articlevideosearch, togglemodel,\r\n            articlemodel, statetoggle,viewtoggle, articlevideoisactive, collectioncountarticle,\r\n            articlevideopage, articlevideoperpage, getallarticles, bulkdeleter,\r\n            articlevideohandlesubmit, articlestatuschange,\r\n            searchquery, paginationcount, handlePageClick, handlePageClickarticle,\r\n            handlePageClickvideo,deletefeeditem,sitequery,authorquery,\r\n\r\n            allvideos, videomodel, getallvideos, bulkdeletervideos,\r\n            togglevideomodel, Videoarticlehandlesubmit, videostatuschange,\r\n            reviewupdate,statusupdate\r\n\r\n\r\n        }}>\r\n\r\n\r\n            {children}\r\n\r\n        </TopicsContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TopicsProvider","import React, { useContext } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\n\r\nfunction Articletable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={topicmanager.handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">Feed Link</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">is_Fetched</th>\r\n                        <th scope=\"col\">parent_id</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.feedreadylist.map((row, index) => (\r\n\r\n                        <tr key={row.id} className={row.id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        data-url={row.feedlist}\r\n                                        onChange={topicmanager.handlechange}\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a href={row.feedlist} target=\"_blank\" rel=\"noopener noreferrer\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.feedlist.substring(0, 60)}</div></a></td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n\r\n                            <td id={row._id}>\r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive ? \r\n                            \r\n                            <input id={row._id} onChange={topicmanager.topicstatuschange} defaultChecked type=\"checkbox\" />\r\n                            \r\n                            : \r\n                            \r\n                            \r\n                            <input  id={row._id} onChange={topicmanager.topicstatuschange} type=\"checkbox\" />\r\n                            \r\n                            \r\n                            }\r\n                            <span className=\"custom-toggle-slider rounded-circle\" />\r\n                            </label>\r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            <td>{row.isfetched  ? \"Fetched\" : \"Not Fetched\"}</td>                            \r\n                            <td>{row.parent_id ? row.parent_id : \"its is parent\"}</td>\r\n                            <td>{row.pubdate}</td>\r\n                            <td>{row.lastmodified}</td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\" data-id={row.id}\r\n                                    onClick={topicmanager.deletefeeditem}\r\n                                >\r\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\" data-id={row.id}></i>\r\n                                </Button>\r\n                                {/* <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row._id}\r\n                                    data-email={row.email}\r\n                                    onClick={toggleeditModal}\r\n                                >\r\n                                    <i className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button> */}\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articletable\r\n","import React, { useContext } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\n\r\nfunction Articlevideotable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);   \r\n\r\n    // const subcatfilter = (valid) =>{\r\n    //     const subcatfiltered = \r\n    //     return subcatfiltered\r\n    // }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={topicmanager.handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">URL</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">cat</th>\r\n                        <th scope=\"col\">s.cat</th>\r\n                        <th scope=\"col\">review</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.allarticles.map((row, index) => (\r\n\r\n                        <tr key={index} className={row.id}>\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        data-url={row.feedlist}\r\n                                        onChange={topicmanager.handlechange}\r\n\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a  href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.title}</div></a></td>\r\n                            <td>\r\n\r\n                            <Media className=\"align-items-center\">\r\n                  <a\r\n                    className=\" mr-3\"\r\n                    href=\"#pablo\"\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                    <img\r\n                      alt=\"...\"\r\n                      height=\"auto\"\r\n                      width=\"150px\"\r\n                      src={row.image}\r\n                    />\r\n                  </a>\r\n                 \r\n                </Media>\r\n\r\n                            </td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n\r\n                            <td id={row._id}>\r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive ? \r\n                            \r\n                            <input id={row._id} onChange={topicmanager.articlestatuschange} defaultChecked type=\"checkbox\" />\r\n                            \r\n                            : \r\n                            \r\n                            \r\n                            <input id={row._id} onChange={topicmanager.articlestatuschange} type=\"checkbox\" />\r\n                            \r\n                            \r\n                            }\r\n                            <span className=\"custom-toggle-slider rounded-circle\" />\r\n                            </label>\r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            \r\n                           <td>\r\n                               {catmanager.subcategories.map(val=>parseInt(val.id)===parseInt(row.subcategory)? val.category:null)}\r\n                           </td>\r\n                           <td>\r\n                           {catmanager.supsubcategories.map(val=>parseInt(val.id)===parseInt(row.supersubcat)? val.category:null)}\r\n                           </td>\r\n\r\n                            <td>{row.isreview ? 'Reviewed' : \"Not Reviewed\"}</td>\r\n                            <td>{row.videopublishedat}</td>\r\n                            <td>{row.lastmodified}</td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                               \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"                                   \r\n                                   \r\n                                    onClick={props.togglemodel}\r\n                                    data-id={row.id}\r\n                                    data-mainref={row.subcategory}\r\n                                    data-superref={row.supersubcat}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articlevideotable\r\n","import React, { useContext } from \"react\";\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\n\r\nfunction Videoarticletable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);   \r\n\r\n    // const subcatfilter = (valid) =>{\r\n    //     const subcatfiltered = \r\n    //     return subcatfiltered\r\n    // }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={topicmanager.handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">URL</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">cat</th>\r\n                        <th scope=\"col\">s.cat</th>\r\n                        <th scope=\"col\">Review</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.allvideos.map((row, index) => (\r\n\r\n                        <tr key={index} className={row.id}>\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        onChange={topicmanager.handlechange}\r\n\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a  href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.title}</div></a></td>\r\n                            <td>\r\n\r\n                            <Media className=\"align-items-center\">\r\n                  <a\r\n                    className=\" mr-3\"\r\n                    href=\"#pablo\"\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                    <img\r\n                      alt=\"...\"\r\n                      height=\"auto\"\r\n                      width=\"150px\"\r\n                      src={row.image}\r\n                    />\r\n                  </a>\r\n                 \r\n                </Media>\r\n\r\n                            </td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n\r\n                            <td id={row._id}>\r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive ? \r\n                            \r\n                            <input id={row._id} onChange={topicmanager.videostatuschange} defaultChecked type=\"checkbox\" />\r\n                            \r\n                            : \r\n                            \r\n                            \r\n                            <input id={row._id} onChange={topicmanager.videostatuschange} type=\"checkbox\" />\r\n                            \r\n                            \r\n                            }\r\n                            <span className=\"custom-toggle-slider rounded-circle\" />\r\n                            </label>\r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            \r\n                           <td>\r\n                               {catmanager.subcategories.map(val=>parseInt(val.id)===parseInt(row.subcategory)? val.category:null)}\r\n                           </td>\r\n                           <td>\r\n                           {catmanager.supsubcategories.map(val=>parseInt(val.id)===parseInt(row.supersubcat)? val.category:null)}\r\n                           </td>\r\n\r\n                            <td>{row.isreview ? 'Reviewed' : 'Not Reviewed'}</td>\r\n                            <td>{row.videopublishedat}</td>\r\n                            <td>{row.lastmodified}</td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                               \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"                                   \r\n                                   \r\n                                    onClick={props.togglevideomodel}\r\n                                    data-id={row.id}\r\n                                    data-mainref={row.subcategory}\r\n                                    data-superref={row.supersubcat}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videoarticletable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Articlevideomodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.topicmanager.articlemodel}\r\n                toggle={props.topicmanager.togglemodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Edit\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.topicmanager.togglemodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                   \r\n\r\n                    <Form role=\"form\" onSubmit={props.topicmanager.articlevideohandlesubmit}>\r\n                        <Input onChange={props.topicmanager.rhandleChange} placeholder=\"Sub Category\" id=\"urlid\" name=\"urlid\" type=\"hidden\" />\r\n                            \r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.subcategories.map((val,index) =>(\r\n                                    parseInt(val.mainref) === parseInt(props.superrefsarticle) ?  \r\n                                    <option key={index} value={val.id}>{val.category}</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.supsubcategories.map((val,index) =>(  \r\n                                    parseInt(val.masterrefrence) === parseInt(props.superrefsarticle) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.superrefsarticle})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.topicmanager.togglemodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Articlevideomodel\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Label,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nfunction Videoarticlemodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.topicmanager.videomodel}\r\n                toggle={props.topicmanager.togglevideomodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Edit Videos\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.topicmanager.togglevideomodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                   \r\n\r\n                    <Form role=\"form\" onSubmit={props.topicmanager.Videoarticlehandlesubmit}>\r\n                        <Input onChange={props.topicmanager.rhandleChange} placeholder=\"Sub Category\" id=\"urlid\" name=\"urlid\" type=\"hidden\" />\r\n                            \r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.subcategories.map((val,index) =>(\r\n                                    parseInt(val.mainref) === parseInt(props.superrefsarticle) ?  \r\n                                    <option key={index} value={val.id}>{val.category}</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.supsubcategories.map((val,index) =>(  \r\n                                    parseInt(val.masterrefrence) === parseInt(props.superrefsarticle) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.superrefsarticle})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.topicmanager.togglevideomodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Videoarticlemodel\r\n","import React, { useState, useContext } from 'react';\r\nimport classnames from \"classnames\";\r\nimport Header from \"components/Headers/Header.js\";\r\n// import \"./Topicforms.css\"\r\nimport PropTypes from 'prop-types';\r\n// reactstrap components\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    CardHeader,\r\n    Container,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Col,\r\n    Label,\r\n    Button,\r\n    InputGroup,\r\n    CustomInput,\r\n    Spinner, Pagination\r\n} from \"reactstrap\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport PaginationComponent from \"react-reactstrap-pagination\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport { TopicsContext } from './contexts/TopicsContext';\r\nimport Articletable from './tables/Articletable';\r\nimport Articlevideotable from './tables/Articlevideotable';\r\nimport Videoarticletable from './tables/Videoarticletable';\r\nimport Articlevideomodel from './models/Articlevideomodel';\r\nimport Videoarticlemodel from './models/Videoarticlemodel';\r\n\r\nfunction Topicsforms(props) {\r\n\r\n    // form state\r\n    const initialFormData = Object.freeze({\r\n        tabs: 1\r\n\r\n    });\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);\r\n\r\n    const [formchangedata, updateFormchangedata] = useState(initialFormData);\r\n    const [tabs, setTabs] = useState(formchangedata.tabs)\r\n\r\n\r\n\r\n\r\n\r\n    const toggleNavs = (e, state, index) => {\r\n        e.preventDefault();\r\n        setTabs(index)\r\n    };\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                <Row>\r\n                    <div className=\"col-md\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">Forms</h3>\r\n                            </CardHeader>\r\n                            <div className=\"nav-wrapper\">\r\n                                <Nav\r\n                                    className=\"nav-fill flex-column flex-md-row\"\r\n                                    id=\"tabs-icons-text\"\r\n                                    pills\r\n                                    role=\"tablist\"\r\n                                >\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 1}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 1\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 1)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-cloud-upload-96 mr-2\" />\r\n                Feed and Links Dumping\r\n              </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 2}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 2\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 2)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-books mr-2\" />\r\n                                            {'Source Table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 3}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 3\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 3)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-book-bookmark mr-2\" />\r\n                                            {'Fetched Articles table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 4}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 4\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 4)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-button-play mr-2\" />\r\n                                            {'Fetched Video table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                </Nav>\r\n                            </div>\r\n                            <Card className=\"shadow\">\r\n                                <CardBody>\r\n                                    <TabContent activeTab={\"tabs\" + tabs}>\r\n                                        <TabPane tabId=\"tabs1\">\r\n\r\n                                            <Form onSubmit={topicmanager.handleSubmit}>\r\n                                                <Row>\r\n                                                    <Col md=\"12\">\r\n                                                        <FormGroup className=\"mb-3\">\r\n                                                            <Label for=\"superref\">Select Topic</Label>\r\n                                                            <Input type=\"select\" name=\"superref\" id=\"superref\"\r\n                                                                onChange={topicmanager.rhandleChange}\r\n                                                            >\r\n                                                                <option>Select Option</option>\r\n                                                                <option value=\"feeds\">Feeds (text data)</option>\r\n                                                                <option value=\"googlenewsfeeds\">Googlenewsfeeds (text data)</option>\r\n                                                                <option value=\"links\">Links (text data)</option>\r\n                                                                <option value=\"channel\">Channel (video data)</option>\r\n                                                                <option value=\"video\">Video (video data)</option>\r\n\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup className=\"mb-3\">\r\n                                                            <Label for=\"iptype\">Select Input Type</Label>\r\n                                                            <Input type=\"select\" name=\"iptype\" id=\"iptype\"\r\n                                                                onChange={topicmanager.rhandleChange}\r\n                                                            >\r\n                                                                <option value=\"multiple\">Multiple</option>\r\n                                                                <option value=\"csv\">Csv File</option>\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n                                                        {topicmanager.feedform.iptype === 'multiple' ?\r\n                                                            <FormGroup>\r\n                                                                <Input\r\n                                                                    id=\"iptextarea\"\r\n                                                                    name=\"iptextarea\"\r\n                                                                    placeholder=\"Enter Links By Enter\"\r\n                                                                    rows=\"3\"\r\n                                                                    type=\"textarea\"\r\n                                                                    onChange={topicmanager.rhandleChange}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                            :\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                                <Label for=\"multirefiles\">Upload csv file</Label>\r\n                                                                <InputGroup className=\"input-group-alternative\">\r\n                                                                    <CustomInput type=\"file\" id=\"multirefiles\" name=\"multirefiles\"\r\n                                                                        onChange={topicmanager.onFileChange} label=\"Yo, pick a CSV file\" />\r\n                                                                </InputGroup>\r\n                                                            </FormGroup>\r\n                                                        }\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Button color=\"primary\" type=\"submit\" disabled={topicmanager.isspinner}>\r\n                                                    {topicmanager.isspinner ? <Spinner size=\"sm\" color=\"secondary\" className=\"mr-1\" /> : null}\r\n                                                    {topicmanager.isspinner ? 'Processing..' : 'Submit'}\r\n                                                </Button>\r\n\r\n                                            </Form>\r\n\r\n\r\n                                        </TabPane>\r\n                                        <TabPane tabId=\"tabs2\">\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n\r\n                                                    <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallfeedstable} >Refresh</Button>\r\n\r\n                                                    {topicmanager.feedform.typeofsubmit === \"feeds\" ||\r\n\r\n                                                        topicmanager.feedform.typeofsubmit === \"googlenewsfeeds\" ?\r\n\r\n                                                        <Button outline color=\"info\" size=\"sm\" onClick={topicmanager.sendforFetch} >Crawl Now (Extract)</Button>\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                    {/* <Button color=\"secondary\" onClick={topicmanager.delpin} >Delete</Button> */}\r\n\r\n\r\n                                            fetched: {topicmanager.howmanyfetch}\r\n                                                    <FormGroup className=\"mt-3\">\r\n                                                        {/* <Label for=\"typeofsubmit\">Select type</Label> */}\r\n                                                        <Input type=\"select\" name=\"typeofsubmit\" bsSize=\"sm\" id=\"typeofsubmit\"\r\n                                                            onChange={topicmanager.rhandleChange}\r\n                                                        >\r\n                                                            <option>Select Option</option>\r\n                                                            <option value=\"\">---------Parent---------</option>\r\n                                                            <option value=\"feeds\">Feeds (text data)</option>\r\n                                                            <option value=\"googlenewsfeeds\">Googlenewsfeeds (text data)</option>\r\n                                                            <option value=\"links\">Links (text data)</option>\r\n                                                            <option value=\"channel\">Channel (video data)</option>\r\n                                                            <option value=\"video\">Video (video data)</option>\r\n                                                            <option value=\"\">---------Children---------</option>\r\n\r\n                                                            <option value=\"genfromgooglefeeds\">Gen from Googlefeeds (text data (child))</option>\r\n                                                            <option value=\"genfromfeeds\">Gen from feeds (text data (child))</option>\r\n                                                            <option value=\"genfromchannel\">Gen from channels (video data (child))</option>\r\n                                                            <option value=\"links\">Links (text data (child))</option>\r\n                                                            <option value=\"video\">Video (video data (child))</option>\r\n\r\n\r\n\r\n                                                        </Input>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <hr />\r\n                                                {/* <Col md='6'>\r\n                                                    <h4 className=\"text-center\">Fetching to Tables</h4>\r\n                                                    <FormGroup className=\"m-3\"> */}\r\n                                                        {/* <Label for=\"fetchcategory\">Select type</Label>\r\n                                                        <Input type=\"select\" name=\"fetchcategory\" id=\"fetchcategory\"\r\n                                                            onChange={topicmanager.rhandleChange}\r\n                                                        >\r\n                                                            <option>Select Option</option>\r\n                                                            {catmanager.categories.map(val => (\r\n                                                                <option key={val.id} value={val.id}>{val.category}</option>\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                        </Input> */}\r\n                                                        {/* {topicmanager.feedform.typeofsubmit === \"video\" ?\r\n                                                            <Button outline color=\"info\" size=\"sm\" onClick={topicmanager.sendforvideoFetch} >Youtube Fetch</Button>\r\n                                                            : <Button outline size=\"sm\" color=\"info\" onClick={topicmanager.sendforFetchtable} >Fetch to Tables</Button>\r\n                                                        } */}\r\n                                                    {/* </FormGroup>\r\n                                                </Col> */}\r\n                                            </Row>\r\n                                            {topicmanager.isspinner ?\r\n                                                <Spinner size=\"md\" color=\"info\" /> : null}\r\n                                            <Articletable />\r\n\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total results: {topicmanager.paginationcount}\r\n                                                    <FormGroup>\r\n                                                        <Input placeholder=\"Type Page number [0-10]\" name=\"page\" id=\"page\" onChange={topicmanager.rhandleChange} />\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.paginationcount}\r\n                                                            pageSize={20}\r\n                                                            onSelect={topicmanager.handlePageClick}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n                                                    </Pagination>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n\r\n\r\n                                        </TabPane>\r\n                                        <TabPane tabId=\"tabs3\">\r\n\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                <FormGroup>\r\n                                                            <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallarticles} >Refresh</Button>\r\n                                                            <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeleter} >Delete</Button>\r\n                                                            <Button outline color=\"info\" size=\"sm\" id=\"Articles\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                            <Button outline color=\"success\" size=\"sm\" id=\"Articles\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                        </FormGroup>\r\n                                                    <Form inline>\r\n                                                       \r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">website: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter website term\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"authorquery\">author: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.authorquery} placeholder=\"Enter authorquery\" id=\"authorquery\" name=\"authorquery\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                        <Label for=\"q\">website: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    Fetched Results: {topicmanager.totalresults} of Total {topicmanager.collectioncountarticle}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                            <Articlevideotable articlemodel={topicmanager.articlemodel} togglemodel={topicmanager.togglemodel} />\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total Pages: {Math.ceil(topicmanager.totalresults / 20)}\r\n\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n\r\n\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        {/* <PaginationComponent\r\n                                                            size=\"sm\"\r\n                                                            totalItems={Math.ceil(topicmanager.totalresults / 20)}\r\n                                                            pageSize={5}\r\n                                                            onSelect={topicmanager.handlePageClickarticle}\r\n                                                            /> */}\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.totalresults}\r\n                                                            pageSize={20}\r\n                                                            onSelect={topicmanager.handlePageClickarticle}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n\r\n                                                    </Pagination>\r\n\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPane>\r\n                                        <TabPane tabId=\"tabs4\">\r\n\r\n                                            <Row>\r\n                                                <Col md=\"12\">  \r\n                                                <FormGroup>\r\n                                                            <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallvideos} >Refresh</Button>\r\n                                                            <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeletervideos} >Delete</Button>\r\n                                                            <Button outline color=\"info\" size=\"sm\" id=\"Videos\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                            <Button outline color=\"success\" size=\"sm\" id=\"Videos\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                        </FormGroup>     \r\n                                                <Form inline>\r\n                                                                                                   \r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">channelid: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter Channelid\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                        <Label for=\"channelid\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    Fetched Results: {topicmanager.paginationcount} of Total {topicmanager.collectioncountarticle}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                            <Videoarticletable videomodel={topicmanager.videomodel} togglevideomodel={topicmanager.togglevideomodel} />\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total Pages: {Math.ceil(topicmanager.paginationcount / 20)}\r\n\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.paginationcount}\r\n                                                            pageSize={20}\r\n                                                            onSelect={topicmanager.handlePageClickvideo}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n\r\n\r\n                                                    </Pagination>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPane>\r\n                                    </TabContent>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Articlevideomodel\r\n                    catmanager={catmanager}\r\n                    topicmanager={topicmanager}\r\n                    superrefsarticle={8}\r\n\r\n                />\r\n                <Videoarticlemodel\r\n                    catmanager={catmanager}\r\n                    topicmanager={topicmanager}\r\n                    superrefsarticle={9}\r\n\r\n                />\r\n\r\n\r\n            </Container>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    // Total number of items\r\n    totalItems: PropTypes.number.isRequired,\r\n    // Number of items displayed each page\r\n    pageSize: PropTypes.number.isRequired,\r\n    // Function to receive the event when a page is selected\r\n    onSelect: PropTypes.func.isRequired,\r\n    // Number of pages being displayed, by default 5\r\n    maxPaginationNumbers: PropTypes.number,\r\n    // Page where the pagination starts, by default 1\r\n    defaultActivePage: PropTypes.number,\r\n    // Change text of \"First\" button\r\n    firstPageText: PropTypes.string,\r\n    // Change text of \"Previous\" button\r\n    previousPageText: PropTypes.string,\r\n    // Change text of \"Next\" button\r\n    nextPageText: PropTypes.string,\r\n    // Change text of \"Last\" button\r\n    lastPageText: PropTypes.string,\r\n    // Changes the size of the component. Values: \"sm\" and \"lg\". Without the prop the size is normal.\r\n    size: PropTypes.string\r\n}\r\nexport default Topicsforms\r\n","import Index from \"views/Index.js\";\nimport Userslist from \"views/examples/Userslist.js\";\nimport Categories from \"views/examples/Categories.js\";\nimport Subcategories from \"views/examples/Subcategories.js\";\nimport Supsubcategories from \"views/examples/Supsubcategories.js\";\nimport Topicsforms from \"views/examples/Topicsforms.js\";\n// import Icons from \"views/examples/Icons.js\";\n\nvar routes = [\n  // {\n  //   path: \"/index\",\n  //   name: \"Dashboard\",\n  //   icon: \"ni ni-tv-2 text-primary\",\n  //   component: Index,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"ni ni-planet text-blue\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"ni ni-pin-3 text-orange\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/user-profile\",\n  //   name: \"User Profile\",\n  //   icon: \"ni ni-single-02 text-yellow\",\n  //   component: Profile,\n  //   layout: \"/admin\"\n  // },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Userslist,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/categories/topics\",\n    name: \"Main Categories (topics)\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Categories,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/categories/subcategories\",\n    name: \"Sub Categories\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Subcategories,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/categories/supersubcategories\",\n    name: \"Supersub Categories\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Supsubcategories,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/categories/manage\",\n    name: \"Topics\",\n    icon: \"ni ni-collection text-gray\",\n    component: Topicsforms,\n    layout: \"/admin\"\n  },\n  // {\n  //   path: \"/login\",\n  //   name: \"Login\",\n  //   icon: \"ni ni-key-25 text-info\",\n  //   component: Login,\n  //   layout: \"/auth\"\n  // },\n  // {\n  //   path: \"/register\",\n  //   name: \"Register\",\n  //   icon: \"ni ni-circle-08 text-pink\",\n  //   component: Register,\n  //   layout: \"/auth\"\n  // }\n];\nexport default routes;\n","\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/argon-react.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar\n          className=\"navbar-top navbar-horizontal navbar-dark\"\n          expand=\"md\"\n        >\n          <Container className=\"px-4\">\n            <NavbarBrand to=\"/\" tag={Link}>\n              <img alt=\"...\" src={require(\"assets/img/brand/argon-react-white.png\")} />\n            </NavbarBrand>\n            <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n              <div className=\"navbar-collapse-header d-md-none\">\n                <Row>\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    <Link to=\"/\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/brand/argon-react.png\")}\n                      />\n                    </Link>\n                  </Col>\n                  <Col className=\"collapse-close\" xs=\"6\">\n                    <button\n                      className=\"navbar-toggler\"\n                      id=\"navbar-collapse-main\"\n                    >\n                      <span />\n                      <span />\n                    </button>\n                  </Col>\n                </Row>\n              </div>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                    <i className=\"ni ni-planet\" />\n                    <span className=\"nav-link-inner--text\">Dashboard</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/register\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-circle-08\" />\n                    <span className=\"nav-link-inner--text\">Register</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/login\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-key-25\" />\n                    <span className=\"nav-link-inner--text\">Login</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/admin/user-profile\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-single-02\" />\n                    <span className=\"nav-link-inner--text\">Profile</span>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </UncontrolledCollapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  © 2018{\" \"}\n                  <a\n                    className=\"font-weight-bold ml-1\"\n                    href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    Creative Tim\n                  </a>\n                </div>\n              </Col>\n              <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Creative Tim\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com/presentation?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      About Us\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"http://blog.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      Use these awesome forms to login or create new account in\n                      your project for free.\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport UsersProvider from \"./views/examples/contexts/UserContext\"\nimport CategoryProvider from \"./views/examples/contexts/CategoryContext\"\nimport TopicsProvider from \"./views/examples/contexts/TopicsContext\"\n\nReactDOM.render(\n  <UsersProvider>\n  <CategoryProvider>\n    <TopicsProvider>\n  <BrowserRouter>\n    <Switch>\n    <Route exact path=\"/admin/categories/:token\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/manage/:token\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/users\" render={props => <AdminLayout {...props} />} />\n      \n      <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n      \n      <Redirect from=\"/\" to=\"/admin/users\" />\n    </Switch>\n  </BrowserRouter>\n  </TopicsProvider>\n  </CategoryProvider>\n  </UsersProvider>,\n  document.getElementById(\"root\")\n);\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/user.e4867e9d.jpg\";"],"sourceRoot":""}