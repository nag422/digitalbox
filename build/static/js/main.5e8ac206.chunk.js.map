{"version":3,"sources":["assets/img/brand/digitalbox.png","assets/img/theme/team-1-800x800.jpg","assets/img/brand/argon-react-white.png","assets/img/brand/argon-react.png","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","components/Headers/Header2.js","views/Index.js","views/examples/tables/Userlisttable.js","views/examples/tables/Paginationtable.js","views/examples/contexts/UserContext.js","views/examples/Userslist.js","views/examples/tables/Tagstable.js","views/examples/Subscribelist.js","views/examples/contexts/CategoryContext.js","views/examples/tables/Categoriestable.js","views/examples/models/Categorymodel.js","views/examples/Categories.js","views/examples/tables/Subcategoriestable.js","views/examples/models/Subcategorymodel.js","views/examples/Subcategories.js","views/examples/tables/Supsubcategoriestable.js","views/examples/models/Supsubcategorymodel.js","views/examples/Supsubcategories.js","views/examples/contexts/TopicsContext.js","views/examples/tables/Articletable.js","views/examples/tables/Articlevideotable.js","views/examples/tables/Toolsvideotable.js","views/examples/tables/Videoarticletable.js","views/examples/models/Articlevideomodel.js","views/examples/models/Videoarticlemodel.js","views/examples/models/ToolsModel.js","views/examples/Topicsforms.js","views/examples/Lettersubscription.js","routes.js","layouts/Admin.js","layouts/Admindash.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","index.js","variables/charts.js","assets/img/theme/user.jpg"],"names":["module","exports","AdminNavbar","React","Component","render","Navbar","className","expand","id","Container","fluid","to","this","props","brandText","Form","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","type","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","DropdownMenu","right","DropdownItem","header","tag","divider","href","Footer","Row","Col","xl","rel","target","NavItem","NavLink","Sidebar","constructor","super","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","layout","path","NavLinkRRD","onClick","activeClassName","style","display","displayproperty","icon","name","activeRoute","bind","routeName","location","pathname","indexOf","navbarBrandProps","bgColor","logo","innerLink","Link","outterLink","NavbarBrand","imgAlt","imgSrc","aria-labelledby","e","preventDefault","Collapse","isOpen","xs","aria-label","defaultProps","Header","userscount","lg","Card","CardBody","CardTitle","articlescount","videoscount","toolscount","yesterdayarticles","yesterdayvideos","yesterdaytools","Index","toggleNavs","index","activeNav","chartExample1Data","componentDidMount","a","FormData","append","headers","getCookie","axios","get","then","res","data","articles","videos","tools","users","catch","err","console","log","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","currentpath","window","Chart","parseOptions","chartOptions","CardHeader","pills","classnames","active","data-toggle","Alert","propTypes","PropTypes","string","closeClassName","color","bool","toggle","func","oneOfType","fade","Userlisttable","useState","swalert","exampleModal","setExampleModal","editModal","setEditModal","alertmsgcolor","setAlertmsgcolor","alertmsg","setAlertmsg","userstate","setUserstate","initialFormData","Object","freeze","username","email","password","password1","phone","capability","datacategory","initialeditingform","_id","formchangedata","updateFormchangedata","editingform","updateEditingform","handleChange","value","ehandleChange","statuschange","form_data","checked","config","post","tosttrigger","adminstatus","fetchusers","subscribestatechange","toggleModal","setIsalert","toggleeditModal","dataset","handlechange","event","userstateaction","nowobj","isChecked","filter","val","msg","status","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","newestOnTop","rtl","pauseOnFocusLoss","md","Button","size","area-hidden","deleteUser","totalpages","Table","responsive","onChange","allelm","querySelectorAll","forEach","elm","setAttribute","removeAttribute","htmlFor","scope","row","is_subscribed","userinfo","phonenumber","is_active","defaultChecked","is_superuser","is_staff","data-id","deleteUserind","aria-hidden","data-username","data-email","Modal","data-dismiss","isalert","Spinner","role","onSubmit","options","l","selected","push","multiple","Paginationtable","UsersContext","createContext","QueryContext","PaginationContext","UsersProvider","children","rows","setUsers","q","setQ","currentpage","setCurrentpage","setTotalpages","useEffect","total","Provider","toLowerCase","Userslist","useContext","localStorage","getItem","history","paginate","fetchfromdatabase","list","Pagination","totalItems","pageSize","onSelect","maxPaginationNumbers","defaultActivePage","firstPageText","previousPageText","nextPageText","lastPageText","CardFooter","Tagstable","handleAllChecked","tags","handleCheckchange","ischecked","Subscribelist","setTags","setStateallchecked","taglist","setTaglist","fetchtags","resptags","outline","valid","valchecked","somesubsupdated","toString","respvideos","CategoryContext","CategoryProvider","match","categories","setCategories","subcategories","setSubcategories","supsubcategories","setSupsubcategories","setSwlert","catmodel","setCatmodel","subcatmodel","setSubcatmodel","supsubcatmodel","setSupsubcatmodel","updatecatmodel","setUpdatecatmodel","isspinner","setIsspinner","categorystate","setCategorystate","category","mainref","superref","maincats","subcats","supsubcats","addsubcategorymodel","addsupsubcategorymodel","deleteThisGoal","delsid","handleSubmit","prevCategories","indexkey","rhandleChange","categorytateaction","updatehandlesubmit","subcathandleSubmit","prevSubcategories","subcatgorydeletebutton","parseInt","supsubcathandleSubmit","prevSupsubcategories","masterrefrence","refrence","supsubcatgorydeletebutton","Categoriestable","addcatmodeltrigger","cats","data-category","Categorymodel","Categories","catmanager","trys","useRouteMatch","params","token","catref","delete","Subcategoriestable","refcats","ris","Subcategorymodel","Label","for","Subcategories","Supsubcategoriestable","masterefcat","Supsubcategorymodel","Supsubcategories","TopicsContext","TopicsProvider","Topicsform","iptype","iptextarea","urlid","typeofsubmit","multirefiles","perpage","page","start_from","feedform","updateFeedform","feedreadylist","setFeedreadylist","setTopicstate","fetchcategory","setFetchcategory","howmanyfetch","setHowmanyfetch","articlevideoperpage","articlevideopage","articlevideosearch","setArticlevideosearch","articlevideoauthor","setArticlevideoauthor","articlevideostatus","articlevideoisactive","setArticlevideoisactive","articlevideoisview","setArticlevideoisview","articlevideochannel","setArticlevideochannel","totalresults","setTotalresults","allarticles","setAllarticles","articlemodel","setArticlemodel","videomodel","setVideomodel","toolmodel","setToolmodel","collectioncountarticle","setCollectioncountarticle","paginationcount","setPaginationcount","allvideos","setAllvideos","setTools","collectioncounttools","setCollectioncounttools","totaltool","stateallchecked","dynotoollink","setDynotoollink","dynotooltext","setDynotooltext","handlePageClick","feeds","spin","setSpin","sendforFetch","ispin","triggerfeedsfetch","sendchannelfetch","prevHowmany","successdatalength","sendforFetchtable","reactfetch","handlePageClickarticle","resparticles","reviewupdate","tablename","someavideosupdated","isreview","somearticlesupdated","statusupdate","message","includes","isactive","sometoolsupdated","bulkdeleter","bulkdeletervideos","somevideosupdated","bulkdeletertools","onUploadProgress","progressEvent","loaded","percent","Math","floor","keys","onFileChange","files","getallfeedstable","respfeeds","alert","resptools","delpin","someval","topicstatuschange","togglemodel","statetoggle","viewtoggle","getallarticles","articlevideohandlesubmit","articlestatuschange","searchquery","handlePageClickvideo","collectioncountvideos","deletefeeditem","sitequery","authorquery","getallvideos","togglevideomodel","Videoarticlehandlesubmit","videostatuschange","getalltools","toggletoolmodel","toolhandlesubmit","handlePageClicktools","handleAllCheckedArticles","handleCheckchangeArticles","handleAllCheckedVideos","handleCheckchangeVideos","handleAllCheckedTools","handleAllCheckedSource","handleCheckchangeTools","handleCheckchangeSource","somefeedsupdated","dynolinktextupdater","title","URL","toolstatuschange","Articletable","topicmanager","data-url","feedlist","width","wordWrap","whiteSpace","isfetched","parent_id","pubdate","lastmodified","spinid","Articlevideotable","height","image","subcategory","supersubcat","videopublishedat","data-mainref","data-superref","Toolsvideotable","Videoarticletable","views","date","Articlevideomodel","superrefsarticle","Videoarticlemodel","ToolsModel","PaginationComponent","number","isRequired","Topicsforms","tabs","setTabs","aria-selected","TabContent","activeTab","TabPane","tabId","CustomInput","label","disabled","bsSize","inline","ceil","Lettersubscription","setTitle","setScrolling","bannerlink","setBannerlink","subject","setSubject","datatype","setDatatype","pagenumber","setPagenumber","setTotalcount","subvideos","setSubvideos","setMultirefiles","setList","videolist","setVideolist","toollist","setToollist","observer","useRef","lastElmRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","dailyvideos","totalcount","pagevalue","getElementById","prevPagenumber","prevSubvideos","Set","deassignids","tempraylist","outputlist","n","handleSubscribe","ref","component","Admin","getRoutes","getBrandText","issuperuser","setItem","isstaff","componentDidUpdate","documentElement","scrollTop","scrollingElement","refs","mainContent","from","AdminFooter","Admindash","UncontrolledCollapse","toggler","Login","Auth","body","classList","add","componentWillUnmount","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","x","y","points","AuthFooter","ReactDOM","exact","elements","Rectangle","prototype","draw","left","top","bottom","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","default","primary","secondary","info","danger","warning","chartExample1","scales","yAxes","gridLines","zeroLineColor","ticks","callback","tooltips","callbacks","item","datasets","datasetIndex","yLabel","content","data1","canvas","labels","data2","defaults","global","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","padding","legend","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent","chartExample2","maxBarThickness"],"mappings":"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","file":"static/js/main.5e8ac206.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/digitalbox.69e8db5d.png\";","module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/argon-react-white.275a2629.png\";","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {this.props.brandText}\n            </Link>\n            <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n              <FormGroup className=\"mb-0\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"fas fa-search\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n            </Form>\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/theme/user.jpg\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                        Admin\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  {/* <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-settings-gear-65\" />\n                    <span>Settings</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-calendar-grid-58\" />\n                    <span>Activity</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-support-16\" />\n                    <span>Support</span>\n                  </DropdownItem> */}\n                  <DropdownItem divider />\n                  <DropdownItem href=\"/accounts/users/logout\">\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"6\">\n            <div className=\"copyright text-center text-xl-left text-muted\">\n              © 2020{\" \"}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"https://www.kiranvoleti.com/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Kiran Voleti\n              </a>\n            </div>\n          </Col>\n\n          <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink\n                  href=\"https://www.kiranvoleti.com/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Kiran Voleti\n                </NavLink>\n              </NavItem>\n\n             </Nav>\n          </Col>\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n \n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n            style={{display:prop.displayproperty}}\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}            \n           </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nclass Header extends React.Component {\n \n  render() {\n    \n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              <Row>\n              {this.props.userscount >= 0 ?\n              <>\n              <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Users\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.userscount}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Articles\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.articlescount}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Videos\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.videoscount}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Tools\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.toolscount}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mt-1 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Yesterday Articles\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.yesterdayarticles}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mt-1 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Yesterday Videos\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.yesterdayvideos}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mt-1 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Yesterday Tools\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.yesterdaytools}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n                \n                </>\n                :\n                null\n              }\n               </Row>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","\nimport React from \"react\";\n\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\nclass Header2 extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            \n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header2;\n","import React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\nimport axios from 'axios';\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\nimport Header2 from \"components/Headers/Header2.js\";\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\",\n      videos:'',\n      articles:'',\n      users:null,\n      yesterdayarticles:'',\n      yesterdayvideos:'',\n      currentpath:this.props.location.pathname\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n  };\n\n \n\n  \n\n  componentDidMount = async (e) => {\n \n    const url=\"https://app.kiranvoleti.com/adminindex\";\n    let form_data = new FormData();\n    form_data.append('page', e);\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': this.getCookie('csrftoken')\n      }\n    }\n    await axios.get(url)\n    .then(res=>{            \n        \n        this.setState({\n          articlescount: res.data.articles,\n          videoscount: res.data.videos,\n          toolscount: res.data.tools,\n          yesterdaytools:res.data.yesterdaytools,\n          yesterdayarticles:res.data.yesterdayarticles,\n          yesterdayvideos:res.data.yesterdayvideos,\n          userscount:res.data.users\n\n        });\n                          \n        \n    })\n    .catch(err=>{\n        console.log(err)\n        \n    })\n\n  }\n  getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n  \n  render() {\n    return (\n      <>\n      \n        <Header \n        articlescount = {this.state.articlescount} \n        videoscount= {this.state.videoscount}\n        toolscount= {this.state.toolscount}\n        yesterdaytools={this.state.yesterdaytools}\n        yesterdayarticles={this.state.yesterdayarticles}\n        yesterdayvideos={this.state.yesterdayvideos}\n        userscount={this.state.userscount}       \n        \n        />\n        \n\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Overview\n                      </h6>\n                      <h2 className=\"text-white mb-0\">Sales value</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  {/* <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div> */}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          </Container>\n      \n      </>\n    );\n  }\n}\n\nexport default Index;\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Userlisttable = (props) => {\r\n    const [swalert, setSwlert] = useState(\"\");\r\n    const [exampleModal, setExampleModal] = useState(false);\r\n    const [editModal, setEditModal] = useState(false);\r\n    // const [isalert, setIsalert] = useState(false);\r\n    const [alertmsgcolor, setAlertmsgcolor] = useState(\"info\");\r\n    const [alertmsg, setAlertmsg] = useState(\"\");\r\n    const [userstate, setUserstate] = useState([]);\r\n\r\n\r\n\r\n\r\n    // form state\r\n    const initialFormData = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password1: \"\",\r\n        phone: \"\",\r\n        capability: \"\",\r\n        datacategory:\"\"\r\n    });\r\n\r\n    const initialeditingform = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        datacategory:\"\",\r\n        _id: \"\",\r\n        capability: \"\",\r\n    });\r\n\r\n    const [formchangedata, updateFormchangedata] = React.useState(initialFormData);\r\n    const [editingform, updateEditingform] = React.useState(initialeditingform);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        updateFormchangedata({\r\n            ...formchangedata,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n\r\n    const rhandleChange = (e) => {\r\n\r\n        updateFormchangedata({\r\n            ...formchangedata,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.id.trim()\r\n\r\n        });\r\n    };\r\n\r\n    const ehandleChange = (e) => {\r\n\r\n        updateEditingform({\r\n            ...editingform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n    const optionhandleChange = (e) => {\r\n\r\n        var options = e.target.options;\r\n            var value = [];\r\n            for (var i = 0, l = options.length; i < l; i++) {\r\n              if (options[i].selected) {\r\n                value.push(options[i].value);\r\n              }\r\n            }\r\n\r\n        updateEditingform({\r\n            ...editingform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: value\r\n\r\n        });\r\n    };\r\n\r\n    \r\n\r\n    const ehandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let form_data = new FormData();        \r\n\r\n        form_data.append('email', editingform.email);        \r\n        form_data.append('id', editingform._id);\r\n        form_data.append('phone', editingform.phone);\r\n        form_data.append('datacategory', editingform.datacategory);\r\n        \r\n        let url = 'https://app.kiranvoleti.com/admin/edituser';\r\n        // console.log(editingform)\r\n        // return\r\n        \r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                setEditModal(false)\r\n                props.fetchusers()              \r\n                \r\n\r\n            })\r\n            .catch(err =>{\r\n                setEditModal(false)\r\n                console.log(err)\r\n            }\r\n            )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        if (formchangedata.password === formchangedata.password1 && formchangedata.password.length < 5) {\r\n            props.setIsalert(!props.isalert)\r\n            setAlertmsg(\"plase check your password\");\r\n            setAlertmsgcolor('danger');\r\n\r\n        }\r\n        let form_data = new FormData();\r\n        form_data.append('username', formchangedata.email);\r\n        form_data.append('pwd', formchangedata.password);\r\n        form_data.append('email', formchangedata.email);\r\n        form_data.append('userrole', formchangedata.capability);\r\n        form_data.append('phonenumber', formchangedata.phone);\r\n        console.log(formchangedata)\r\n        \r\n        let url = 'https://app.kiranvoleti.com/saveuser';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                // 'X-CSRFToken': this.getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                toggleModal()\r\n                props.fetchusers()\r\n\r\n            })\r\n            .catch(err =>{\r\n                toggleModal()\r\n                console.log(err)\r\n            }\r\n                \r\n            )\r\n        // Object.entries(formData).map(entry => { \r\n        //     // let key = entry[0]; \r\n        //     // let value = entry[1]; \r\n        //     return console.log(entry); \r\n        // }); \r\n\r\n        // toggleModal(\"exampleModal\")\r\n        // ... submit to API or something\r\n    };\r\n    // form state\r\n    const statuschange = (e)=>{\r\n        \r\n        \r\n        let form_data = new FormData();\r\n        form_data.append('user_id', e.target.id);\r\n        form_data.append('is_active', e.target.checked);\r\n        \r\n        let url = 'https://app.kiranvoleti.com/getuserupdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                tosttrigger(\"Successfully Status Changed !\",\"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\",\"error\")\r\n                \r\n            )    \r\n\r\n    }\r\n\r\n    const adminstatus = (e)=>{\r\n        \r\n        \r\n        let form_data = new FormData();\r\n        form_data.append('user_id', e.target.id);\r\n        form_data.append('capability', e.target.value);\r\n        console.log(e.target.id,e.target.value)\r\n        \r\n        let url = 'https://app.kiranvoleti.com/getuserupdateadmin';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                tosttrigger(\"Successfully Status Changed !\",\"success\");\r\n                props.fetchusers()\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\",\"error\")\r\n                \r\n            )    \r\n\r\n    }\r\n    // Subscribe change\r\n\r\n    const subscribestatechange = (e)=>{\r\n        \r\n        \r\n        let form_data = new FormData();\r\n        form_data.append('user_id', e.target.id);\r\n        form_data.append('capability', e.target.value);\r\n        console.log(e.target.id,e.target.value)\r\n        \r\n        let url = 'https://app.kiranvoleti.com/updatesubscribestatus';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                tosttrigger(\"Successfully Status Changed !\",\"success\");\r\n                props.fetchusers()\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\",\"error\")\r\n                \r\n            )    \r\n\r\n    }\r\n\r\n    // Subscribe change end\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n          const cookies = document.cookie.split(';');\r\n          for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return cookieValue;\r\n      }\r\n    const toggleModal = () => {\r\n        setExampleModal(!exampleModal);\r\n        props.setIsalert(false)\r\n    };\r\n    const toggleeditModal = async (e) => {\r\n        \r\n        const initialeditingform = {\r\n            username: e.target.dataset.username,\r\n            email: e.target.dataset.email,\r\n            _id: e.target.dataset.id\r\n\r\n        };\r\n        await updateEditingform(initialeditingform)\r\n        setEditModal(!editModal);\r\n        props.setIsalert(false)\r\n        console.log(editingform)\r\n    };\r\n\r\n    // Checkbox\r\n    const handleAllChecked = (event) => {\r\n        \r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        if (event.target.checked) {\r\n            allelm.forEach(elm => {\r\n                elm.setAttribute(\"checked\", event.target.checked)\r\n            })\r\n\r\n        }\r\n        else {\r\n            allelm.forEach(elm => {\r\n                elm.removeAttribute(\"checked\")\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handlechange = (event) => {\r\n        let userstateaction = userstate;\r\n        function ischeckf(val) {\r\n            if (val._id === event.target.id) {\r\n                return val !== event.target.id;\r\n            }\r\n        }\r\n        if (event.target.checked) {\r\n            let nowobj = [{ _id: event.target.id, isChecked: event.target.checked }]\r\n            setUserstate([...userstateaction, ...nowobj]);\r\n        } else {\r\n            let nowobj = userstateaction.filter(ischeckf)\r\n            setUserstate([...nowobj]);\r\n        }\r\n        \r\n    }\r\n    // end checkbox\r\n\r\n    \r\n    function tosttrigger(msg,status){\r\n        if(status === \"success\"){\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            }else{\r\n                toast.error(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n}\r\n        \r\n    }\r\n    // function hideSwalert() {\r\n    //     setSwlert(\"\");\r\n    // }\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            {swalert}\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Button trigger modal */}\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"exampleModal\")}\r\n                    >\r\n                        Add User<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteUser}\r\n                    >\r\n                        Delete<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            Total Records: {props.totalpages}\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n\r\n                        {/* <th scope=\"col\">Name</th> */}\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Subscribed</th>\r\n                        <th scope=\"col\">Mobile</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Capability</th>\r\n                        <th scope=\"col\">Permission</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.users.map(row => (\r\n\r\n                        <tr key={row._id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n                                <Media className=\"align-items-center\">\r\n                                    <a\r\n                                        className=\"avatar rounded-circle mr-3\"\r\n                                        href=\"#pablo\"\r\n                                        onClick={e => e.preventDefault()}\r\n                                    >\r\n                                        <img\r\n                                            alt=\"...\"\r\n                                            src={require(\"assets/img/theme/user.jpg\")}\r\n                                        />\r\n                                    </a>\r\n                                    <Media>\r\n                                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                                            <input\r\n                                                className=\"custom-control-input\"\r\n                                                id={row._id}\r\n                                                type=\"checkbox\"\r\n                                                name=\"childbox\"\r\n                                                onChange={handlechange}\r\n\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor={row._id}>\r\n\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </Media>\r\n                                </Media>\r\n                            </th>\r\n                            \r\n                            <td>{row.email}</td>\r\n                            <td>{row.is_subscribed ? 'Subscribed':'Not Subscribed'}\r\n                            \r\n                            <select className=\"ml-2\" id={row.email} name=\"subscribestate\" onChange={subscribestatechange}>\r\n                                    <option value=\"y\">--is_subscribed--</option>\r\n                                    <option value=\"y\">Subscribe</option>\r\n                                    <option value=\"n\">Unsubscribe</option>\r\n                                </select>\r\n                            </td>\r\n                            {\r\n                                row.userinfo.length > 0 ? row.userinfo.map((val) => (\r\n\r\n                                    <td key={val.id}>{val.phonenumber}</td>\r\n                                    \r\n\r\n\r\n                                )) : <td key={row.email}>----</td>}\r\n\r\n\r\n                    \r\n                                \r\n                                <td id={row._id}>\r\n                                <label className=\"custom-toggle\">\r\n                                {row.is_active ? \r\n                                \r\n                                <input id={row._id} onChange={statuschange} defaultChecked type=\"checkbox\" />\r\n                                \r\n                                : \r\n                                \r\n                                \r\n                                <input id={row._id} onChange={statuschange} type=\"checkbox\" />\r\n                                \r\n                                \r\n                                }\r\n                                <span className=\"custom-toggle-slider rounded-circle\" />\r\n                              </label>\r\n                                </td>\r\n                                <td>\r\n                                {row.is_superuser ? \"Admin\" : row.is_staff ? \"Staff\": \"User\"}\r\n                                <select className=\"ml-2\" id={row._id} name=\"capability\" onChange={adminstatus}>\r\n                                    <option value=\"u\">--Role--</option>\r\n                                    <option value=\"u\">User</option>\r\n                                    <option value=\"s\">Staff</option>\r\n                                    <option value=\"a\">Admin</option>\r\n                                </select>\r\n                                \r\n                            </td>\r\n                                \r\n                                {\r\n                                row.userinfo.length > 0 ? row.userinfo.map((val) => (\r\n                                    \r\n                                    <td key={row.email}>{val.datacategory}</td>                                   \r\n                                    \r\n\r\n\r\n                                )) : <td key={row.id}>----</td>}\r\n\r\n                            \r\n\r\n\r\n                           \r\n                            \r\n\r\n                            <td>\r\n\r\n                                <Button data-id={row._id} color=\"danger\" size=\"sm\" type=\"button\"\r\n                                    onClick={props.deleteUserind}\r\n                                >\r\n                                    <i data-id={row._id} className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row.id}\r\n                                    data-email={row.email}                                \r\n                                    onClick={toggleeditModal}\r\n                                >\r\n                                    <i className=\"fas fa-pen\"                                    \r\n                                    data-username={row.username}\r\n                                    data-id={row.id}\r\n                                    data-email={row.email}\r\n                                    aria-hidden=\"true\"></i>\r\n                                </Button>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={exampleModal}\r\n                toggle={() => toggleModal(\"exampleModal\")}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New User\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"exampleModal\")}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={alertmsgcolor}>\r\n                            {alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={handleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-user\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Username\" id=\"username\" name=\"username\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-email-83\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Email\" id=\"email\" name=\"email\" type=\"email\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fa fa-phone\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Phone\" id=\"phone\" name=\"phone\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-lock-circle-open\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Password\" id=\"password\" name=\"password\" type=\"password\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-lock-circle-open\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Confirm Password\" id=\"password1\" name=\"password1\" type=\"password\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fa fa-bars\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>                                \r\n                                <Input onChange={handleChange}  \r\n                                        id=\"capability\" name=\"capability\" type=\"select\">\r\n                                        <option>Select Option</option>                                        \r\n                                        <option value=\"u\">User</option>\r\n                                        <option value=\"s\">Staff</option>\r\n                                        <option value=\"a\">Admin</option>\r\n\r\n                                </Input>\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={() => toggleModal(\"exampleModal\")}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n            {/* Modal for editing */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={editModal}\r\n                toggle={toggleeditModal}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"editmodal\">\r\n                        Edit User\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={toggleeditModal}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={alertmsgcolor}>\r\n                            {alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={ehandleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-user\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={ehandleChange}\r\n                                    value={editingform.username}\r\n                                    placeholder=\"Username\" id=\"username\" name=\"username\"\r\n                                    type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-email-83\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={ehandleChange}\r\n                                    value={editingform.email}\r\n                                    placeholder=\"Email\" id=\"email\" name=\"email\" type=\"email\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fa fa-phone\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                \r\n                                <Input onChange={ehandleChange}\r\n                                    value={editingform.phone}\r\n                                    placeholder=\"Phone\" id=\"phone\" name=\"phone\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fa fa-bars\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>                                \r\n                                <Input onChange={optionhandleChange} multiple \r\n                                     id=\"datacategory\" name=\"datacategory\" type=\"select\">\r\n                                        {/* <option>Select Option</option> */}\r\n                                        <option value=\"all\">All</option>\r\n                                        <option value=\"articles\">Articles</option>\r\n                                        <option value=\"videos\">Videos</option>\r\n                                        <option value=\"tools\">Tools</option>\r\n\r\n                                </Input>\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        \r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={toggleeditModal}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    closeClassName: PropTypes.string,\r\n    color: PropTypes.string, // default: 'success'\r\n    isOpen: PropTypes.bool,  // default: true\r\n    toggle: PropTypes.func,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    fade: PropTypes.bool, // default: true\r\n    // Controls the transition of the alert fading in and out\r\n    // See Fade for more details\r\n}\r\nexport default Userlisttable\r\n","import React from 'react'\r\nimport {\r\n    CardFooter,\r\n    Pagination\r\n} from \"reactstrap\";\r\n\r\nfunction Paginationtable() {\r\n    return (\r\n        <>\r\n\r\n            <CardFooter className=\"py-4\">\r\n                <nav aria-label=\"...\">\r\n                    <Pagination\r\n                        className=\"pagination justify-content-end mb-0\"\r\n                        listClassName=\"justify-content-end mb-0\"\r\n                    >\r\n                       \r\n                    </Pagination>\r\n                </nav>\r\n            </CardFooter>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Paginationtable\r\n","import React, {useState,createContext, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nexport const UsersContext = createContext();\r\nexport const QueryContext = createContext();\r\nexport const PaginationContext = createContext();\r\nexport const UserslengthContext = createContext();\r\n\r\n\r\nconst UsersProvider = ({children})=> {\r\n    const [users, setUsers] = useState([])\r\n    const [q, setQ] = useState('');\r\n    const [currentpage, setCurrentpage] = useState(1);\r\n    const [totalpages, setTotalpages] = useState(1);\r\n    \r\n    \r\n    \r\n    const url = \"https://app.kiranvoleti.com/getuserlist\";\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchusers = async () => {     \r\n                   \r\n\r\n       \r\n        await axios.get(url)\r\n        .then(res=>{            \r\n            setUsers(res.data.users);\r\n            // setCurrentpage(prevCurrentpage => prevCurrentpage+1)\r\n            setTotalpages(res.data.total);           \r\n                    \r\n            \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    fetchusers()\r\n    },[])\r\n\r\n\r\n    // Get Current Posts\r\n  \r\n    // const postsperpage = 5;\r\n    // const indexoflastpost = currentpage * postsperpage;\r\n    // const indexoffirstpost = indexoflastpost - postsperpage;\r\n    // const currentposts = users.slice(indexoffirstpost,indexoflastpost);\r\n\r\n    function search(rows) {\r\n        return rows.filter(\r\n            (row) =>\r\n            row.username.toLowerCase().indexOf(q) > -1 ||\r\n            row.email.toLowerCase().indexOf(q) > -1\r\n        )\r\n    }\r\n\r\n    function sorting(forsort){\r\n        // return forsort.sort((a,b) => b['id'] - a['id'])\r\n        return forsort.sort((a,b) => (\r\n            -1 * a['name'].localeCompare(b['name'])\r\n        ))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <UsersContext.Provider value={[search(users),setUsers]}>        \r\n        <QueryContext.Provider value={[q,setQ]}>\r\n        <PaginationContext.Provider value={{currentpage, setCurrentpage, totalpages,setTotalpages}}>\r\n        \r\n          \r\n            {children}\r\n        \r\n        </PaginationContext.Provider>\r\n        </QueryContext.Provider>\r\n        \r\n        </UsersContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default UsersProvider","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n// reactstrap components\nimport {\n\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Col,\n  Spinner,\n  CardFooter,\n  Button,\n  Pagination\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport Userlisttable from \"./tables/Userlisttable\";\nimport PaginationComponent from \"react-reactstrap-pagination\";\nimport Paginationtable from \"./tables/Paginationtable\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { UsersContext, QueryContext, PaginationContext } from './contexts/UserContext';\nimport { Redirect } from 'react-router-dom'\nconst Userslist = (props) => {\n  const [users, setUsers] = useContext(UsersContext);\n  const [q, setQ] = useContext(QueryContext);\n  const {currentpage, setCurrentpage, totalpages,setTotalpages} = useContext(PaginationContext); \n  const [isalert,setIsalert] = useState(false)\n  \n  useEffect(() => {\n    if(window.localStorage.getItem('usertype') !== \"superuser\"){\n      props.history.push('/admin/categories/manage')\n    }\n    \n  }, [])\n  const paginate = async (e) => {   \n    \n    const url=\"https://app.kiranvoleti.com/getuserlist\";\n    let form_data = new FormData();\n    form_data.append('page', e);\n    setCurrentpage(e)\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          // 'X-CSRFToken': this.getCookie('csrftoken')\n      }\n    }\n    await axios.post(url, form_data, config)\n    .then(res=>{            \n        setUsers(res.data.users); \n        setIsalert(false)                       \n        \n    })\n    .catch(err=>{\n        console.log(err)\n        setIsalert(false)\n    })\n    \n    \n  }\n  const fetchusers = async () => {\n    const url=\"https://app.kiranvoleti.com/getuserlist\";\n    let form_data = new FormData();\n    form_data.append('page', currentpage);\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    await axios.post(url, form_data, config)\n    .then(res=>{            \n        setUsers(res.data.users);                        \n        setIsalert(false)\n    })\n    .catch(err=>{\n        console.log(err)\n        setIsalert(false)\n    })\n}\n\nconst fetchfromdatabase = async (e) => {\n  const url=\"https://app.kiranvoleti.com/getuserlistsearch\";\n  console.log(e.target.value)\n  let form_data = new FormData();\n  form_data.append('searchterm',e.target.value.toLowerCase())\n  const config = {\n    headers: {\n        'content-type': 'application/json',\n        'X-CSRFToken': getCookie('csrftoken')\n    }\n  }\n  await axios.post(url, form_data, config)\n  .then(res=>{            \n      setUsers(res.data.users); \n      setIsalert(false); \n                            \n      \n  })\n  .catch(err=>{\n      console.log(err)\n  })\n}\n\n\n\nconst deleteUser = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   var allelm = document.querySelectorAll(\"input[name=childbox]\");\n\n   await allelm.forEach(elm => {\n       if (elm.checked) {\n           list.push(elm.id)           \n       }\n   })\n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'auth_user');\n   let url = 'https://app.kiranvoleti.com/bulkdeltereactusers';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           fetchusers()\n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nconst deleteUserind = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   list.push(e.target.dataset.id)      \n \n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'auth_user');\n   let url = 'https://app.kiranvoleti.com/bulkdeltereactusers';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           fetchusers()\n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nfunction tosttrigger(msg,status){\n  if(status === \"success\"){\n\n      toast.success(msg, {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n      });\n\n      }else{\n          toast.error(msg, {\n              position: \"top-right\",\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n          });\n\n}\n  \n}\n\nconst getCookie = (name) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\n\n\n\n \n  \n  \n  return (\n   \n    <>\n\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Table */}\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Users</h3>\n              </CardHeader>\n              <Form>\n                <Row>\n                  <Col md=\"4 m-2\">\n                    <FormGroup>\n                    <InputGroup className=\"mb-4\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-zoom-split-in\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input value= {q} onChange={e => setQ((e.target.value).toLowerCase())} placeholder=\"Filter\" type=\"text\" />\n                </InputGroup>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4 m-2\">\n                    <FormGroup>\n                    <InputGroup className=\"mb-4\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-zoom-split-in\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search from Database\" onChange={fetchfromdatabase} type=\"text\" />\n                </InputGroup>\n                    </FormGroup>\n                  </Col>                  \n                </Row>\n              </Form>              \n\n              <Userlisttable \n              isalert = {isalert}\n              setIsalert = {setIsalert}\n              fetchusers = {fetchusers} \n              deleteUserind = {deleteUserind} deleteUser = {deleteUser} users={users} totalpages={totalpages} />\n              \n              <Col md=\"6\" className=\"mt-1\">\n                  <Pagination aria-label=\"Page navigation example\">\n                  \n                      <PaginationComponent\n                          totalItems={totalpages}\n                          pageSize={5}\n                          onSelect={paginate}\n                          maxPaginationNumbers={5}\n                          defaultActivePage={1}\n                          firstPageText={'<'}\n                          previousPageText={'<<'}\n                          nextPageText={'>>'}\n                          lastPageText={'>'}\n                      />\n\n\n                  </Pagination>\n              </Col>\n\n              {isalert ? <Spinner color=\"primary\" />\n\n              :\n\n\n             null\n              \n              \n              }\n              <CardFooter className=\"py-4\">\n                                    \n                      \n                      \n                </CardFooter>\n              \n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n\nexport default Userslist;\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Tagstable = (props) => {\r\n  \r\n\r\n   \r\n    \r\n\r\n    \r\n   \r\n\r\n    \r\n    function tosttrigger(msg,status){\r\n        if(status === \"success\"){\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            }else{\r\n                toast.error(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n}\r\n        \r\n    }\r\n    // function hideSwalert() {\r\n    //     setSwlert(\"\");\r\n    // }\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            \r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Button trigger modal */}\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                   \r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteUser}\r\n                    >\r\n                        Delete<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            Total Records: {props.totalpages}\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={props.handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n\r\n                        {/* <th scope=\"col\">Name</th> */}\r\n                        <th scope=\"col\">Tag</th>    \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.tags.map(row => (\r\n\r\n                        <tr key={row._id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n                              \r\n                                    <Media>\r\n                                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                                            <input\r\n                                                className=\"custom-control-input\"\r\n                                                id={row.id}\r\n                                                type=\"checkbox\"\r\n                                                name=\"childbox\"\r\n                                                onChange={props.handleCheckchange}\r\n                                                checked={row.ischecked}\r\n\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor={row.id}>\r\n\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </Media>\r\n                                \r\n                            </th>\r\n                            \r\n                            <td>{row.tag}</td>\r\n\r\n                            \r\n\r\n                           \r\n                        </tr>\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    closeClassName: PropTypes.string,\r\n    color: PropTypes.string, // default: 'success'\r\n    isOpen: PropTypes.bool,  // default: true\r\n    toggle: PropTypes.func,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    fade: PropTypes.bool, // default: true\r\n    // Controls the transition of the alert fading in and out\r\n    // See Fade for more details\r\n}\r\nexport default Tagstable\r\n","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n// reactstrap components\nimport {\n\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Col,\n  Spinner,\n  CardFooter,\n  Button,\n  Pagination\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport Tagstable from \"./tables/Tagstable\";\nimport PaginationComponent from \"react-reactstrap-pagination\";\nimport Paginationtable from \"./tables/Paginationtable\";\nimport { ToastContainer, toast } from 'react-toastify';\n// import { UsersContext, QueryContext, PaginationContext } from './contexts/UserContext';\nimport { Redirect } from 'react-router-dom'\nconst Subscribelist = (props) => {\n  const [subscribers, setSubscribers] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [q, setQ] = useState('');  \n  const [currentpage, setCurrentpage] = useState(0);\n  const [totalpages, setTotalpages] = useState(0);\n  const [isalert,setIsalert] = useState(false);\n  const [stateallchecked, setStateallchecked] = useState(false);\n  const [taglist,setTaglist] = useState('')\n  \n  useEffect(() => {\n    // if(window.localStorage.getItem('usertype') !== \"superuser\"){\n    //   props.history.push('/admin/categories/manage')\n    // }\n    fetchtags();\n    \n  }, []);\n\n  const paginate = async (e) => {   \n    \n    const url=\"https://app.kiranvoleti.com/tagslist\";\n    let form_data = new FormData();\n    form_data.append('page', e);\n    setCurrentpage(e)\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    await axios.post(url, form_data, config)\n    .then(res=>{            \n      var resptags = res.data.tags.map(val => (\n        { ...val, ischecked: false }\n      ))\n        setTags(resptags);      \n                         \n        \n        setIsalert(false)                       \n        \n    })\n    .catch(err=>\n      {        \n        setIsalert(false)\n      })\n    \n    \n  }\n\n  \n  const fetchtags = async () => {\n    const url=\"https://app.kiranvoleti.com/tagslist\";\n    let form_data = new FormData();\n    form_data.append('page', currentpage);\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    await axios.post(url, form_data, config)\n    .then(res=>{            \n      var resptags = res.data.tags.map(val => (\n        { ...val, ischecked: false }\n    ))\n        setTags(resptags);       \n        setTotalpages(res.data.total)                 \n        setIsalert(false)\n        \n    })\n    .catch(err=>{\n        console.log(err)\n        setIsalert(false)\n    })\n}\n\nconst handleCheckchange = (e) => {\n  let valid = e.target.id;\n  let valchecked = e.target.checked;\n  console.log(valid, valchecked);\n  var somesubsupdated = tags.filter((val, key) => {\n\n      return [...tags, (val.id).toString() === valid.toString() ? val.ischecked = valchecked : val.ischecked]\n\n\n  });\n\n  setTags(somesubsupdated);\n\n}\n\nconst handleAllChecked = (event) => {\n\n  var respvideos = tags.map(val => (\n      { ...val, ischecked: event.target.checked }\n  ))\n  setTags(respvideos)  \n  setStateallchecked(event.target.checked)\n\n\n\n}\n// Handle Submit Section\n\nconst handlesubmit = (e) => {\n  e.preventDefault();  \n\n  let form_data = new FormData();\n\n  \n  form_data.append('feed', taglist);\n\n\n  \n\n  // Before Ui Elements\n  \n  tosttrigger('Sit back .. Process is initiating..', 'success')\n  // Before Ui Elements\n  // Backend Submission\n\n  let url = \"https://app.kiranvoleti.com/tagscreate\";\n  // let url = 'https://jsonplaceholder.typicode.com/todos';\n  const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n  }\n  axios.post(url, form_data, config)\n      .then(res => {\n          console.log(res.data)\n          tosttrigger(\"success\", 'success')\n          fetchtags();\n\n      })\n      .catch(err =>\n          {\n            \n          tosttrigger(err, 'error')}\n\n\n      )\n\n\n}\n// End Hndle Submit Section\nconst fetchfromdatabase = async (e) => {\n  const url=\"https://app.kiranvoleti.com/getsubscriberssearch\";\n  \n  let form_data = new FormData();\n  form_data.append('searchterm',e.target.value.toLowerCase())\n  const config = {\n    headers: {\n        'content-type': 'application/json'\n        // 'X-CSRFToken': getCookie('csrftoken')\n    }\n  }\n  await axios.post(url, form_data, config)\n  .then(res=>{            \n    setSubscribers(res.data.users); \n      setIsalert(false); \n                            \n      \n  })\n  .catch(err=>{\n      console.log(err)\n  })\n}\n\n\n\nconst deleteUser = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   var allelm = document.querySelectorAll(\"input[name=childbox]\");\n\n   await allelm.forEach(elm => {\n       if (elm.checked) {\n           list.push(elm.id)           \n       }\n   })\n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'keytags');\n   let url = 'https://app.kiranvoleti.com/bulkdeltereact';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           fetchtags();\n           \n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nconst deleteUserind = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   list.push(e.target.dataset.id)      \n \n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'lunchbox_subscriptions');\n   let url = 'https://app.kiranvoleti.com/bulkdeltereactusers';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           \n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nfunction tosttrigger(msg,status){\n  if(status === \"success\"){\n\n      toast.success(msg, {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n      });\n\n      }else{\n          toast.error(msg, {\n              position: \"top-right\",\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n          });\n\n}\n  \n}\n\nconst getCookie = (name) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\n\n\n\n \n  \n  \n  return (\n   \n    <>\n\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Table */}\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Tags List</h3>\n              </CardHeader>\n              <Form>\n                <Row>\n                 \n                  <Col md=\"10 m-2\">\n                    <FormGroup>\n                    <InputGroup className=\"mb-4\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-tag\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input onChange={(e) => setTaglist(e.target.value)} placeholder=\"tags by enter\" name=\"taglist\" id=\"taglist\" type=\"textarea\" />\n                </InputGroup>\n                  <Button color=\"primary\" onClick={handlesubmit} outline type=\"button\">Submit</Button>\n                    </FormGroup>\n                  </Col>                  \n                </Row>\n              </Form>              \n\n              <Tagstable \n              \n              fetchtags = {fetchtags} \n              deleteUserind = {deleteUserind} deleteUser = {deleteUser} \n              tags={tags} totalpages={totalpages}\n              handleCheckchange = {handleCheckchange}\n              handleAllChecked = {handleAllChecked}\n               />\n              \n              <Col md=\"6\" className=\"mt-1\">\n                  <Pagination aria-label=\"Page navigation example\">\n                  \n                      <PaginationComponent\n                          totalItems={totalpages}\n                          pageSize={50}\n                          onSelect={paginate}\n                          maxPaginationNumbers={5}\n                          defaultActivePage={1}\n                          firstPageText={'<'}\n                          previousPageText={'<<'}\n                          nextPageText={'>>'}\n                          lastPageText={'>'}\n                      />\n\n\n                  </Pagination>\n              </Col>\n\n              {isalert ? <Spinner color=\"primary\" />\n\n              :\n\n\n             null\n              \n              \n              }\n              <CardFooter className=\"py-4\">\n                                    \n                      \n                      \n                </CardFooter>\n              \n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n\nexport default Subscribelist;\n","import React, { useState, createContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport const CategoryContext = createContext();\r\n\r\nconst CategoryProvider = ({ children, match }) => {\r\n    const [categories, setCategories] = useState([])\r\n    const [subcategories, setSubcategories] = useState([])\r\n    const [supsubcategories, setSupsubcategories] = useState([])\r\n    const [swalert, setSwlert] = useState(\"\");\r\n    const [catmodel, setCatmodel] = useState(false);\r\n    const [subcatmodel, setSubcatmodel] = useState(false);   \r\n    const [supsubcatmodel, setSupsubcatmodel] = useState(false);\r\n    const [updatecatmodel, setUpdatecatmodel] = useState(false);\r\n    // const [editModal, setEditModal] = useState(false);\r\n    const [isalert, setIsalert] = useState(false);\r\n    const [isspinner, setIsspinner] = useState(false);\r\n    const [alertmsgcolor, setAlertmsgcolor] = useState(\"info\");\r\n    const [alertmsg, setAlertmsg] = useState(\"\");\r\n    const [categorystate, setCategorystate] = useState([]);\r\n    const [deleteid, setDeleteid] = useState('');\r\n\r\n    // form state\r\n    const initialFormData = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password1: \"\",\r\n        phone: \"\",\r\n        capability: \"\",\r\n        category: \"\",\r\n        id: \"\",\r\n        mainref:\"\",\r\n        superref:\"\"\r\n    });\r\n\r\n    const initialeditingform = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password1: \"\",\r\n        phone: \"\",\r\n        capability: \"\",\r\n        category: \"\",\r\n        id: \"\"\r\n    });\r\n    const [formchangedata, updateFormchangedata] = React.useState(initialFormData);\r\n    const [editingform, updateEditingform] = React.useState(initialeditingform);\r\n\r\n    const rhandleChange = (e) => {\r\n\r\n        updateFormchangedata({\r\n            ...formchangedata,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n\r\n    // Checkbox\r\n    const handleAllChecked = (event) => {\r\n        \r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        if (event.target.checked) {\r\n            allelm.forEach(elm => {\r\n                elm.setAttribute(\"checked\", event.target.checked)\r\n            })\r\n\r\n        }\r\n        else {\r\n            allelm.forEach(elm => {\r\n                elm.removeAttribute(\"checked\")\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    const handlechange = (event) => {\r\n        let categorytateaction = categorystate;\r\n        function ischeckf(val) {\r\n            if (val.id === event.target.id) {\r\n                return val !== event.target.id;\r\n            }\r\n        }\r\n        if (event.target.checked) {\r\n            let nowobj = [{ id: event.target.id, isChecked: event.target.checked }]\r\n            setCategorystate([...categorytateaction, ...nowobj]);\r\n        } else {\r\n            let nowobj = categorytateaction.filter(ischeckf)\r\n            setCategorystate([...nowobj]);\r\n        }\r\n        \r\n    }\r\n    // end checkbox\r\n    const statuschange = () => {\r\n\r\n    }\r\n\r\n    const toggleeditModal = (e) => {\r\n        setUpdatecatmodel(!updatecatmodel);\r\n        const initialeditingform = Object.freeze({\r\n            category: e.target.dataset.category,\r\n            id: e.target.dataset.id\r\n        });\r\n        updateEditingform(initialeditingform)\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    }\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    function tosttrigger(msg, status) {\r\n        if (status === \"success\") {\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } else {\r\n            toast.error(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        setIsspinner(!isspinner);\r\n        setIsalert(!isalert)\r\n        setAlertmsg(\"Submitting Please Wait...\");\r\n        setAlertmsgcolor('info');\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', formchangedata.category);\r\n\r\n        let url = \"https://app.kiranvoleti.com/addmaincat\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                toggleModal();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                // setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('info'),\r\n\r\n            )\r\n\r\n    };\r\n\r\n    const updatehandlesubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n\r\n        // let form_data = new FormData();\r\n        setIsspinner(!isspinner);\r\n        if (formchangedata.category === \"\") {\r\n            setIsalert(!isalert)\r\n            setAlertmsg(\"Submitting please wait....\");\r\n            setAlertmsgcolor('success');\r\n            setIsspinner(!isspinner);\r\n            return\r\n        }\r\n        let form_data = new FormData();\r\n        form_data.append('catdata', formchangedata.category);\r\n        form_data.append('catid', editingform.id);\r\n\r\n        let url = \"https://app.kiranvoleti.com/main_cat_update/\";\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                toggleeditModal();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setAlertmsg(\"Submitting please wait....\"),\r\n                setIsspinner(!isspinner)\r\n\r\n\r\n            )\r\n\r\n    };\r\n    function hideSwalert() {\r\n        setSwlert(\"\");\r\n    }\r\n    const toggleModal = () => {\r\n        setCatmodel(!catmodel);\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    };\r\n\r\n\r\n    const deleteThisGoal = (e) => {\r\n        let delsid = e.target.id\r\n        setIsspinner(!isspinner);\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', e.target.id);\r\n\r\n        let url = \"https://app.kiranvoleti.com/delmaincat\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                setSwlert(\"\");\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                // const teamPlayers = this.state.teamPlayers.filter(i => i.idTeam !== id));\r\n                setCategories(categories.filter(i => i.category !== delsid))\r\n\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('danger'),\r\n\r\n            )\r\n        setSwlert(\"\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const url = \"https://app.kiranvoleti.com/addmaincat\";\r\n\r\n    useEffect(() => {\r\n        const fetchusers = async () => {\r\n            await axios.get(url)\r\n                .then(res => {\r\n                    setCategories(res.data.maincats);\r\n                    setSubcategories(res.data.subcats);\r\n                    setSupsubcategories(res.data.supsubcats);\r\n\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n        fetchusers()\r\n    }, [])\r\n\r\n\r\n// SubCategory Section\r\n\r\n// Deleting Purpose\r\nconst subcatgorydeletebutton = (e) => {\r\n    let delsid = e.target.dataset.id\r\n\r\n    tosttrigger(\"Deleting plz Wait\", 'success')    \r\n    \r\n\r\n    let form_data = new FormData();\r\n    form_data.append('catid', e.target.dataset.id);\r\n\r\n    let url = \"https://app.kiranvoleti.com/sub_cat_delete/\";\r\n    \r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken')\r\n        }\r\n    }\r\n    axios.post(url, form_data, config)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                tosttrigger(res.data.msg, 'error')\r\n            }        \r\n            else{\r\n                tosttrigger(res.data.msg, 'success')\r\n                setSubcategories(subcategories.filter(i => parseInt(i.id) !== parseInt(delsid)))\r\n            }\r\n        })\r\n        .catch(err =>\r\n            console.log(err)          \r\n\r\n        )\r\n    setSwlert(\"\");\r\n\r\n    \r\n    }\r\n\r\n    // Editing purpose(sub category)\r\n    // Editing Purpose(sub category)\r\n\r\n    \r\n\r\n    \r\n\r\n   \r\n\r\n    // Adding purpose (Sub Category)\r\n\r\n    \r\n    const addsubcategorymodel = () => {\r\n        setSubcatmodel(!subcatmodel);\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    };\r\n\r\n    const subcathandleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        \r\n        \r\n        setIsspinner(!isspinner);\r\n        setIsalert(!isalert)\r\n        setAlertmsg(\"Submitting Please Wait...\");\r\n        setAlertmsgcolor('info');\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', formchangedata.category);\r\n        form_data.append('mainref', formchangedata.mainref);\r\n\r\n        let url = \"https://app.kiranvoleti.com/addsubcat\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                addsubcategorymodel();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                setSubcategories(prevSubcategories => [...prevSubcategories, { id: res.data.indexkey, category: formchangedata.category, mainref:formchangedata.mainref }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                // setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('info'),\r\n\r\n            )\r\n\r\n    };\r\n\r\n    // Sup Sub Category Section\r\n    // Adding Purpose\r\n\r\n    const addsupsubcategorymodel = () => {\r\n        setSupsubcatmodel(!supsubcatmodel);\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    };\r\n\r\n    const supsubcathandleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        \r\n        \r\n        \r\n        setIsspinner(!isspinner);\r\n        setIsalert(!isalert)\r\n        setAlertmsg(\"Submitting Please Wait...\");\r\n        setAlertmsgcolor('info');\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', formchangedata.category);\r\n        form_data.append('refrence', formchangedata.mainref);\r\n        form_data.append('masterrefrence', formchangedata.superref);\r\n\r\n        let url = \"https://app.kiranvoleti.com/addsupsubcat\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                addsupsubcategorymodel();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                setSupsubcategories(prevSupsubcategories => [...prevSupsubcategories, { id: res.data.indexkey, category: formchangedata.category, \r\n                    masterrefrence:formchangedata.superref,\r\n                    refrence:formchangedata.mainref\r\n                }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                // setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('info'),\r\n\r\n            )\r\n\r\n    };\r\n\r\n    // Deleting Purpose\r\nconst supsubcatgorydeletebutton = (e) => {\r\n    let delsid = e.target.dataset.id\r\n\r\n    tosttrigger(\"Deleting plz Wait\", 'success')  \r\n    \r\n    let form_data = new FormData();\r\n    form_data.append('catid', e.target.dataset.id);\r\n\r\n    let url = \"https://app.kiranvoleti.com/sup_sub_cat_delete/\";\r\n    \r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken')\r\n        }\r\n    }\r\n    axios.post(url, form_data, config)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                tosttrigger(res.data.msg, 'error')\r\n            }        \r\n            else{\r\n                tosttrigger(res.data.msg, 'success')\r\n                setSupsubcategories(supsubcategories.filter(i => parseInt(i.id) !== parseInt(delsid)))\r\n            }\r\n        })\r\n        .catch(err =>\r\n            console.log(err)          \r\n\r\n        )\r\n    setSwlert(\"\");\r\n\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <CategoryContext.Provider value={{\r\n            categories, setCategories, subcategories,\r\n            setSubcategories, supsubcategories, setSupsubcategories,\r\n            deleteThisGoal, toggleModal, toggleeditModal, updatecatmodel, formchangedata, initialeditingform, updateFormchangedata,\r\n            editingform, updateEditingform, swalert, catmodel, handleSubmit, isalert,\r\n            alertmsgcolor, alertmsg, rhandleChange, isspinner, handlechange, handleAllChecked, updatehandlesubmit,\r\n\r\n            addsubcategorymodel,subcatmodel,subcathandleSubmit,subcatgorydeletebutton,\r\n\r\n            addsupsubcategorymodel, supsubcatmodel, supsubcathandleSubmit,supsubcatgorydeletebutton\r\n\r\n        }}>\r\n\r\n            {children}\r\n\r\n        </CategoryContext.Provider>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default CategoryProvider","import React from \"react\";\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nfunction Categoriestable(props) {\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n                <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.addcatmodeltrigger}\r\n                    >\r\n                        Add Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    {/* <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteThisGoal}\r\n                    >\r\n                        Delete Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button> */}\r\n                </Col>\r\n\r\n            </Row>\r\n        \r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={props.handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Category</th>                        \r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cats.map((row,index) => (\r\n\r\n                        <tr key={index}>\r\n\r\n                            <th scope=\"row\">\r\n                                \r\n                                    \r\n                                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                                            <input\r\n                                                className=\"custom-control-input\"\r\n                                                id={row.id}\r\n                                                type=\"checkbox\"\r\n                                                name=\"childbox\"\r\n                                                onChange={props.handlechange}\r\n\r\n                                            />\r\n                                            \r\n                                            <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                            {index + 1}\r\n                                            </label>\r\n                                        </div>\r\n                                        \r\n\r\n                                   \r\n                            </th>\r\n                            \r\n                            <td>{row.category}</td>\r\n                                                      \r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\"\r\n                                id={row.category} onClick={props.deleteThisGoal}\r\n                                >\r\n                                    <i id={row.category} className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-category={row.category}\r\n                                    data-id={row.id}                                    \r\n                                    onClick={props.toggleeditModal}\r\n                                >\r\n                                    <i \r\n                                    data-category={row.category}\r\n                                    data-id={row.id}\r\n                                    className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n           \r\n                     \r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categoriestable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Categorymodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.catmodel}\r\n                toggle={props.addcatmodeltrigger}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New Category\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.addcatmodeltrigger}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.handleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={props.rhandleChange} placeholder=\"category\" id=\"category\" name=\"category\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.addcatmodeltrigger}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n            {/* Modal for editing */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.updatecatmodel}\r\n                toggle={props.toggleeditModal}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"editmodal\">\r\n                        Edit User\r\n                </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.toggleeditModal}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.updatehandlesubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            \r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input                                     \r\n                                    value={props.formchangedata.category}\r\n                                    onChange={props.rhandleChange}\r\n                                    placeholder=\"category\" id=\"category\" name=\"category\"\r\n                                    type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>                                             \r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.toggleeditModal}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categorymodel\r\n","import React, {  useContext } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { ToastContainer} from 'react-toastify';\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport {\r\n\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row\r\n    \r\n} from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport Categoriestable from \"./tables/Categoriestable\";\r\nimport Categorymodel from \"./models/Categorymodel\";\r\nfunction Categories(props) {\r\n    const catmanager = useContext(CategoryContext);\r\n    // const { token } = useParams();\r\n    let trys = useRouteMatch(\"/admin/categories/:token\");\r\n    \r\n\r\n    return (\r\n        <>\r\n        \r\n        {catmanager.swalert}\r\n        <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Header />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                \r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">{trys.params.token}</h3>\r\n                            </CardHeader>\r\n\r\n                            \r\n\r\n                            <Categoriestable catref={trys.params.token} cats={catmanager.categories}\r\n                            addcatmodeltrigger={catmanager.toggleModal} deleteThisGoal={catmanager.deleteThisGoal}\r\n                            handlechange={catmanager.handlechange} handleAllChecked={catmanager.handleAllChecked}\r\n                            updatecatmodel = {catmanager.updatecatmodel} toggleeditModal = {catmanager.toggleeditModal}\r\n                            \r\n                            \r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Categorymodel \r\n                delete = {catmanager.deleteThisGoal}     \r\n                editingform = {catmanager.editingform}   \r\n                formchangedata = {catmanager.formchangedata} \r\n                addcatmodeltrigger={catmanager.toggleModal}      \r\n                catmodel = {catmanager.catmodel}\r\n                handleSubmit = {catmanager.handleSubmit}\r\n                isalert ={catmanager.isalert}\r\n                alertmsgcolor = {catmanager.alertmsgcolor}\r\n                alertmsg = {catmanager.alertmsg}\r\n                rhandleChange = {catmanager.rhandleChange}\r\n                isspinner = {catmanager.isspinner}\r\n                updatecatmodel = {catmanager.updatecatmodel}\r\n                toggleeditModal = {catmanager.toggleeditModal}\r\n                updatehandlesubmit = {catmanager.updatehandlesubmit}\r\n                initialeditingform = {catmanager.initialeditingform}\r\n\r\n                />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Row,\r\n    Col,\r\n   \r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Subcategoriestable(props) {\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.addsubcategorymodel}\r\n                    >\r\n                        Add Sub Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    {/* <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteThisGoal}\r\n                    >\r\n                        Delete Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button> */}\r\n                </Col>\r\n\r\n            </Row>\r\n           \r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            #\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Sub Category</th>\r\n                        <th scope=\"col\">Topics</th>                        \r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cats.map((row,index) => (\r\n\r\n                        <tr key={row.id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n                                 {index + 1}                                   \r\n                            </th>\r\n                            \r\n                            <td>{row.category}</td>\r\n                            \r\n\r\n                            <td>{props.refcats.map(ris=>(ris.id === parseInt(row.mainref) ? ris.category: null))}</td>                                \r\n                                \r\n                                                     \r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\" data-id={row.id}\r\n                                    onClick={props.subcatgorydeletebutton}\r\n                                >\r\n                                    <i className=\"fa fa-trash\" data-id={row.id} aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                {/* <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row._id}\r\n                                    data-email={row.email}\r\n                                    onClick={props.subcategoryeditmodel}\r\n                                >\r\n                                    <i className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button> */}\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n\r\n\r\n\r\n            \r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subcategoriestable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Subcategorymodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.subcatmodel}\r\n                toggle={props.addsubcategorymodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New Sub Category\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.addsubcategorymodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.subcathandleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={props.rhandleChange} placeholder=\"category\" id=\"category\" name=\"category\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Category</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.refcats.map((val,index) =>(\r\n                                    <option key={index} value={val.id}>{val.category}</option>\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.addsubcategorymodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n            {/* Edit SubCategory Model */}\r\n             \r\n             {/* <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.updatesubcatmodel}\r\n                toggle={props.subcategoryeditmodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"editmodal\">\r\n                        Edit User\r\n                </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.subcategoryeditmodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.updatesubcathandlesubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            \r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input                                     \r\n                                    value={props.formchangedata.category}\r\n                                    onChange={props.rhandleChange}\r\n                                    placeholder=\"category\" id=\"category\" name=\"category\"\r\n                                    type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>                                             \r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.subcategoryeditmodel}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n */}\r\n\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Subcategorymodel\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport { ToastContainer} from 'react-toastify';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row\r\n  } from \"reactstrap\";\r\n  import Header from \"components/Headers/Header.js\";\r\nimport Subcategoriestable from \"./tables/Subcategoriestable\";\r\nimport Subcategorymodel from \"./models/Subcategorymodel\";\r\n\r\nfunction Subcategories() {\r\n    const catmanager = useContext(CategoryContext);   \r\n    let trys = useRouteMatch(\"/admin/categories/:token\");\r\n\r\n    // const vals = catmanager.categories.map(val=>{\r\n    //     catmanager.subcategories.filter(val1=>{\r\n    //         val1.ref\r\n    //     })\r\n    // });\r\n    // console.log(vals);\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">{trys.params.token}</h3>\r\n                            </CardHeader>  \r\n                                                      \r\n                            <Subcategoriestable cats={catmanager.subcategories} refcats = {catmanager.categories}\r\n                            addsubcategorymodel={catmanager.addsubcategorymodel}\r\n                            subcatgorydeletebutton = {catmanager.subcatgorydeletebutton}\r\n                            \r\n                            \r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Subcategorymodel \r\n                addsubcategorymodel={catmanager.addsubcategorymodel}\r\n                subcatmodel={catmanager.subcatmodel}\r\n                refcats = {catmanager.categories}\r\n                subcathandleSubmit = {catmanager.subcathandleSubmit}\r\n                rhandleChange = {catmanager.rhandleChange}\r\n                \r\n\r\n                />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Subcategories\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Supsubcategoriestable(props) {\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.addsupsubcategorymodel}\r\n                    >\r\n                        Add Sup Sub Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                   \r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            #\r\n                        </th>\r\n                        <th scope=\"col\">Sup Sub Category</th>\r\n                        <th scope=\"col\">Sub Category</th>\r\n                        <th scope=\"col\">Topics</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cats.map((row, index) => (\r\n\r\n                        <tr key={row.id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                            {index + 1}\r\n\r\n\r\n\r\n                            </th>\r\n\r\n                            <td>{row.category}</td>\r\n\r\n\r\n                            <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td>\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\" data-id={row.id}\r\n                                    onClick={props.supsubcatgorydeletebutton}\r\n                                >\r\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\" data-id={row.id}></i>\r\n                                </Button>\r\n                                {/* <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row._id}\r\n                                    data-email={row.email}\r\n                                    onClick={toggleeditModal}\r\n                                >\r\n                                    <i className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button> */}\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Supsubcategoriestable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\n\r\nfunction Supsubcategorymodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.supsubcatmodel}\r\n                toggle={props.addsupsubcategorymodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New Sup Sub Category\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.addsupsubcategorymodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.supsubcathandleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={props.rhandleChange} placeholder=\"Sub Category\" id=\"category\" name=\"category\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.masterefcat.map((val,index) =>(\r\n                                    <option key={index} value={val.id}>{val.category}</option>\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.refcats.map((val,index) =>(  \r\n                                    parseInt(val.mainref) === parseInt(props.formchangedata.superref) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.formchangedata.superref})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.addsupsubcategorymodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Supsubcategorymodel\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport {\r\n\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row\r\n  } from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport Supsubcategoriestable from \"./tables/Supsubcategoriestable\";\r\nimport Supsubcategorymodel from \"./models/Supsubcategorymodel\";\r\nimport { ToastContainer} from 'react-toastify';\r\n\r\nfunction Supsubcategories() {\r\n    const catmanager = useContext(CategoryContext);   \r\n    console.log(catmanager.supsubcategories);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">Super-Sub Categories</h3>\r\n                            </CardHeader>  \r\n                                                      \r\n                            <Supsubcategoriestable cats={catmanager.supsubcategories} \r\n                            refcats = {catmanager.subcategories}\r\n                            masterefcat = {catmanager.categories}\r\n                            addsupsubcategorymodel = {catmanager.addsupsubcategorymodel}\r\n                            supsubcatgorydeletebutton = {catmanager.supsubcatgorydeletebutton}\r\n                             />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Supsubcategorymodel \r\n                refcats = {catmanager.subcategories}\r\n                masterefcat = {catmanager.categories}\r\n                rhandleChange = {catmanager.rhandleChange}\r\n                addsupsubcategorymodel = {catmanager.addsupsubcategorymodel}\r\n                supsubcatmodel = {catmanager.supsubcatmodel}\r\n                formchangedata = {catmanager.formchangedata}\r\n                supsubcathandleSubmit = {catmanager.supsubcathandleSubmit}\r\n                isspinner={catmanager.isspinner}\r\n                \r\n\r\n                />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Supsubcategories\r\n","import React, { useState, createContext } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const TopicsContext = createContext();\r\n\r\nconst TopicsProvider = ({ children }) => {\r\n    const [isspinner, setIsspinner] = useState(false)\r\n    // form state\r\n    const Topicsform = Object.freeze({\r\n        category: \"\",\r\n        iptype: \"multiple\",\r\n        iptextarea: \"\",\r\n        id: \"\",\r\n        urlid: \"\",\r\n        mainref: \"\",\r\n        superref: \"\",\r\n        typeofsubmit: \"googlenewsfeeds\",\r\n        multirefiles: \"\",\r\n        perpage: 50,\r\n        page: 1,\r\n        start_from: 0\r\n    });\r\n\r\n    const [feedform, updateFeedform] = useState(Topicsform);\r\n    const [feedreadylist, setFeedreadylist] = useState([]);\r\n    const [topicstate, setTopicstate] = useState([]);\r\n    const [fetchcategory, setFetchcategory] = useState('');\r\n    const [howmanyfetch, setHowmanyfetch] = useState(0);\r\n    // \r\n    const [articlevideoperpage, setArticlevideoperpage] = useState(50);\r\n    const [articlevideopage, setArticlevideopage] = useState(1);\r\n    const [articlevideosearch, setArticlevideosearch] = useState('');\r\n    const [articlevideoauthor, setArticlevideoauthor] = useState('');    \r\n    const [articlevideostatus, setArticlevideostatus] = useState('checked');\r\n    const [articlevideoisactive, setArticlevideoisactive] = useState('');\r\n    const [articlevideoisview, setArticlevideoisview] = useState('');\r\n    const [articlevideochannel, setArticlevideochannel] = useState('');        \r\n    const [totalresults, setTotalresults] = useState(0);\r\n    const [allarticles, setAllarticles] = useState([]);\r\n    const [articlemodel, setArticlemodel] = useState(false)\r\n    const [videomodel, setVideomodel] = useState(false)\r\n    const [toolmodel, setToolmodel] = useState(false)\r\n    const [collectioncountarticle, setCollectioncountarticle] = useState(0)\r\n    const [paginationcount, setPaginationcount] = useState(0)\r\n    const [allvideos, setAllvideos] = useState([]);\r\n    \r\n    const [tools, setTools] = useState([]);\r\n    const [collectioncounttools, setCollectioncounttools] = useState(0);\r\n    const [totaltool, setTotaltool] = useState(0);\r\n    const [stateallchecked, setStateallchecked] = useState(false);\r\n    const [dynotoollink,setDynotoollink] = useState('');\r\n    const [dynotooltext,setDynotooltext] = useState('');\r\n\r\n\r\n\r\n    // Handle Change Section\r\n\r\n    const rhandleChange = (e) => {\r\n\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.files\r\n\r\n        });\r\n    }\r\n\r\n\r\n    // End Handle Change Section\r\n\r\n    // Handle Toggle\r\n    const togglemodel = (e) => {\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            mainref: e.target.dataset.mainref,\r\n            superref: e.target.dataset.superref,\r\n            urlid: e.target.dataset.id,\r\n\r\n        });\r\n\r\n        setArticlemodel(!articlemodel)\r\n\r\n    }\r\n\r\n    const togglevideomodel = (e) => {\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            mainref: e.target.dataset.mainref,\r\n            superref: e.target.dataset.superref,\r\n            urlid: e.target.dataset.id,\r\n\r\n        });\r\n\r\n        setVideomodel(!videomodel)\r\n\r\n    }\r\n    const toggletoolmodel = (e) => {\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            mainref: e.target.dataset.mainref,\r\n            superref: e.target.dataset.superref,\r\n            urlid: e.target.dataset.id,\r\n\r\n        });\r\n        console.log('toolmodel')\r\n\r\n        setToolmodel(!toolmodel)\r\n\r\n    }\r\n\r\n    // End Handle Toggle\r\n\r\n    // State Toggle\r\n    const statetoggle = (e) => {\r\n        setArticlevideoisactive(e.target.value.trim())\r\n    }\r\n    const viewtoggle = (e) => {\r\n        setArticlevideoisview(e.target.value.trim())\r\n    }\r\n    const searchquery = (e) => {\r\n        setArticlevideosearch(e.target.value.trim())\r\n    }\r\n    const authorquery = (e) => {\r\n        setArticlevideoauthor(e.target.value.trim())\r\n    }\r\n    \r\n    const sitequery = (e) => {\r\n        setArticlevideochannel(e.target.value.trim())\r\n    }\r\n    \r\n\r\n    // End State Toggle\r\n    // Deleting Purpose\r\nconst deletefeeditem = (e) => {\r\n    let delsid = e.target.dataset.id\r\n\r\n    tosttrigger(\"Deleting plz Wait\", 'success')    \r\n    let list = []\r\n    list.push(e.target.dataset.id)\r\n\r\n    let form_data = new FormData();\r\n    form_data.append('deletelist', e.target.dataset.id);\r\n    form_data.append('tablename', 'feedentryboard');\r\n\r\n    let url = \"https://app.kiranvoleti.com/bulkdeltereact\";\r\n    \r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken')\r\n        }\r\n    }\r\n    axios.post(url, form_data, config)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                tosttrigger(res.data.msg, 'error')\r\n            }        \r\n            else{\r\n                tosttrigger(res.data.msg, 'success')\r\n                setFeedreadylist(feedreadylist.filter(i => parseInt(i.id) !== parseInt(list[0])))\r\n            }\r\n        })\r\n        .catch(err =>\r\n            console.log(err)          \r\n\r\n        )\r\n    \r\n\r\n    \r\n    }\r\n\r\n\r\n    // Handle Submit Section\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const options = {\r\n            onUploadProgress: (progressEvent) => {\r\n                const { loaded, total } = progressEvent;\r\n                let percent = Math.floor((loaded * 100) / total);\r\n                console.log(`${loaded} kb of ${total} kb | ${percent}`)\r\n            }\r\n        }\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('category', feedform.superref);\r\n        form_data.append('datatype', feedform.iptype);\r\n        form_data.append('feed', feedform.iptextarea);\r\n\r\n\r\n        if (feedform.multirefiles) {\r\n            for (const key of Object.keys(feedform.multirefiles)) {\r\n                form_data.append('uploadfile', feedform.multirefiles[key])\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        tosttrigger('Sit back .. Process is initiating..', 'success')\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/feedsummary\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config, options)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n                \r\n                setIsspinner(false);\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                {setIsspinner(false)\r\n                tosttrigger(err, 'error')}\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n    // End Hndle Submit Section\r\n\r\n\r\n\r\n    // Get All Feed Tables\r\n    const handlePageClick = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', feedform.perpage);\r\n        form_data.append('page', e);\r\n        form_data.append('typeofsubmit', feedform.typeofsubmit);\r\n\r\n        // form_data.append('start_from', feedform.start_from);\r\n\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        tosttrigger('Sit back .. Process is initiating..', 'success')\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getfeedlist\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        await axios.post(url, form_data, config)\r\n            .then(res => {\r\n                setFeedreadylist(res.data.feeds)\r\n                setPaginationcount(res.data.total)\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n    };\r\n\r\n\r\n    const getallfeedstable = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', feedform.perpage);\r\n        form_data.append('page', parseInt(feedform.page));\r\n        form_data.append('typeofsubmit', feedform.typeofsubmit);\r\n\r\n        // form_data.append('start_from', feedform.start_from);\r\n\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        tosttrigger('Sit back .. Process is initiating..', 'success')\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getfeedlist\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n\r\n                var respfeeds = res.data.feeds.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                \r\n\r\n                setFeedreadylist(respfeeds)\r\n\r\n                setPaginationcount(res.data.total)\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // End Get All Feed Tables\r\n\r\n\r\n    // Fetch All Section\r\n\r\n    const [spin, setSpin] = useState([])\r\n\r\n    const delpin = (e) => {\r\n        const someval = spin.filter(i => parseInt(i.id) !== parseInt(130))\r\n        setSpin(someval)\r\n\r\n    }\r\n\r\n    const sendforFetch = async (e) => {\r\n        e.preventDefault();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                let nowobj = { id: elm.id, ispin: true }\r\n                list.push(nowobj)\r\n\r\n                triggerfeedsfetch(elm.id)\r\n\r\n            }\r\n        })\r\n        setSpin(list)\r\n\r\n        tosttrigger('Process initiated', 'success')\r\n        setSpin([])\r\n\r\n\r\n    }\r\n\r\n    // list fetch\r\n\r\n    const sendchannelfetch = async (e) => {\r\n        e.preventDefault();\r\n        var list = []\r\n        \r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n\r\n            }\r\n        })\r\n        \r\n        let form_data = new FormData();\r\n\r\n        form_data.append('category', feedform.typeofsubmit);\r\n        form_data.append('index', 1);\r\n        form_data.append('urlid', list);\r\n        console.log(feedform.typeofsubmit)\r\n        \r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/fetchvideochannels\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        await axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n\r\n                setHowmanyfetch(prevHowmany => parseInt(prevHowmany) + parseInt(res.data.successdatalength))\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n        \r\n\r\n\r\n    }\r\n\r\n    // End List fetch\r\n    const sendforFetchtable = async (e) => {\r\n        e.preventDefault();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                let nowobj = { id: elm.id, ispin: true }\r\n\r\n                reactfetch(elm.id)\r\n                list.push(nowobj)\r\n\r\n            }\r\n        })\r\n        setSpin(list)\r\n\r\n\r\n\r\n        await tosttrigger('Success Process is Done', 'success')\r\n        setSpin([])\r\n\r\n\r\n    }\r\n    const triggerfeedsfetch = (valid) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('category', feedform.typeofsubmit);\r\n        form_data.append('index', 1);\r\n        form_data.append('urlid', valid);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/fetchfeeds\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n\r\n                setHowmanyfetch(prevHowmany => parseInt(prevHowmany) + parseInt(res.data.successdatalength))\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // End Fetch All Section\r\n    // React fetch to tables\r\n    const reactfetch = (valid) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('fetchcategory', fetchcategory);\r\n        form_data.append('id', valid);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/reactfetcher\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                setIsspinner(false);\r\n                setHowmanyfetch(res.data.successdatalength)\r\n                tosttrigger('Fetched Successfully', 'success')\r\n\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // End Fetch to tables\r\n\r\n    // Get All Articles\r\n    const handlePageClickarticle = async (e) => {\r\n        \r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', e);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n        form_data.append('author', articlevideoauthor);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        \r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        \r\n        allelm.forEach(elm => {\r\n            elm.removeAttribute(\"checked\")\r\n        })\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getarticlelist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setTotalresults(res.data.total)\r\n                setCollectioncountarticle(res.data.collectioncountarticle)\r\n                var resparticles = res.data.articles.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setAllarticles(resparticles);\r\n                setStateallchecked(false)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n    };\r\n    const getallarticles = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', articlevideopage);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n        form_data.append('author', articlevideoauthor);\r\n        \r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getarticlelist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n                \r\n                // tosttrigger(res.data.msg, 'success')\r\n                setTotalresults(res.data.total)\r\n                setCollectioncountarticle(res.data.collectioncountarticle)\r\n                var resparticles = res.data.articles.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setAllarticles(resparticles)\r\n                \r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n    // End All Articles\r\n    // All Videos\r\n\r\n    const handlePageClickvideo = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', e);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n               \r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getvideolist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n                setStateallchecked(false)\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setAllvideos(res.data.videos)\r\n                setCollectioncountarticle(res.data.collectioncountvideos)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n    const getallvideos = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', articlevideopage);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/getvideolist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                var respvideos = res.data.videos.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setAllvideos(respvideos)\r\n                setCollectioncountarticle(res.data.collectioncountvideos)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n\r\n    // End All Videos\r\n\r\n    // All Tools\r\n\r\n    const getalltools = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', articlevideopage);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n        form_data.append('author', articlevideoauthor);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/gettoollist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                \r\n                var resptools = res.data.tools.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setTools(resptools)               \r\n                setCollectioncounttools(res.data.collectioncounttools)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n\r\n    const handlePageClicktools = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', e);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n        form_data.append('author', articlevideoauthor);\r\n\r\n        setStateallchecked(false)        \r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/gettoollist\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                var resptools = res.data.tools.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setTools(resptools)     \r\n                setCollectioncounttools(res.data.collectioncounttools)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n\r\n    // End Tools\r\n    // Handle All Checks\r\n    const handleAllCheckedArticles = (event) => {\r\n        // alert(event.target.id)\r\n        \r\n        setStateallchecked(event.target.checked)\r\n        var resparticles = allarticles.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setAllarticles(resparticles)\r\n        \r\n    }\r\n    const handleCheckchangeArticles = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var somearticlesupdated = allarticles.filter((val, key) => {\r\n\r\n            return [...allarticles, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setAllarticles(somearticlesupdated);\r\n\r\n    }\r\n    // Videos\r\n\r\n    const handleAllCheckedVideos = (event) => {\r\n        // alert(event.target.id)\r\n        \r\n        setStateallchecked(event.target.checked)\r\n        var respvideos = allvideos.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setAllvideos(respvideos)\r\n        \r\n    }\r\n    const handleCheckchangeVideos = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var somearticlesupdated = allvideos.filter((val, key) => {\r\n\r\n            return [...allvideos, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setAllvideos(somearticlesupdated);\r\n\r\n    }\r\n\r\n    const handleAllCheckedTools = (event) => {\r\n        // alert(event.target.id)\r\n        \r\n        setStateallchecked(event.target.checked)\r\n        var resptools = tools.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setTools(resptools)\r\n        \r\n    }\r\n    \r\n    const handleCheckchangeTools = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var somevideosupdated = tools.filter((val, key) => {\r\n\r\n            return [...tools, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setTools(somevideosupdated);\r\n\r\n    }\r\n\r\n    const handleCheckchangeSource = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var somefeedsupdated = feedreadylist.filter((val, key) => {\r\n\r\n            return [...feedreadylist, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setFeedreadylist(somefeedsupdated);\r\n\r\n    }\r\n    const handleAllCheckedSource = (event) => {\r\n        // alert(event.target.id)\r\n        \r\n        setStateallchecked(event.target.checked)\r\n        var respfeeds = feedreadylist.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setFeedreadylist(respfeeds)\r\n        \r\n    }\r\n\r\n\r\n    \r\n    const dynolinktextupdater = (e) => {\r\n        let valid = e.target.id;\r\n        \r\n        var somevideosupdated = tools.filter((val, key) => {\r\n\r\n            return [...tools, parseInt(val.id) === parseInt(valid) ? (val.title = dynotooltext,val.URL=dynotoollink) : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', valid);\r\n        form_data.append('tablename', 'Tools');\r\n        form_data.append('statereview', 'toolupdate');\r\n        form_data.append('URL', dynotoollink);\r\n        form_data.append('title', dynotooltext);\r\n\r\n        let url = 'https://app.kiranvoleti.com/bulkreviewupdater';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                \r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n        setTools(somevideosupdated);\r\n\r\n    }\r\n\r\n    // End Videos\r\n    const handleAllChecked = (event) => {\r\n        alert(event.target.id)\r\n        setTopicstate([]);\r\n        if (event.target.name === \"videos\"){\r\n            var respvideos = allvideos.map(val => (\r\n                { ...val, ischecked: event.target.checked }\r\n            ))\r\n            setAllvideos(respvideos)\r\n            \r\n\r\n        }\r\n        else if (event.target.name === \"articles\"){\r\n            var resparticles = allarticles.map(val => (\r\n                { ...val, ischecked: event.target.checked }\r\n            ))\r\n            setAllarticles(resparticles)\r\n            \r\n\r\n        }\r\n        else if (event.target.name === \"tools\"){\r\n            var resptools = tools.map(val => (\r\n                { ...val, ischecked: event.target.checked }\r\n            ))\r\n            setTools(resptools)\r\n            \r\n\r\n        }\r\n        else{\r\n            alert('feeds');\r\n        }\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    const handlechange = (event) => \r\n    {\r\n        // let categorytateaction = topicstate;\r\n        // function ischeckf(val) {\r\n        //     if (parseInt(val.id) === parseInt(event.target.id)) {\r\n        //         return parseInt(val) !== parseInt(event.target.id);\r\n        //     }\r\n        // }\r\n        // if (event.target.checked) {\r\n\r\n        //     let nowobj = [{ id: parseInt(event.target.id), isChecked: event.target.checked }]\r\n        //     setTopicstate([...categorytateaction, ...nowobj]);\r\n        // } else {\r\n\r\n        //     let nowobj = categorytateaction.filter(ischeckf)\r\n        //     setTopicstate([...nowobj]);\r\n        // }\r\n        if (event.target.checked){\r\n            \r\n            event.target.setAttribute(\"checked\", true)          \r\n        }else{\r\n            event.target.removeAttribute(\"checked\")  \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // End Handle All Checks\r\n\r\n\r\n    // Status Changer\r\n\r\n    const topicstatuschange = (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('is_active', e.target.checked);\r\n\r\n        let url = 'https://app.kiranvoleti.com/statechanger';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                \r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    // Status Changer\r\n\r\n    // Dynamic status changer\r\n    const articlestatuschange = (e) => {\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('isactive', e.target.checked);\r\n        form_data.append('action', 'updateactive');\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                // getallarticles(e)\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n    const videostatuschange = (e) => {\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('isactive', e.target.checked);\r\n        form_data.append('action', 'videoactive');\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    const toolstatuschange = (e) => {\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('isactive', e.target.checked);\r\n        form_data.append('action', 'toolactive');\r\n        // console.log(e.target.id,e.target.checked)\r\n        // return\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                \r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n    // End Dynamci status changer\r\n\r\n    // Bulk Review updater\r\n\r\n    const reviewupdate = async (e) => {\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        var tablename = e.target.id;\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n       \r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', tablename);\r\n        form_data.append('statereview', 'review');\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        \r\n\r\n        let url = 'https://app.kiranvoleti.com/bulkreviewupdater';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }    \r\n        \r\n       \r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                if(res.data.error){\r\n                    tosttrigger(res.data.msg, 'error')\r\n                }        \r\n                else{\r\n                    tosttrigger(res.data.msg, 'success')\r\n                    if (tablename === \"Videos\"){\r\n                        var someavideosupdated = allvideos.filter((val,key) =>{\r\n                            return [...allvideos,val.isreview=articlevideoisview]                           \r\n                           });\r\n                           \r\n                           setAllvideos(someavideosupdated);   \r\n                           tosttrigger('Review Changed', 'success')\r\n                    }\r\n                    else{\r\n                        var somearticlesupdated = allarticles.filter((val,key) =>{\r\n                            return [...allarticles,val.isreview=articlevideoisview]                           \r\n                           });\r\n                           \r\n                           setAllarticles(somearticlesupdated);   \r\n                           tosttrigger('Review Changed', 'success')\r\n                    }\r\n                    \r\n                }\r\n            })\r\n            .catch(err =>\r\n                console.log(err)          \r\n    \r\n            )\r\n        \r\n    \r\n        \r\n        }\r\n    \r\n\r\n    // End Bulk Review Updater\r\n\r\n    // Status Changer\r\n\r\n    const statusupdate = async (e) => {\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        var tablename = e.target.id\r\n        \r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(parseInt(elm.id))\r\n            }\r\n        })\r\n       \r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', tablename);\r\n        form_data.append('statereview', 'state');\r\n        form_data.append('is_active', articlevideoisactive);\r\n        \r\n\r\n        let url = 'https://app.kiranvoleti.com/bulkreviewupdater';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }    \r\n        \r\n       \r\n        await axios.post(url, form_data, config)\r\n            .then(res => {\r\n                  \r\n                tosttrigger(res.data.message, 'success')\r\n                    if (tablename === \"Videos\"){\r\n                        var someavideosupdated = allvideos.filter((val,key) =>{\r\n                            return [...allvideos, list.includes(val.id) ? val.isactive=articlevideoisactive:val]\r\n                           \r\n                           });\r\n                        \r\n                        setAllvideos(someavideosupdated)\r\n\r\n                        \r\n                    }\r\n                    else if (tablename === \"Articles\"){\r\n                        \r\n                        var somearticlesupdated = allarticles.filter((val,key) =>{\r\n                         return [...allarticles, list.includes(val.id) ? val.isactive=articlevideoisactive:val]\r\n                        \r\n                        });\r\n                        \r\n                        setAllarticles(somearticlesupdated);                      \r\n                        \r\n                        \r\n                    }\r\n                    else {\r\n                        var sometoolsupdated = tools.filter((val,key) =>{\r\n                            return [...tools, list.includes(val.id) ? val.isactive=articlevideoisactive:val]\r\n                           \r\n                           });\r\n                           \r\n                           setTools(sometoolsupdated);  \r\n                           \r\n\r\n                    }\r\n\r\n\r\n                }\r\n            )\r\n            .catch(err =>\r\n                console.log(err)          \r\n    \r\n            )\r\n        \r\n    \r\n        \r\n        }\r\n\r\n    // End Status Changer\r\n\r\n    // Edit form\r\n\r\n    const articlevideohandlesubmit = (e) => {\r\n        e.preventDefault();\r\n        let form_data = new FormData();\r\n        form_data.append('id', feedform.urlid);\r\n        form_data.append('mainref', feedform.mainref);\r\n        form_data.append('supersubcat', feedform.superref);\r\n        form_data.append('action', 'updatearticle');\r\n\r\n\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(\"Successfully Status Changed !\", \"success\");\r\n                setArticlemodel(false);\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    const Videoarticlehandlesubmit = (e) => {\r\n        e.preventDefault();\r\n        let form_data = new FormData();\r\n        form_data.append('id', feedform.urlid);\r\n        form_data.append('mainref', feedform.mainref);\r\n        form_data.append('supersubcat', feedform.superref);\r\n        form_data.append('action', 'updatevideo');\r\n\r\n\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                setVideomodel(false);\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    const toolhandlesubmit = (e) => {\r\n        e.preventDefault();\r\n        let form_data = new FormData();\r\n        form_data.append('id', feedform.urlid);\r\n        form_data.append('mainref', feedform.mainref);\r\n        form_data.append('supersubcat', feedform.superref);\r\n        form_data.append('action', 'updatetool');\r\n\r\n\r\n        let url = 'https://app.kiranvoleti.com/articleUpdate';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(\"Successfully Status Changed !\", \"success\");\r\n                setArticlemodel(false);\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n\r\n    // End Edit form\r\n\r\n    // Deleter\r\n    const bulkdeleter = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n        \r\n         \r\n        \r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', 'Articles');\r\n        let url = 'https://app.kiranvoleti.com/bulkdeltereact';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.msg, \"success\");\r\n                var somearticlesupdated = allarticles.filter((val,key) =>(\r\n                    ! list.includes(val.id.toString()))\r\n                    );\r\n                   \r\n                   setAllarticles(somearticlesupdated);  \r\n                \r\n                \r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\", \"error\")\r\n\r\n            )\r\n\r\n    }\r\n    const bulkdeletervideos = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n\r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', 'Videos');\r\n        let url = 'https://app.kiranvoleti.com/bulkdeltereact';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                var somevideosupdated = allvideos.filter((val,key) =>(\r\n                    ! list.includes(val.id.toString()))\r\n                    );\r\n                   \r\n                   setAllvideos(somevideosupdated);  \r\n                tosttrigger(res.data.msg, \"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\", \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    // End Deleter\r\n\r\n    // Tools Deleter\r\n\r\n    const bulkdeletertools = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n\r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', 'Tools');\r\n        let url = 'https://app.kiranvoleti.com/bulkdeltereact';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                var sometoolsupdated = tools.filter((val,key) =>(\r\n                    ! list.includes(val.id.toString()))\r\n                    );\r\n                   \r\n                   setTools(sometoolsupdated);  \r\n                tosttrigger(res.data.msg, \"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\", \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    // End BulkDeleter\r\n\r\n\r\n    // ui Elements\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    function tosttrigger(msg, status) {\r\n        if (status === \"success\") {\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } else {\r\n            toast.error(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // End Ui Elements\r\n\r\n\r\n\r\n    return (\r\n        <TopicsContext.Provider value={{\r\n            handleSubmit, rhandleChange, onFileChange, feedform, isspinner,\r\n            feedreadylist, getallfeedstable, handlechange, handleAllChecked,\r\n\r\n            sendforFetch, spin, delpin, topicstatuschange, howmanyfetch, fetchcategory,\r\n\r\n            sendforFetchtable, sendchannelfetch,\r\n\r\n            allarticles, totalresults, articlevideostatus, articlevideosearch, togglemodel,\r\n            articlemodel, statetoggle,viewtoggle, articlevideoisactive, collectioncountarticle,\r\n            articlevideopage, articlevideoperpage, getallarticles, bulkdeleter,\r\n            articlevideohandlesubmit, articlestatuschange,\r\n            searchquery, paginationcount, handlePageClick, handlePageClickarticle,\r\n            handlePageClickvideo,deletefeeditem,sitequery,authorquery,setFetchcategory,\r\n            setArticlevideoisactive,setArticlevideoisview,setArticlevideosearch,setArticlevideoauthor,\r\n            setArticlevideochannel,        \r\n\r\n\r\n\r\n\r\n\r\n\r\n            allvideos, videomodel, getallvideos, bulkdeletervideos,\r\n            togglevideomodel, Videoarticlehandlesubmit, videostatuschange,\r\n            reviewupdate,statusupdate,\r\n\r\n            getalltools,tools,collectioncounttools,totaltool,bulkdeletertools,\r\n            toolmodel, setToolmodel ,toggletoolmodel,toolhandlesubmit, handlePageClicktools,\r\n\r\n            handleAllCheckedArticles,handleCheckchangeArticles,stateallchecked,setStateallchecked,\r\n            handleAllCheckedVideos,handleCheckchangeVideos,handleAllCheckedTools,handleAllCheckedSource,\r\n            handleCheckchangeTools,handleCheckchangeSource,setDynotoollink,setDynotooltext,dynolinktextupdater,toolstatuschange\r\n            \r\n\r\n        }}>\r\n\r\n\r\n            {children}\r\n\r\n        </TopicsContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TopicsProvider","import React, { useContext } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\n\r\nfunction Articletable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    checked={topicmanager.stateallchecked}\r\n                                    onChange={topicmanager.handleAllCheckedSource}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">Feed Link</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">is_Fetched</th>\r\n                        <th scope=\"col\">parent_id</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.feedreadylist.map((row, index) => (\r\n\r\n                        <tr key={row.id} className={row.id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        data-url={row.feedlist}\r\n                                        onChange={topicmanager.handleCheckchangeSource}\r\n                                        checked={row.ischecked}\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a href={row.feedlist} target=\"_blank\" rel=\"noopener noreferrer\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.feedlist.substring(0, 60)}</div></a></td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n\r\n                            <td id={row._id}>\r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive ? \r\n                            \r\n                            <input id={row._id} onChange={topicmanager.topicstatuschange} defaultChecked type=\"checkbox\" />\r\n                            \r\n                            : \r\n                            \r\n                            \r\n                            <input  id={row._id} onChange={topicmanager.topicstatuschange} type=\"checkbox\" />\r\n                            \r\n                            \r\n                            }\r\n                            <span className=\"custom-toggle-slider rounded-circle\" />\r\n                            </label>\r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            <td>{row.isfetched  ? \"Fetched\" : \"Not Fetched\"}</td>                            \r\n                            <td>{row.parent_id ? row.parent_id : \"its is parent\"}</td>\r\n                            <td>{row.pubdate}</td>\r\n                            <td>{row.lastmodified}</td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\" data-id={row.id}\r\n                                    onClick={topicmanager.deletefeeditem}\r\n                                >\r\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\" data-id={row.id}></i>\r\n                                </Button>\r\n                                {/* <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row._id}\r\n                                    data-email={row.email}\r\n                                    onClick={toggleeditModal}\r\n                                >\r\n                                    <i className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button> */}\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articletable\r\n","import React, { useContext } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\n\r\nfunction Articlevideotable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);   \r\n\r\n    // const subcatfilter = (valid) =>{\r\n    //     const subcatfiltered = \r\n    //     return subcatfiltered\r\n    // }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"articleparent\"\r\n                                    type=\"checkbox\"  \r\n                                    name = \"articles\" \r\n                                    checked={topicmanager.stateallchecked}\r\n                                    onChange={topicmanager.handleAllCheckedArticles}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"articleparent\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">URL</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">cat</th>\r\n                        <th scope=\"col\">s.cat</th>\r\n                        <th scope=\"col\">review</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.allarticles.map((row, index) => (\r\n\r\n                        <tr key={index} className={row.id}>\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        data-url={row.feedlist}\r\n                                        onChange={topicmanager.handleCheckchangeArticles}\r\n                                        checked={row.ischecked}\r\n                                        \r\n                                        \r\n\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a  href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.title}</div></a></td>\r\n                            <td>\r\n\r\n                            <Media className=\"align-items-center\">\r\n                  <a\r\n                    className=\" mr-3\"\r\n                    href={row.URL}\r\n                    \r\n                  >\r\n                    <img\r\n                      alt=\"...\"\r\n                      height=\"auto\"\r\n                      width=\"150px\"\r\n                      src={row.image}\r\n                    />\r\n                  </a>\r\n                 \r\n                </Media>\r\n\r\n                            </td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n                            \r\n                            <td id={row._id}>\r\n                            \r\n                            \r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive.toString() === \"true\" ?\r\n\r\n                            <><input id={row._id} onChange={topicmanager.articlestatuschange} defaultChecked type=\"checkbox\" />\r\n                            <span className=\"custom-toggle-slider rounded-circle\" /></>\r\n                            \r\n                            : null}\r\n                            {row.isactive.toString() === \"false\" ?\r\n                            <><input id={row._id} onChange={topicmanager.articlestatuschange} type=\"checkbox\" />\r\n                            <span className=\"custom-toggle-slider rounded-circle\" /></>\r\n                            :null\r\n                            }\r\n\r\n                            </label>\r\n                            \r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            \r\n                           <td>\r\n                               {catmanager.subcategories.map(val=>parseInt(val.id)===parseInt(row.subcategory)? val.category:null)}\r\n                           </td>\r\n                           <td>\r\n                           {catmanager.supsubcategories.map(val=>parseInt(val.id)===parseInt(row.supersubcat)? val.category:null)}\r\n                           </td>\r\n\r\n                            <td>{row.isreview ? 'Reviewed' : \"Not Reviewed\"}</td>\r\n                            <td>{row.videopublishedat}</td>\r\n                            <td>{row.lastmodified}</td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                               \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"                                   \r\n                                   \r\n                                    onClick={props.togglemodel}\r\n                                    data-id={row.id}\r\n                                    data-mainref={row.subcategory}\r\n                                    data-superref={row.supersubcat}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articlevideotable\r\n","import React, { useContext } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\n\r\nfunction Toolsvideotable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);   \r\n\r\n    // const subcatfilter = (valid) =>{\r\n    //     const subcatfiltered = \r\n    //     return subcatfiltered\r\n    // }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"toolsparentbox\"\r\n                                    type=\"checkbox\"\r\n                                    checked={topicmanager.stateallchecked}\r\n                                    onChange={topicmanager.handleAllCheckedTools}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"toolsparentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">URL</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">cat</th>\r\n                        <th scope=\"col\">s.cat</th>\r\n                        <th scope=\"col\">review</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.tools.map((row, index) => (\r\n\r\n                        <tr key={index} className={row.id}>\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        data-url={row.URL}\r\n                                        onChange={topicmanager.handleCheckchangeTools}\r\n                                        checked={row.ischecked}\r\n\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a  href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.title}</div></a>\r\n                            <br></br>\r\n                            <input className=\"form-control\" onChange={(e)=>topicmanager.setDynotooltext(e.target.value)} name=\"title\" placeholder=\"new title\" />\r\n                            <br></br>\r\n                            <input className=\"form-control\" onChange={(e)=>topicmanager.setDynotoollink(e.target.value)} name=\"link\" placeholder=\"new link\" />\r\n                            <Button color=\"primary\" id={row.id} type=\"button\" size=\"sm\" className=\"mt-1\" onClick={topicmanager.dynolinktextupdater}>Change</Button>\r\n                            </td>\r\n                           \r\n                            <td>\r\n\r\n                            <Media className=\"align-items-center\">\r\n                  <a\r\n                    className=\" mr-3\"\r\n                    href={row.URL}\r\n                    \r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <img\r\n                      alt=\"...\"\r\n                      height=\"auto\"\r\n                      width=\"150px\"\r\n                      src={row.image}\r\n                    />\r\n                  </a>\r\n                 \r\n                </Media>\r\n\r\n                            </td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n                            \r\n                            <td id={row._id}>\r\n                            \r\n                            \r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive.toString() === \"true\" ?\r\n\r\n                            <><input id={row._id} onChange={topicmanager.toolstatuschange} defaultChecked type=\"checkbox\" />\r\n                            <span className=\"custom-toggle-slider rounded-circle\" /></>\r\n                            \r\n                            : null}\r\n                            {row.isactive.toString() === \"false\" ?\r\n                            <><input id={row._id} onChange={topicmanager.toolstatuschange} type=\"checkbox\" />\r\n                            <span className=\"custom-toggle-slider rounded-circle\" /></>\r\n                            :null\r\n                            }\r\n\r\n                            </label>\r\n                            \r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            \r\n                           <td>\r\n                               {catmanager.subcategories.map(val=>parseInt(val.id)===parseInt(row.subcategory)? val.category:null)}\r\n                           </td>\r\n                           <td>\r\n                           {catmanager.supsubcategories.map(val=>parseInt(val.id)===parseInt(row.supersubcat)? val.category:null)}\r\n                           </td>\r\n\r\n                            <td>{row.isreview ? 'Reviewed' : \"Not Reviewed\"}</td>\r\n                            <td>{row.videopublishedat}</td>\r\n                            <td>{row.lastmodified}</td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                               \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"                                   \r\n                                   \r\n                                    onClick={props.toggletoolmodel}\r\n                                    data-id={row.id}\r\n                                    data-mainref={row.subcategory}\r\n                                    data-superref={row.supersubcat}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolsvideotable\r\n","import React, { useContext } from \"react\";\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\nimport NumericLabel from 'react-pretty-numbers';\r\nimport Moment from 'react-moment';\r\n\r\nfunction Videoarticletable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);   \r\n\r\n    // const subcatfilter = (valid) =>{\r\n    //     const subcatfiltered = \r\n    //     return subcatfiltered\r\n    // }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"videoparent\"\r\n                                    type=\"checkbox\"\r\n                                    checked={topicmanager.stateallchecked}\r\n                                    onChange={topicmanager.handleAllCheckedVideos}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"videoparent\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">URL</th>\r\n                        <th scope=\"col\">Views</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">cat</th>\r\n                        <th scope=\"col\">s.cat</th>\r\n                        <th scope=\"col\">Review</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.allvideos.map((row, index) => (\r\n\r\n                        <tr key={index} className={row.id}>\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        onChange={topicmanager.handleCheckchangeVideos}\r\n                                        checked={row.ischecked}\r\n\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a  href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.title}</div></a></td>\r\n                            <td><NumericLabel>{row.views}</NumericLabel></td>\r\n                            <td>\r\n\r\n                            <Media className=\"align-items-center\">\r\n                  <a\r\n                    className=\" mr-3\"\r\n                    href=\"#pablo\"\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                    <img\r\n                      alt=\"...\"\r\n                      height=\"auto\"\r\n                      width=\"150px\"\r\n                      src={row.image}\r\n                    />\r\n                  </a>\r\n                 \r\n                </Media>\r\n\r\n                            </td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n\r\n                            <td id={row._id}>\r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive ? \r\n                            \r\n                            <input id={row._id} onChange={topicmanager.videostatuschange} defaultChecked type=\"checkbox\" />\r\n                            \r\n                            : null}\r\n                            \r\n                            {!row.isactive ?\r\n                            <input id={row._id} onChange={topicmanager.videostatuschange} type=\"checkbox\" />\r\n                            :null\r\n                            \r\n                            }\r\n                            <span className=\"custom-toggle-slider rounded-circle\" />\r\n                            </label>\r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            \r\n                           <td>\r\n                               {catmanager.subcategories.map(val=>parseInt(val.id)===parseInt(row.subcategory)? val.category:null)}\r\n                           </td>\r\n                           <td>\r\n                           {catmanager.supsubcategories.map(val=>parseInt(val.id)===parseInt(row.supersubcat)? val.category:null)}\r\n                           </td>\r\n\r\n                            <td>{row.isreview ? 'Reviewed' : 'Not Reviewed'}</td>\r\n                            <td><Moment date={row.videopublishedat} /></td>\r\n                            <td><Moment date={row.lastmodified} /></td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                               \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"                                   \r\n                                   \r\n                                    onClick={props.togglevideomodel}\r\n                                    data-id={row.id}\r\n                                    data-mainref={row.subcategory}\r\n                                    data-superref={row.supersubcat}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videoarticletable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Articlevideomodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.topicmanager.articlemodel}\r\n                toggle={props.topicmanager.togglemodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Edit\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.topicmanager.togglemodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                   \r\n\r\n                    <Form role=\"form\" onSubmit={props.topicmanager.articlevideohandlesubmit}>\r\n                        <Input onChange={props.topicmanager.rhandleChange} placeholder=\"Sub Category\" id=\"urlid\" name=\"urlid\" type=\"hidden\" />\r\n                            \r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.subcategories.map((val,index) =>(\r\n                                    parseInt(val.mainref) === parseInt(props.superrefsarticle) ?  \r\n                                    <option key={index} value={val.id}>{val.category}</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.supsubcategories.map((val,index) =>(  \r\n                                    parseInt(val.masterrefrence) === parseInt(props.superrefsarticle) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.superrefsarticle})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.topicmanager.togglemodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Articlevideomodel\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Label,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nfunction Videoarticlemodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.topicmanager.videomodel}\r\n                toggle={props.topicmanager.togglevideomodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Edit Videos\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.topicmanager.togglevideomodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                   \r\n\r\n                    <Form role=\"form\" onSubmit={props.topicmanager.Videoarticlehandlesubmit}>\r\n                        <Input onChange={props.topicmanager.rhandleChange} placeholder=\"Sub Category\" id=\"urlid\" name=\"urlid\" type=\"hidden\" />\r\n                            \r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.subcategories.map((val,index) =>(\r\n                                    parseInt(val.mainref) === parseInt(props.superrefsarticle) ?  \r\n                                    <option key={index} value={val.id}>{val.category}</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.supsubcategories.map((val,index) =>(  \r\n                                    parseInt(val.masterrefrence) === parseInt(props.superrefsarticle) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.superrefsarticle})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.topicmanager.togglevideomodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Videoarticlemodel\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction ToolsModel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.topicmanager.toolmodel}\r\n                toggle={props.topicmanager.toggletoolmodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Edit\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.topicmanager.toggletoolmodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                   \r\n\r\n                    <Form role=\"form\" onSubmit={props.topicmanager.toolhandlesubmit}>\r\n                        <Input onChange={props.topicmanager.rhandleChange} placeholder=\"Sub Category\" id=\"urlid\" name=\"urlid\" type=\"hidden\" />\r\n                            \r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.subcategories.map((val,index) =>(\r\n                                    parseInt(val.mainref) === parseInt(props.superrefsarticle) ?  \r\n                                    <option key={index} value={val.id}>{val.category}</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.supsubcategories.map((val,index) =>(  \r\n                                    parseInt(val.masterrefrence) === parseInt(props.superrefsarticle) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.superrefsarticle})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.topicmanager.toggletoolmodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToolsModel\r\n","import React, { useState, useContext } from 'react';\r\nimport classnames from \"classnames\";\r\nimport Header from \"components/Headers/Header.js\";\r\n// import \"./Topicforms.css\"\r\nimport PropTypes from 'prop-types';\r\n// reactstrap components\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    CardHeader,\r\n    Container,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Col,\r\n    Label,\r\n    Button,\r\n    InputGroup,\r\n    CustomInput,\r\n    Spinner, Pagination\r\n} from \"reactstrap\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport PaginationComponent from \"react-reactstrap-pagination\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport { TopicsContext } from './contexts/TopicsContext';\r\nimport Articletable from './tables/Articletable';\r\nimport Articlevideotable from './tables/Articlevideotable';\r\nimport Toolsvideotable from './tables/Toolsvideotable';\r\nimport Videoarticletable from './tables/Videoarticletable';\r\nimport Articlevideomodel from './models/Articlevideomodel';\r\nimport Videoarticlemodel from './models/Videoarticlemodel';\r\nimport ToolsModel from './models/ToolsModel';\r\n\r\nfunction Topicsforms(props) {\r\n\r\n    // form state\r\n    const initialFormData = Object.freeze({\r\n        tabs: 1\r\n\r\n    });\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);\r\n\r\n    const [formchangedata, updateFormchangedata] = useState(initialFormData);\r\n    const [tabs, setTabs] = useState(formchangedata.tabs)\r\n\r\n\r\n\r\n\r\n\r\n    const toggleNavs = (e, state, index) => {\r\n        e.preventDefault();\r\n        setTabs(index)\r\n        topicmanager.setFetchcategory('')\r\n        topicmanager.setArticlevideoisactive('')\r\n        topicmanager.setArticlevideoisview('')\r\n        topicmanager.setArticlevideosearch('')\r\n        topicmanager.setArticlevideoauthor('')\r\n        topicmanager.setArticlevideochannel('')\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                <Row>\r\n                    <div className=\"col-md\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">Topics</h3>\r\n                            </CardHeader>\r\n                            <div className=\"nav-wrapper\">\r\n                                <Nav\r\n                                    className=\"nav-fill flex-column flex-md-row\"\r\n                                    id=\"tabs-icons-text\"\r\n                                    pills\r\n                                    role=\"tablist\"\r\n                                >\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 1}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 1\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 1)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-cloud-upload-96 mr-2\" />\r\n                Feed and Links Dumping\r\n              </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 2}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 2\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 2)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-books mr-2\" />\r\n                                            {'Source Table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 3}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 3\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 3)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-book-bookmark mr-2\" />\r\n                                            {'Fetched Articles table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 4}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 4\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 4)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-button-play mr-2\" />\r\n                                            {'Fetched Video table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 5}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 5\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 5)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-settings mr-2\" />\r\n                                            {'Fetched Tool table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                </Nav>\r\n                            </div>\r\n                            <Card className=\"shadow\">\r\n                                <CardBody>\r\n                                    <TabContent activeTab={\"tabs\" + tabs}>\r\n                                        <TabPane tabId=\"tabs1\">\r\n\r\n                                            <Form onSubmit={topicmanager.handleSubmit}>\r\n                                                <Row>\r\n                                                    <Col md=\"12\">\r\n                                                        <FormGroup className=\"mb-3\">\r\n                                                            <Label for=\"superref\">Select Topic</Label>\r\n                                                            <Input type=\"select\" name=\"superref\" id=\"superref\"\r\n                                                                onChange={topicmanager.rhandleChange}\r\n                                                            >\r\n                                                                <option>Select Option</option>\r\n                                                                <option value=\"feeds\">Feeds (text data)</option>\r\n                                                                <option value=\"googlenewsfeeds\">Googlenewsfeeds (text data)</option>\r\n                                                                <option value=\"links\">Links (text data)</option>\r\n                                                                <option value=\"channel\">Channel (video data)</option>\r\n                                                                <option value=\"username\">Channel Username (video data)</option>\r\n                                                                <option value=\"keyword\">Keyword (video data)</option>\r\n                                                                <option value=\"video\">Video (video data)</option>\r\n                                                                <option value=\"tools\">Tools</option>\r\n\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup className=\"mb-3\">\r\n                                                            <Label for=\"iptype\">Select Input Type</Label>\r\n                                                            <Input type=\"select\" name=\"iptype\" id=\"iptype\"\r\n                                                                onChange={topicmanager.rhandleChange}\r\n                                                            >\r\n                                                                <option value=\"multiple\">Multiple</option>\r\n                                                                <option value=\"csv\">Csv File</option>\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n                                                        {topicmanager.feedform.iptype === 'multiple' ?\r\n                                                            <FormGroup>\r\n                                                                <Input\r\n                                                                    id=\"iptextarea\"\r\n                                                                    name=\"iptextarea\"\r\n                                                                    placeholder=\"Enter Links By Enter\"\r\n                                                                    rows=\"3\"\r\n                                                                    type=\"textarea\"\r\n                                                                    onChange={topicmanager.rhandleChange}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                            :\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                                <Label for=\"multirefiles\">Upload csv file</Label>\r\n                                                                <InputGroup className=\"input-group-alternative\">\r\n                                                                    <CustomInput type=\"file\" id=\"multirefiles\" name=\"multirefiles\"\r\n                                                                        onChange={topicmanager.onFileChange} label=\"Yo, pick a CSV file\" />\r\n                                                                </InputGroup>\r\n                                                            </FormGroup>\r\n                                                        }\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Button color=\"primary\" type=\"submit\" disabled={topicmanager.isspinner}>\r\n                                                    {topicmanager.isspinner ? <Spinner size=\"sm\" color=\"secondary\" className=\"mr-1\" /> : null}\r\n                                                    {topicmanager.isspinner ? 'Processing..' : 'Submit'}\r\n                                                </Button>\r\n\r\n                                            </Form>\r\n\r\n\r\n                                        </TabPane>\r\n                                        <TabPane tabId=\"tabs2\">\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n\r\n                                                    <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallfeedstable} >Refresh</Button>\r\n\r\n                                                    {topicmanager.feedform.typeofsubmit === \"feeds\" ||\r\n\r\n                                                        topicmanager.feedform.typeofsubmit === \"googlenewsfeeds\" ?\r\n\r\n                                                        <Button outline color=\"info\" size=\"sm\" onClick={topicmanager.sendforFetch} >Crawl Now (Extract)</Button>\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                    {topicmanager.feedform.typeofsubmit === \"channel\" ?\r\n\r\n                                                    <Button outline color=\"danger\" size=\"sm\" onClick={topicmanager.sendchannelfetch} >Fetch Video Channels</Button>\r\n                                                    \r\n                                                    :\r\n                                                    null\r\n                                                    }\r\n                                                    {/* <Button color=\"secondary\" onClick={topicmanager.delpin} >Delete</Button> */}\r\n\r\n\r\n                                            fetched: {topicmanager.howmanyfetch}\r\n                                                    <FormGroup className=\"mt-3\">\r\n                                                        {/* <Label for=\"typeofsubmit\">Select type</Label> */}\r\n                                                        <Input type=\"select\" name=\"typeofsubmit\" bsSize=\"sm\" id=\"typeofsubmit\"\r\n                                                            onChange={topicmanager.rhandleChange}\r\n                                                        >\r\n                                                            <option>Select Option</option>\r\n                                                            <option value=\"\">---------Parent---------</option>\r\n                                                            <option value=\"feeds\">Feeds (text data)</option>\r\n                                                            <option value=\"googlenewsfeeds\">Googlenewsfeeds (text data)</option>\r\n                                                            <option value=\"links\">Links (text data)</option>\r\n                                                            <option value=\"channel\">Channel ID(video data)</option>\r\n                                                            <option value=\"username\">Channel name(video data)</option>\r\n                                                            <option value=\"video\">Video (video data)</option>\r\n                                                            <option value=\"\">---------Children---------</option>\r\n\r\n                                                            <option value=\"genfromgooglefeeds\">Gen from Googlefeeds (text data (child))</option>\r\n                                                            <option value=\"genfromfeeds\">Gen from feeds (text data (child))</option>\r\n                                                            <option value=\"genfromchannel\">Gen from channels (video data (child))</option>\r\n                                                            <option value=\"links\">Links (text data (child))</option>\r\n                                                            <option value=\"video\">Video (video data (child))</option>\r\n\r\n\r\n\r\n                                                        </Input>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <hr />\r\n                                                {/* <Col md='6'>\r\n                                                    <h4 className=\"text-center\">Fetching to Tables</h4>\r\n                                                    <FormGroup className=\"m-3\"> */}\r\n                                                        {/* <Label for=\"fetchcategory\">Select type</Label>\r\n                                                        <Input type=\"select\" name=\"fetchcategory\" id=\"fetchcategory\"\r\n                                                            onChange={topicmanager.rhandleChange}\r\n                                                        >\r\n                                                            <option>Select Option</option>\r\n                                                            {catmanager.categories.map(val => (\r\n                                                                <option key={val.id} value={val.id}>{val.category}</option>\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                        </Input> */}\r\n                                                        {/* {topicmanager.feedform.typeofsubmit === \"video\" ?\r\n                                                            <Button outline color=\"info\" size=\"sm\" onClick={topicmanager.sendforvideoFetch} >Youtube Fetch</Button>\r\n                                                            : <Button outline size=\"sm\" color=\"info\" onClick={topicmanager.sendforFetchtable} >Fetch to Tables</Button>\r\n                                                        } */}\r\n                                                    {/* </FormGroup>\r\n                                                </Col> */}\r\n                                            </Row>\r\n                                            {topicmanager.isspinner ?\r\n                                                <Spinner size=\"md\" color=\"info\" /> : null}\r\n                                            <Articletable />\r\n\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total results: {topicmanager.paginationcount}\r\n                                                    {/* <FormGroup>\r\n                                                        <Input placeholder=\"Type Page number [0-10]\" name=\"page\" id=\"page\" onChange={topicmanager.rhandleChange} />\r\n                                                    </FormGroup> */}\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.paginationcount}\r\n                                                            pageSize={50}\r\n                                                            onSelect={topicmanager.handlePageClick}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n                                                    </Pagination>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n\r\n\r\n                                        </TabPane>\r\n                                        <TabPane tabId=\"tabs3\">\r\n\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                <FormGroup>\r\n                                                            <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallarticles} >Refresh</Button>\r\n                                                            <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeleter} >Delete</Button>\r\n                                                            <Button outline color=\"info\" size=\"sm\" id=\"Articles\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                            <Button outline color=\"success\" size=\"sm\" id=\"Articles\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                        </FormGroup>\r\n                                                    <Form inline>\r\n                                                       \r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">website: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter website term\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"authorquery\">author: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.authorquery} placeholder=\"Enter authorquery\" id=\"authorquery\" name=\"authorquery\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                        <Label for=\"q\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    Fetched Results: {topicmanager.totalresults} of Total {topicmanager.collectioncountarticle}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                            <Articlevideotable articlemodel={topicmanager.articlemodel} togglemodel={topicmanager.togglemodel} />\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total Pages: {Math.ceil(topicmanager.totalresults / 50)}\r\n\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n\r\n\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        {/* <PaginationComponent\r\n                                                            size=\"sm\"\r\n                                                            totalItems={Math.ceil(topicmanager.totalresults / 20)}\r\n                                                            pageSize={5}\r\n                                                            onSelect={topicmanager.handlePageClickarticle}\r\n                                                            /> */}\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.totalresults}\r\n                                                            pageSize={50}\r\n                                                            onSelect={topicmanager.handlePageClickarticle}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n\r\n                                                    </Pagination>\r\n\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPane>\r\n                                        <TabPane tabId=\"tabs4\">\r\n\r\n                                            <Row>\r\n                                                <Col md=\"12\">  \r\n                                                <FormGroup>\r\n                                                            <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallvideos} >Refresh</Button>\r\n                                                            <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeletervideos} >Delete</Button>\r\n                                                            <Button outline color=\"info\" size=\"sm\" id=\"Videos\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                            <Button outline color=\"success\" size=\"sm\" id=\"Videos\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                        </FormGroup>     \r\n                                                <Form inline>\r\n                                                                                                   \r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">channelid: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter Channelid\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                        <Label for=\"channelid\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    Fetched Results: {topicmanager.paginationcount} of Total {topicmanager.collectioncountarticle}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                            <Videoarticletable videomodel={topicmanager.videomodel} togglevideomodel={topicmanager.togglevideomodel} />\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total Pages: {Math.ceil(topicmanager.paginationcount / 50)}\r\n\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.paginationcount}\r\n                                                            pageSize={50}\r\n                                                            onSelect={topicmanager.handlePageClickvideo}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n\r\n\r\n                                                    </Pagination>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPane>\r\n                                        {/* Tools */}\r\n                                        <TabPane tabId=\"tabs5\">\r\n\r\n                                            <Row>\r\n                                                <Col md=\"12\">  \r\n                                                <FormGroup>\r\n                                                    \r\n                                                            <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getalltools} >Refresh</Button>\r\n                                                            <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeletertools} >Delete</Button>\r\n                                                            <Button outline color=\"info\" size=\"sm\" id=\"Tools\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                            <Button outline color=\"success\" size=\"sm\" id=\"Tools\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                        </FormGroup>     \r\n                                                <Form inline>\r\n                                                                                                   \r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">website: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter website term\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"authorquery\">author: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.authorquery} placeholder=\"Enter authorquery\" id=\"authorquery\" name=\"authorquery\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                        <Label for=\"q\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    Fetched Results: {topicmanager.paginationcount} of Total {topicmanager.collectioncounttools}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                            <Toolsvideotable toolmodel={topicmanager.toolmodel} toggletoolmodel={topicmanager.toggletoolmodel} />\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total Pages: {Math.ceil(topicmanager.paginationcount / 50)}\r\n\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.paginationcount}\r\n                                                            pageSize={50}\r\n                                                            onSelect={topicmanager.handlePageClicktools}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n\r\n\r\n                                                    </Pagination>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPane>\r\n                                        {/* End Tools */}\r\n                                    </TabContent>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Articlevideomodel\r\n                    catmanager={catmanager}\r\n                    topicmanager={topicmanager}\r\n                    superrefsarticle={8}\r\n\r\n                />\r\n                <Videoarticlemodel\r\n                    catmanager={catmanager}\r\n                    topicmanager={topicmanager}\r\n                    superrefsarticle={9}\r\n\r\n                />\r\n                 <ToolsModel\r\n                    catmanager={catmanager}\r\n                    topicmanager={topicmanager}\r\n                    superrefsarticle={10}\r\n\r\n                />\r\n\r\n\r\n\r\n\r\n            </Container>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    // Total number of items\r\n    totalItems: PropTypes.number.isRequired,\r\n    // Number of items displayed each page\r\n    pageSize: PropTypes.number.isRequired,\r\n    // Function to receive the event when a page is selected\r\n    onSelect: PropTypes.func.isRequired,\r\n    // Number of pages being displayed, by default 5\r\n    maxPaginationNumbers: PropTypes.number,\r\n    // Page where the pagination starts, by default 1\r\n    defaultActivePage: PropTypes.number,\r\n    // Change text of \"First\" button\r\n    firstPageText: PropTypes.string,\r\n    // Change text of \"Previous\" button\r\n    previousPageText: PropTypes.string,\r\n    // Change text of \"Next\" button\r\n    nextPageText: PropTypes.string,\r\n    // Change text of \"Last\" button\r\n    lastPageText: PropTypes.string,\r\n    // Changes the size of the component. Values: \"sm\" and \"lg\". Without the prop the size is normal.\r\n    size: PropTypes.string\r\n}\r\nexport default Topicsforms\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    CardHeader,\r\n    Card,\r\n    Label,\r\n    Alert,\r\n    Container,\r\n    CustomInput,\r\n    Pagination\r\n} from \"reactstrap\";\r\nimport PaginationComponent from \"react-reactstrap-pagination\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst Lettersubscription = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [scrolling, setScrolling] = useState(true);    \r\n    const [bannerlink, setBannerlink] = useState(\"\");\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [datatype, setDatatype] = useState(\"articles\");\r\n    const [pagenumber, setPagenumber] = useState(1);\r\n    const [totalcount, setTotalcount] = useState(1);\r\n    const [subvideos, setSubvideos] = useState([]);\r\n    const [multirefiles, setMultirefiles] = useState([]);\r\n    const [list, setList] = useState([]);\r\n    const [videolist, setVideolist] = useState([]);\r\n    const [toollist, setToollist] = useState([]);    \r\n    const [hasmore,setHasmore] = useState(false);\r\n    const [stateallchecked, setStateallchecked] = useState(false);\r\n    \r\n    const observer =useRef()\r\n    \r\n    const lastElmRef = useCallback( node => {\r\n        \r\n        // if(scrolling) return\r\n        \r\n        if (observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if (entries[0].isIntersecting) {\r\n                  \r\n                // setPagenumber(prevPagenumber => prevPagenumber + 1)           \r\n                handlePageClickvideo(pagenumber);\r\n            }\r\n        })\r\n        if (node) observer.current.observe(node)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n        let form_data = new FormData();\r\n\r\n        form_data.append('per_page', 5);\r\n        form_data.append('start_from', 1);\r\n        form_data.append('datatype', datatype);\r\n        // form_data.append('phone', editingform.phone);\r\n        // form_data.append('datacategory', editingform.datacategory);\r\n\r\n        let url = 'https://app.kiranvoleti.com/daily';\r\n        // console.log(editingform)\r\n        // return\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                var respvideos = res.data.dailyvideos.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setSubvideos(respvideos)\r\n                setTotalcount(res.data.totalcount)\r\n                setScrolling(false)\r\n\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err)\r\n            }\r\n            )\r\n\r\n            \r\n\r\n            \r\n\r\n\r\n    }, [])\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    const refreshdata = () => {\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('per_page', 15);\r\n        form_data.append('start_from', 1);\r\n        form_data.append('datatype', datatype);\r\n        // form_data.append('phone', editingform.phone);\r\n        // form_data.append('datacategory', editingform.datacategory);\r\n\r\n        let url = 'https://app.kiranvoleti.com/daily';\r\n        // console.log(editingform)\r\n        // return\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                var respvideos = res.data.dailyvideos.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setSubvideos(respvideos)\r\n\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err)\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n    // const handleChange = (e) => {\r\n\r\n\r\n    //     [e.target.name] = e.target.value.trim()\r\n\r\n\r\n    // };\r\n\r\n    const onFileChange = (e) => {\r\n        setMultirefiles(e.target.files[0])\r\n    }\r\n\r\n\r\n    \r\n\r\n    const handlePageClickvideo = async (e) => {\r\n        const pagevalue = document.getElementById('refvaluepagination').value;\r\n        let form_data = new FormData();\r\n        setPagenumber(prevPagenumber => prevPagenumber + 1)\r\n        form_data.append('per_page',5);\r\n        form_data.append('start_from', parseInt(pagevalue)+1);\r\n        form_data.append('datatype', datatype);\r\n        setStateallchecked(false);    \r\n        \r\n        \r\n        \r\n\r\n\r\n\r\n        // Before Ui Elements\r\n\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/daily\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        \r\n\r\n        \r\n        \r\n        await axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                // setFeedreadylist(res.data.feeds)     \r\n                \r\n                // tosttrigger(res.data.msg, 'success')\r\n                // setHasmore(res.data.dailyvideos > 0)\r\n                \r\n                if (res.data.dailyvideos.length <=0 ){\r\n                    return alert('No More Data')\r\n                }\r\n                var respvideos = res.data.dailyvideos.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                \r\n                setSubvideos(prevSubvideos => {\r\n                    return [...new Set([...prevSubvideos,...respvideos])]\r\n                });\r\n                \r\n                \r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>{\r\n                \r\n                tosttrigger(err, 'error')\r\n                }\r\n\r\n            )\r\n\r\n    };\r\n\r\n   \r\n\r\n    const handleAllChecked = (event) => {\r\n\r\n        var respvideos = subvideos.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setSubvideos(respvideos)\r\n        setStateallchecked(event.target.checked)\r\n\r\n\r\n\r\n    }\r\n    const assignids = (e) => {\r\n\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        if (datatype.toString() === \"articles\") {\r\n            allelm.forEach(elm => {\r\n                if (elm.checked) {\r\n\r\n                    let retrnindex = list.indexOf((elm.id).toString());\r\n                    if (retrnindex <= 0) {\r\n                        list.push(elm.id)\r\n                    }\r\n                }\r\n\r\n            })\r\n            setList(list);\r\n        }\r\n        if (datatype.toString() === \"videos\") {\r\n            allelm.forEach(elm => {\r\n                if (elm.checked) {\r\n\r\n                    let retrnindex = videolist.indexOf((elm.id).toString());\r\n                    if (retrnindex <= 0) {\r\n                        videolist.push(elm.id)\r\n                    }\r\n                }\r\n\r\n            })\r\n            setVideolist(videolist);\r\n        }\r\n        if (datatype.toString() === \"tools\") {\r\n            allelm.forEach(elm => {\r\n                if (elm.checked) {\r\n\r\n                    let retrnindex = toollist.indexOf((elm.id).toString());\r\n                    if (retrnindex <= 0) {\r\n                        toollist.push(elm.id)\r\n                    }\r\n                }\r\n\r\n            })\r\n            setToollist(toollist);\r\n        }\r\n\r\n\r\n\r\n        tosttrigger('Added to List', 'success')\r\n\r\n    }\r\n    const deassignids = async (e) => {\r\n        var tempraylist = []\r\n        var outputlist = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                tempraylist.push(elm.id)\r\n\r\n            }\r\n        })\r\n        outputlist = list.filter(n => !tempraylist.includes(n))\r\n\r\n\r\n        tosttrigger('Removed from List', 'success')\r\n        return setList(outputlist);\r\n\r\n    }\r\n\r\n    const handleCheckchange = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var someavideosupdated = subvideos.filter((val, key) => {\r\n\r\n            return [...subvideos, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setSubvideos(someavideosupdated);\r\n\r\n    }\r\n\r\n    const handleSubscribe = async (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('list', list);\r\n        form_data.append('videolist', videolist);\r\n        form_data.append('toollist', toollist);\r\n        form_data.append('title', title);\r\n        form_data.append('subject', subject);\r\n        form_data.append('datatype', datatype);\r\n        form_data.append('bannerlink', bannerlink);\r\n\r\n        // for (const key of Object.keys(multirefiles)) {\r\n        //     form_data.append('uploadfile', multirefiles[key])\r\n        // }\r\n        form_data.append('uploadfile', multirefiles)\r\n\r\n        \r\n\r\n        // Before Ui Elements\r\n\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/dailysubscribe\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                \r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n    };\r\n\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    // end checkbox\r\n\r\n\r\n    function tosttrigger(msg, status) {\r\n        if (status === \"success\") {\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } else {\r\n            toast.error(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    // function hideSwalert() {\r\n    //     setSwlert(\"\");\r\n    // }\r\n\r\n    function items() {\r\n        return (subvideos.map((row, index) => {\r\n\r\n         if(subvideos.length === index+1){\r\n            return <tr ref={lastElmRef} key={index} className={row.id}>\r\n        \r\n\r\n            <th scope=\"row\">\r\n\r\n\r\n                <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                        className=\"custom-control-input\"\r\n                        id={row.id}\r\n                        type=\"checkbox\"\r\n                        name=\"childbox\"\r\n                        onChange={handleCheckchange}\r\n                        checked={row.ischecked}\r\n\r\n                    />\r\n\r\n                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                        {index + 1}\r\n                    </label>\r\n                </div>\r\n\r\n\r\n\r\n            </th>\r\n            <td><a href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{ width: '200px', wordWrap: 'break-word', whiteSpace: \"pre-wrap\" }}>{row.title}</div></a></td>\r\n            <td>\r\n\r\n                <Media className=\"align-items-center\">\r\n                    <a\r\n                        className=\" mr-3\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                    >\r\n                        <img\r\n                            alt=\"...\"\r\n                            height=\"auto\"\r\n                            width=\"150px\"\r\n                            src={row.image}\r\n                        />\r\n                    </a>\r\n\r\n                </Media>\r\n\r\n            </td>\r\n            <td>{row.category}</td>\r\n\r\n            <td>{row.videopublishedat}</td>\r\n            <td>{row.lastmodified}</td>\r\n\r\n\r\n        </tr>\r\n\r\n         }  \r\n         else{\r\n            return <tr key={index} className={row.id}>\r\n        \r\n\r\n            <th scope=\"row\">\r\n\r\n\r\n                <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                        className=\"custom-control-input\"\r\n                        id={row.id}\r\n                        type=\"checkbox\"\r\n                        name=\"childbox\"\r\n                        onChange={handleCheckchange}\r\n                        checked={row.ischecked}\r\n\r\n                    />\r\n\r\n                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                        {index + 1}\r\n                    </label>\r\n                </div>\r\n\r\n\r\n\r\n            </th>\r\n            <td><a href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{ width: '200px', wordWrap: 'break-word', whiteSpace: \"pre-wrap\" }}>{row.title}</div></a></td>\r\n            <td>\r\n\r\n                <Media className=\"align-items-center\">\r\n                    <a\r\n                        className=\" mr-3\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                    >\r\n                        <img\r\n                            alt=\"...\"\r\n                            height=\"auto\"\r\n                            width=\"150px\"\r\n                            src={row.image}\r\n                        />\r\n                    </a>\r\n\r\n                </Media>\r\n\r\n            </td>\r\n            <td>{row.category}</td>\r\n\r\n            <td>{row.videopublishedat}</td>\r\n            <td>{row.lastmodified}</td>\r\n\r\n\r\n        </tr>\r\n         }                 \r\n        \r\n\r\n\r\n        }))}\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Header />\r\n            <Container className=\"mt--7\" fluid>\r\n\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                {/* Button trigger modal */}\r\n                <Card className=\"shadow\">\r\n                    <CardHeader className=\"border-0\">\r\n                        <h3 className=\"mb-0\">Subscription Alert</h3>\r\n                    </CardHeader>\r\n                    <input type=\"hidden\" id =\"refvaluepagination\" value={pagenumber} />\r\n\r\n                    <Row>\r\n                        <Col md=\"10\" className=\"m-3\">\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"subject\">Subject</Label>\r\n                                <Input type=\"text\" name=\"subject\" id=\"subject\"\r\n                                    onChange={(e) => setSubject(e.target.value)}\r\n                                />\r\n\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"title\">Text</Label>\r\n                                <Input type=\"text\" name=\"title\" id=\"title\"\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                />\r\n\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"multirefiles\">Upload Banner</Label>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <CustomInput type=\"file\" id=\"multirefiles\" name=\"multirefiles\"\r\n                                        onChange={onFileChange} label=\"Yo, pick a files!\" />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"bannerlink\">Banner URL</Label>\r\n                                <Input type=\"text\" name=\"bannerlink\" id=\"bannerlink\"\r\n                                    onChange={(e) => setBannerlink(e.target.value)}\r\n                                />\r\n\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"datatype\">Category Filter</Label>\r\n                                <Input type=\"select\" name=\"datatype\" id=\"datatype\"\r\n                                    onChange={(e) => setDatatype(e.target.value)}>\r\n                                    <option className=\"form-controle\" value=\"articles\">Articles</option>\r\n                                    <option className=\"form-controle\" value=\"videos\">Videos</option>\r\n                                    <option className=\"form-controle\" value=\"tools\">Tools</option>\r\n                                </Input>\r\n\r\n                            </FormGroup>\r\n\r\n\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Button onClick={assignids}>Assign</Button>\r\n                                <Button onClick={handleSubscribe}>Send Mail</Button>\r\n                                <Button onClick={deassignids}>Deassign</Button>\r\n                                <Button onClick={refreshdata}>Refresh</Button>\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n\r\n\r\n\r\n                    </Row>\r\n\r\n\r\n                    <Table  className=\"align-items-center table-flush\" responsive>\r\n\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>\r\n                                    <div className=\"custom-control custom-checkbox mb-3\">\r\n                                        <input\r\n                                            className=\"custom-control-input\"\r\n                                            id=\"parentbox\"\r\n                                            type=\"checkbox\"\r\n                                            // checked = {stateallchecked}\r\n                                            onChange={handleAllChecked}\r\n                                        />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                            #\r\n                                </label>\r\n                                    </div>\r\n                                </th>\r\n                                <th scope=\"col\">URL</th>\r\n                                <th scope=\"col\">Image</th>\r\n                                <th scope=\"col\">Type</th>\r\n                                <th scope=\"col\">pubdate</th>\r\n                                <th scope=\"col\">lastmodified</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <>\r\n                            {items()}\r\n                            </>\r\n                        </tbody>\r\n                    </Table>\r\n                    {/* <Row>\r\n\r\n                        <Col md=\"6\" className=\"mt-1\">\r\n                            <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                <PaginationComponent\r\n                                    totalItems={totalcount}\r\n                                    pageSize={5}\r\n                                    onSelect={handlePageClickvideo}\r\n                                    maxPaginationNumbers={5}\r\n                                    defaultActivePage={1}\r\n                                    firstPageText={'<'}\r\n                                    previousPageText={'<<'}\r\n                                    nextPageText={'>>'}\r\n                                    lastPageText={'>'}\r\n                                />\r\n\r\n\r\n                            </Pagination>\r\n                        </Col>\r\n                    </Row> */}\r\n\r\n                </Card>\r\n\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    closeClassName: PropTypes.string,\r\n    color: PropTypes.string, // default: 'success'\r\n    isOpen: PropTypes.bool,  // default: true\r\n    toggle: PropTypes.func,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    fade: PropTypes.bool, // default: true\r\n    // Controls the transition of the alert fading in and out\r\n    // See Fade for more details\r\n}\r\nexport default Lettersubscription\r\n","import Index from \"views/Index.js\";\nimport Userslist from \"views/examples/Userslist.js\";\nimport Subscribelist from \"views/examples/Subscribelist.js\";\nimport Categories from \"views/examples/Categories.js\";\nimport Subcategories from \"views/examples/Subcategories.js\";\nimport Supsubcategories from \"views/examples/Supsubcategories.js\";\nimport Topicsforms from \"views/examples/Topicsforms.js\";\nimport Lettersubscription from \"views/examples/Lettersubscription\";\n// import Icons from \"views/examples/Icons.js\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('usertype') !== \"superuser\" ? 'block' : 'block'  \n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"ni ni-planet text-blue\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"ni ni-pin-3 text-orange\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/user-profile\",\n  //   name: \"User Profile\",\n  //   icon: \"ni ni-single-02 text-yellow\",\n  //   component: Profile,\n  //   layout: \"/admin\"\n  // },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"ni ni-badge text-gray\",\n    component: Userslist,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('usertype') !== \"superuser\" ? 'none' : 'block'  \n  },\n  \n  {\n    path: \"/categories/topics\",\n    name: \"Main Categories (topics)\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Categories,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('usertype') !== \"superuser\" ? 'none' : 'block'  \n  },\n  {\n    path: \"/categories/subcategories\",\n    name: \"Sub Categories\",\n    icon: \"ni ni-bullet-list-67 text-gray\",\n    component: Subcategories,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('usertype') !== \"superuser\" ? 'none' : 'block'  \n  },\n  {\n    path: \"/categories/supersubcategories\",\n    name: \"Supersub Categories\",\n    icon: \"ni ni-bullet-list-67 text-gray\",\n    component: Supsubcategories,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('usertype') !== \"superuser\" ? 'none' : 'block'  \n  },\n  {\n    path: \"/categories/manage\",\n    name: \"Topics\",\n    icon: \"ni ni-collection text-gray\",\n    component: Topicsforms,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('usertype') === \"superuser\" ? 'block' : 'block'  \n  },\n  {\n    path: \"/categories/daily\",\n    name: \"Subscription\",\n    icon: \"ni ni-send text-gray\",\n    component: Lettersubscription,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('usertype') === \"superuser\" ? 'block' : 'none'  \n  },\n  {\n    path: \"/tags\",\n    name: \"Tags\",\n    icon: \"ni ni-tag text-gray\",\n    component: Subscribelist,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('usertype') !== \"superuser\" ? 'block' : 'block'  \n  },\n  // {\n  //   path: \"/login\",\n  //   name: \"Login\",\n  //   icon: \"ni ni-key-25 text-info\",\n  //   component: Login,\n  //   layout: \"/auth\"\n  // },\n  // {\n  //   path: \"/register\",\n  //   name: \"Register\",\n  //   icon: \"ni ni-circle-08 text-pink\",\n  //   component: Register,\n  //   layout: \"/auth\"\n  // }\n];\nexport default routes;\n","\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport axios from 'axios';\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidMount(e) {\n    const authurl = \"https://app.kiranvoleti.com/authcheck\";\n    \n     axios.get(authurl).then(res=>{\n            if (res.data.issuperuser === true){\n\n                localStorage.setItem('usertype', 'superuser');     \n                 \n                       \n            }else if (res.data.isstaff === true){\n                localStorage.setItem('usertype', 'staff');  \n                  \n            }\n            else{\n                localStorage.setItem('usertype', 'user');  \n                // window.location.assign(\"/login\")\n                \n\n            }\n            \n            \n        }).catch(err=>{\n            console.log(err)\n        })\n    \n  }\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/digitalbox.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport axios from 'axios';\nimport routes from \"routes.js\";\n\nclass Admindash extends React.Component {\n  componentDidMount(e) {\n    const authurl = \"https://app.kiranvoleti.com/authcheck\";\n    \n     axios.get(authurl).then(res=>{\n            if (res.data.issuperuser === true){\n\n                localStorage.setItem('usertype', 'superuser');     \n                 \n                       \n            }else if (res.data.isstaff === true){\n                localStorage.setItem('usertype', 'staff');  \n                  \n            }\n            else{\n                localStorage.setItem('usertype', 'user');  \n                // window.location.assign(\"/login\")\n                \n\n            }\n            \n            \n        }).catch(err=>{\n            console.log(err)\n        })\n\n  }\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\" && prop.path ===\"/index\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n       ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/digitalbox.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admindash;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar\n          className=\"navbar-top navbar-horizontal navbar-dark\"\n          expand=\"md\"\n        >\n          <Container className=\"px-4\">\n            <NavbarBrand to=\"/\" tag={Link}>\n              <img alt=\"...\" src={require(\"assets/img/brand/argon-react-white.png\")} />\n            </NavbarBrand>\n            <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n              <div className=\"navbar-collapse-header d-md-none\">\n                <Row>\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    <Link to=\"/\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/brand/argon-react.png\")}\n                      />\n                    </Link>\n                  </Col>\n                  <Col className=\"collapse-close\" xs=\"6\">\n                    <button\n                      className=\"navbar-toggler\"\n                      id=\"navbar-collapse-main\"\n                    >\n                      <span />\n                      <span />\n                    </button>\n                  </Col>\n                </Row>\n              </div>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                    <i className=\"ni ni-planet\" />\n                    <span className=\"nav-link-inner--text\">Dashboard</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/register\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-circle-08\" />\n                    <span className=\"nav-link-inner--text\">Register</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/login\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-key-25\" />\n                    <span className=\"nav-link-inner--text\">Login</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/admin/user-profile\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-single-02\" />\n                    <span className=\"nav-link-inner--text\">Profile</span>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </UncontrolledCollapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  © 2018{\" \"}\n                  <a\n                    className=\"font-weight-bold ml-1\"\n                    href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    Creative Tim\n                  </a>\n                </div>\n              </Col>\n              <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Creative Tim\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com/presentation?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      About Us\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"http://blog.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      Use these awesome forms to login or create new account in\n                      your project for free.\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminLayout from \"layouts/Admin.js\";\nimport AdminLayoutdash from \"layouts/Admindash.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport UsersProvider from \"./views/examples/contexts/UserContext\"\nimport CategoryProvider from \"./views/examples/contexts/CategoryContext\"\nimport TopicsProvider from \"./views/examples/contexts/TopicsContext\"\n\nReactDOM.render(\n  <UsersProvider>\n  <CategoryProvider>\n    <TopicsProvider>\n  <BrowserRouter>\n    <Switch>\n    <Route exact path=\"/admin/categories/:token\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/manage/:token\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/users\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/tags\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/index\" render={props => <AdminLayoutdash {...props} />} />\n      \n      <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n      \n      <Redirect from=\"/\" to=\"/admin/users\" />\n    </Switch>\n  </BrowserRouter>\n  </TopicsProvider>\n  </CategoryProvider>\n  </UsersProvider>,\n  document.getElementById(\"root\")\n);\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/user.e4867e9d.jpg\";"],"sourceRoot":""}