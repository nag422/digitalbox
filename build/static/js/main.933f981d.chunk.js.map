{"version":3,"sources":["assets/img/brand/digitalbox.png","assets/img/theme/team-1-800x800.jpg","assets/img/brand/argon-react-white.png","assets/img/brand/argon-react.png","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","components/Headers/Header.js","components/Headers/Header2.js","views/Index.js","views/examples/tables/Userlisttable.js","views/examples/tables/Paginationtable.js","views/examples/contexts/UserContext.js","views/examples/Userslist.js","views/examples/tables/Tagstable.js","views/examples/Subscribelist.js","views/examples/contexts/CategoryContext.js","views/examples/tables/Categoriestable.js","views/examples/models/Categorymodel.js","views/examples/Categories.js","views/examples/tables/Subcategoriestable.js","views/examples/models/Subcategorymodel.js","views/examples/Subcategories.js","views/examples/tables/Supsubcategoriestable.js","views/examples/models/Supsubcategorymodel.js","views/examples/Supsubcategories.js","views/examples/contexts/TopicsContext.js","views/examples/tables/Articletable.js","views/examples/tables/Articlevideotable.js","views/examples/tables/Toolsvideotable.js","views/examples/tables/Videoarticletable.js","views/examples/models/Articlevideomodel.js","views/examples/models/Videoarticlemodel.js","views/examples/models/ToolsModel.js","views/examples/Topicsforms.js","views/examples/Lettersubscription.js","views/examples/tables/Popularlisttable.js","views/examples/Popularlist.js","views/examples/tables/Paymentlisttable.js","views/examples/Paymentlist.js","routes.js","layouts/Admin.js","layouts/Admindash.js","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","layouts/Auth.js","index.js","variables/charts.js","assets/img/theme/user.jpg"],"names":["module","exports","AdminNavbar","React","Component","render","Navbar","className","expand","id","Container","fluid","to","this","props","brandText","Form","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","type","Nav","navbar","UncontrolledDropdown","nav","DropdownToggle","Media","alt","src","require","DropdownMenu","right","DropdownItem","header","tag","divider","href","Footer","Row","Col","xl","rel","target","NavItem","NavLink","Sidebar","constructor","super","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","layout","path","NavLinkRRD","onClick","activeClassName","style","display","displayproperty","icon","name","activeRoute","bind","routeName","location","pathname","indexOf","navbarBrandProps","bgColor","logo","innerLink","Link","outterLink","NavbarBrand","imgAlt","imgSrc","aria-labelledby","e","preventDefault","Collapse","isOpen","xs","aria-label","defaultProps","Header","userscount","lg","Card","CardBody","CardTitle","articlescount","videoscount","toolscount","yesterdayarticles","yesterdayvideos","yesterdaytools","Index","toggleNavs","index","activeNav","chartExample1Data","componentDidMount","a","FormData","append","config","headers","getCookie","axios","get","then","res","data","articles","videos","tools","users","catch","err","console","log","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","currentpath","window","Chart","parseOptions","chartOptions","CardHeader","pills","classnames","active","data-toggle","Alert","propTypes","PropTypes","string","closeClassName","color","bool","toggle","func","oneOfType","fade","Userlisttable","useState","swalert","exampleModal","setExampleModal","editModal","setEditModal","alertmsgcolor","setAlertmsgcolor","alertmsg","setAlertmsg","userstate","setUserstate","initialFormData","Object","freeze","username","email","password","password1","phone","capability","datacategory","initialeditingform","_id","formchangedata","updateFormchangedata","editingform","updateEditingform","handleChange","value","ehandleChange","statuschange","form_data","checked","post","tosttrigger","adminstatus","fetchusers","subscribestatechange","toggleModal","setIsalert","toggleeditModal","dataset","handlechange","event","userstateaction","nowobj","isChecked","filter","val","msg","status","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","newestOnTop","rtl","pauseOnFocusLoss","md","Button","size","area-hidden","deleteUser","totalpages","Table","responsive","onChange","allelm","querySelectorAll","forEach","elm","setAttribute","removeAttribute","htmlFor","scope","row","newsletter","is_active","defaultChecked","is_superuser","is_staff","data-id","deleteUserind","aria-hidden","data-username","data-email","Modal","data-dismiss","isalert","Spinner","role","onSubmit","options","l","selected","push","multiple","Paginationtable","UsersContext","createContext","QueryContext","PaginationContext","UsersProvider","children","setUsers","q","setQ","currentpage","setCurrentpage","setTotalpages","useEffect","total","rows","Provider","toLowerCase","Userslist","useContext","paginate","body","JSON","stringify","fetchfromdatabase","list","Pagination","totalItems","pageSize","onSelect","maxPaginationNumbers","defaultActivePage","firstPageText","previousPageText","nextPageText","lastPageText","CardFooter","Tagstable","handleAllChecked","tags","handleCheckchange","ischecked","Subscribelist","setTags","setStateallchecked","taglist","setTaglist","fetchtags","resptags","outline","valid","valchecked","somesubsupdated","toString","respvideos","CategoryContext","CategoryProvider","match","categories","setCategories","subcategories","setSubcategories","supsubcategories","setSupsubcategories","setSwlert","catmodel","setCatmodel","subcatmodel","setSubcatmodel","supsubcatmodel","setSupsubcatmodel","updatecatmodel","setUpdatecatmodel","isspinner","setIsspinner","categorystate","setCategorystate","category","mainref","superref","maincats","subcats","supsubcats","addsubcategorymodel","addsupsubcategorymodel","deleteThisGoal","delsid","handleSubmit","prevCategories","indexkey","rhandleChange","categorytateaction","updatehandlesubmit","subcathandleSubmit","prevSubcategories","subcatgorydeletebutton","parseInt","supsubcathandleSubmit","prevSupsubcategories","masterrefrence","refrence","supsubcatgorydeletebutton","Categoriestable","addcatmodeltrigger","cats","data-category","Categorymodel","Categories","catmanager","trys","useRouteMatch","params","token","catref","delete","Subcategoriestable","refcats","ris","Subcategorymodel","Label","for","Subcategories","Supsubcategoriestable","masterefcat","Supsubcategorymodel","Supsubcategories","TopicsContext","TopicsProvider","Topicsform","iptype","iptextarea","urlid","typeofsubmit","multirefiles","perpage","page","start_from","feedform","updateFeedform","feedreadylist","setFeedreadylist","setTopicstate","fetchcategory","setFetchcategory","howmanyfetch","setHowmanyfetch","articlevideoperpage","setArticlevideoperpage","articlevideopage","articlevideosearch","setArticlevideosearch","articlevideoauthor","setArticlevideoauthor","articlevideostatus","articlevideoisactive","setArticlevideoisactive","articlevideoisview","setArticlevideoisview","articlevideochannel","setArticlevideochannel","totalresults","setTotalresults","allarticles","setAllarticles","articlemodel","setArticlemodel","videomodel","setVideomodel","toolmodel","setToolmodel","collectioncountarticle","setCollectioncountarticle","paginationcount","setPaginationcount","allvideos","setAllvideos","setTools","collectioncounttools","setCollectioncounttools","totaltool","stateallchecked","dynotoollink","setDynotoollink","dynotooltext","setDynotooltext","handlePageClick","feeds","spin","setSpin","sendforFetch","ispin","triggerfeedsfetch","sendchannelfetch","prevHowmany","successdatalength","sendforFetchtable","reactfetch","handlePageClickarticle","resparticles","reviewupdate","tablename","someavideosupdated","isreview","somearticlesupdated","statusupdate","message","includes","isactive","sometoolsupdated","bulkdeleter","bulkdeletervideos","somevideosupdated","bulkdeletertools","onUploadProgress","progressEvent","loaded","percent","Math","floor","keys","onFileChange","files","getallfeedstable","respfeeds","alert","resptools","delpin","someval","topicstatuschange","togglemodel","statetoggle","viewtoggle","getallarticles","articlevideohandlesubmit","articlestatuschange","searchquery","handlePageClickvideo","collectioncountvideos","deletefeeditem","sitequery","authorquery","getallvideos","togglevideomodel","Videoarticlehandlesubmit","videostatuschange","getalltools","toggletoolmodel","toolhandlesubmit","handlePageClicktools","handleAllCheckedArticles","handleCheckchangeArticles","handleAllCheckedVideos","handleCheckchangeVideos","handleAllCheckedTools","handleAllCheckedSource","handleCheckchangeTools","handleCheckchangeSource","somefeedsupdated","dynolinktextupdater","title","URL","toolstatuschange","Articletable","topicmanager","data-url","feedlist","width","wordWrap","whiteSpace","isfetched","parent_id","pubdate","lastmodified","spinid","Articlevideotable","height","image","subcategory","supersubcat","videopublishedat","data-mainref","data-superref","Toolsvideotable","Videoarticletable","views","date","Articlevideomodel","superrefsarticle","Videoarticlemodel","ToolsModel","PaginationComponent","number","isRequired","Topicsforms","tabs","setTabs","aria-selected","TabContent","activeTab","TabPane","tabId","CustomInput","label","disabled","bsSize","inline","ceil","Lettersubscription","setTitle","setScrolling","bannerlink","setBannerlink","subject","setSubject","datatype","setDatatype","pagenumber","setPagenumber","setTotalcount","subvideos","setSubvideos","setMultirefiles","setList","videolist","setVideolist","toollist","setToollist","observer","useRef","lastElmRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","dailyvideos","totalcount","pagevalue","getElementById","prevPagenumber","prevSubvideos","Set","deassignids","tempraylist","outputlist","n","handleSubscribe","ref","Popularlisttable","clicked","Popularlist","localStorage","getItem","history","fetchtools","Paymentlisttable","sortbydate","deletepayment","subscriptionalert","amount_total","payment_status","customer","payment_intent","createdat","Paymentlist","sortby","setSortby","resonse","component","Admin","getRoutes","getBrandText","issuperuser","setItem","isstaff","componentDidUpdate","documentElement","scrollTop","scrollingElement","refs","mainContent","from","AdminFooter","Admindash","UncontrolledCollapse","toggler","Login","Auth","classList","add","componentWillUnmount","remove","AuthNavbar","xmlns","preserveAspectRatio","version","viewBox","x","y","points","AuthFooter","ReactDOM","exact","elements","Rectangle","prototype","draw","left","top","bottom","signX","signY","borderSkipped","ctx","_chart","vm","_view","borderWidth","horizontal","base","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","default","primary","secondary","info","danger","warning","chartExample1","scales","yAxes","gridLines","zeroLineColor","ticks","callback","tooltips","callbacks","item","datasets","datasetIndex","yLabel","content","data1","canvas","labels","data2","defaults","global","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","padding","legend","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","mode","intersect","doughnut","cutoutPercentage","legendCallback","chart","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent","chartExample2","maxBarThickness"],"mappings":"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","file":"static/js/main.933f981d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/digitalbox.69e8db5d.png\";","module.exports = __webpack_public_path__ + \"static/media/team-1-800x800.53033970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/argon-react-white.275a2629.png\";","module.exports = __webpack_public_path__ + \"static/media/argon-react.f38ddea9.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Media\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n              {this.props.brandText}\n            </Link>\n            <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n              <FormGroup className=\"mb-0\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"fas fa-search\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search\" type=\"text\" />\n                </InputGroup>\n              </FormGroup>\n            </Form>\n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/theme/user.jpg\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold\">\n                        Admin\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  {/* <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-settings-gear-65\" />\n                    <span>Settings</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-calendar-grid-58\" />\n                    <span>Activity</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                    <i className=\"ni ni-support-16\" />\n                    <span>Support</span>\n                  </DropdownItem> */}\n                  <DropdownItem divider />\n                  <DropdownItem href=\"/admin/logout/\">\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Container, Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Row className=\"align-items-center justify-content-xl-between\">\n          <Col xl=\"6\">\n            <div className=\"copyright text-center text-xl-left text-muted\">\n              © 2020{\" \"}\n              <a\n                className=\"font-weight-bold ml-1\"\n                href=\"https://www.kiranvoleti.com/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Kiran Voleti\n              </a>\n            </div>\n          </Col>\n\n          <Col xl=\"6\">\n            <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n              <NavItem>\n                <NavLink\n                  href=\"https://www.kiranvoleti.com/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Kiran Voleti\n                </NavLink>\n              </NavItem>\n\n             </Nav>\n          </Col>\n        </Row>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n \n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n            style={{display:prop.displayproperty}}\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {/* Brand */}\n          {logo ? (\n            <NavbarBrand className=\"pt-0\" {...navbarBrandProps}>\n              <img\n                alt={logo.imgAlt}\n                className=\"navbar-brand-img\"\n                src={logo.imgSrc}\n              />\n            </NavbarBrand>\n          ) : null}\n          {/* User */}\n          <Nav className=\"align-items-center d-md-none\">\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav className=\"nav-link-icon\">\n                <i className=\"ni ni-bell-55\" />\n              </DropdownToggle>\n              <DropdownMenu\n                aria-labelledby=\"navbar-default_dropdown_1\"\n                className=\"dropdown-menu-arrow\"\n                right\n              >\n                <DropdownItem>Action</DropdownItem>\n                <DropdownItem>Another action</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Something else here</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <UncontrolledDropdown nav>\n              <DropdownToggle nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={require(\"assets/img/theme/team-1-800x800.jpg\")}\n                    />\n                  </span>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    {logo.innerLink ? (\n                      <Link to={logo.innerLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </Link>\n                    ) : (\n                      <a href={logo.outterLink}>\n                        <img alt={logo.imgAlt} src={logo.imgSrc} />\n                      </a>\n                    )}\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* Form */}\n            <Form className=\"mt-4 mb-3 d-md-none\">\n              <InputGroup className=\"input-group-rounded input-group-merge\">\n                <Input\n                  aria-label=\"Search\"\n                  className=\"form-control-rounded form-control-prepended\"\n                  placeholder=\"Search\"\n                  type=\"search\"\n                />\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <span className=\"fa fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Form>\n            {/* Navigation */}\n            <Nav navbar>{this.createLinks(routes)}</Nav>\n            {/* Divider */}\n            <hr className=\"my-3\" />\n            {/* Heading */}            \n           </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n","\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nclass Header extends React.Component {\n \n  render() {\n    \n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            <div className=\"header-body\">\n              {/* Card stats */}\n              <Row>\n              {this.props.userscount >= 0 ?\n              <>\n              <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Users\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.userscount}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Articles\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.articlescount}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Videos\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.videoscount}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Tools\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.toolscount}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mt-1 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Yesterday Articles\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.yesterdayarticles}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mt-1 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Yesterday Videos\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.yesterdayvideos}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n\n                <Col lg=\"6\" xl=\"3\">\n                  <Card className=\"card-stats mb-4 mt-1 mb-xl-0\">\n                    <CardBody>\n                      <Row>\n                        <div className=\"col\">\n                          <CardTitle\n                            tag=\"h5\"\n                            className=\"text-uppercase text-muted mb-0\"\n                          >\n                            Yesterday Tools\n                          </CardTitle>\n                          <span className=\"h2 font-weight-bold mb-0\">\n                            {this.props.yesterdaytools}\n                          </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                          <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                            <i className=\"fas fa-chart-bar\" />\n                          </div>\n                        </Col>\n                      </Row>\n                     \n                    </CardBody>\n                  </Card>\n                </Col>\n                \n                </>\n                :\n                null\n              }\n               </Row>\n            </div>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","\nimport React from \"react\";\n\n// reactstrap components\nimport { Container } from \"reactstrap\";\n\nclass Header2 extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n          <Container fluid>\n            \n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Header2;\n","import React from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\nimport axios from 'axios';\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\nimport Header2 from \"components/Headers/Header2.js\";\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\",\n      videos:'',\n      articles:'',\n      users:null,\n      yesterdayarticles:'',\n      yesterdayvideos:'',\n      currentpath:this.props.location.pathname\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    this.setState({\n      activeNav: index,\n      chartExample1Data:\n        this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n    });\n  };\n\n \n\n  \n\n  componentDidMount = async (e) => {\n \n    const url=\"https://app.kiranvoleti.com/adminindex\";\n    let form_data = new FormData();\n    form_data.append('page', e);\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': this.getCookie('csrftoken')\n      }\n    }\n    await axios.get(url,config)\n    .then(res=>{            \n        \n        this.setState({\n          articlescount: res.data.articles,\n          videoscount: res.data.videos,\n          toolscount: res.data.tools,\n          yesterdaytools:res.data.yesterdaytools,\n          yesterdayarticles:res.data.yesterdayarticles,\n          yesterdayvideos:res.data.yesterdayvideos,\n          userscount:res.data.users\n\n        });\n                          \n        \n    })\n    .catch(err=>{\n        console.log(err)\n        \n    })\n\n  }\n  getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n  \n  render() {\n    return (\n      <>\n      \n        <Header \n        articlescount = {this.state.articlescount} \n        videoscount= {this.state.videoscount}\n        toolscount= {this.state.toolscount}\n        yesterdaytools={this.state.yesterdaytools}\n        yesterdayarticles={this.state.yesterdayarticles}\n        yesterdayvideos={this.state.yesterdayvideos}\n        userscount={this.state.userscount}       \n        \n        />\n        \n\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\n              <Card className=\"bg-gradient-default shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">\n                    <div className=\"col\">\n                      <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                        Overview\n                      </h6>\n                      <h2 className=\"text-white mb-0\">Sales value</h2>\n                    </div>\n                    <div className=\"col\">\n                      <Nav className=\"justify-content-end\" pills>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 1\n                            })}\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 1)}\n                          >\n                            <span className=\"d-none d-md-block\">Month</span>\n                            <span className=\"d-md-none\">M</span>\n                          </NavLink>\n                        </NavItem>\n                        <NavItem>\n                          <NavLink\n                            className={classnames(\"py-2 px-3\", {\n                              active: this.state.activeNav === 2\n                            })}\n                            data-toggle=\"tab\"\n                            href=\"#pablo\"\n                            onClick={e => this.toggleNavs(e, 2)}\n                          >\n                            <span className=\"d-none d-md-block\">Week</span>\n                            <span className=\"d-md-none\">W</span>\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* Chart */}\n                  {/* <div className=\"chart\">\n                    <Line\n                      data={chartExample1[this.state.chartExample1Data]}\n                      options={chartExample1.options}\n                      getDatasetAtEvent={e => console.log(e)}\n                    />\n                  </div> */}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          </Container>\n      \n      </>\n    );\n  }\n}\n\nexport default Index;\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Userlisttable = (props) => {\r\n    const [swalert, setSwlert] = useState(\"\");\r\n    const [exampleModal, setExampleModal] = useState(false);\r\n    const [editModal, setEditModal] = useState(false);\r\n    // const [isalert, setIsalert] = useState(false);\r\n    const [alertmsgcolor, setAlertmsgcolor] = useState(\"info\");\r\n    const [alertmsg, setAlertmsg] = useState(\"\");\r\n    const [userstate, setUserstate] = useState([]);\r\n\r\n\r\n\r\n\r\n    // form state\r\n    const initialFormData = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password1: \"\",\r\n        phone: \"\",\r\n        capability: \"\",\r\n        datacategory:\"\"\r\n    });\r\n\r\n    const initialeditingform = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        datacategory:\"\",\r\n        _id: \"\",\r\n        capability: \"\",\r\n    });\r\n\r\n    const [formchangedata, updateFormchangedata] = React.useState(initialFormData);\r\n    const [editingform, updateEditingform] = React.useState(initialeditingform);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        updateFormchangedata({\r\n            ...formchangedata,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n\r\n    const rhandleChange = (e) => {\r\n\r\n        updateFormchangedata({\r\n            ...formchangedata,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.id.trim()\r\n\r\n        });\r\n    };\r\n\r\n    const ehandleChange = (e) => {\r\n\r\n        updateEditingform({\r\n            ...editingform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n    const optionhandleChange = (e) => {\r\n\r\n        var options = e.target.options;\r\n            var value = [];\r\n            for (var i = 0, l = options.length; i < l; i++) {\r\n              if (options[i].selected) {\r\n                value.push(options[i].value);\r\n              }\r\n            }\r\n\r\n        updateEditingform({\r\n            ...editingform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: value\r\n\r\n        });\r\n    };\r\n\r\n    \r\n\r\n    const ehandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let form_data = new FormData();        \r\n\r\n        form_data.append('email', editingform.email);        \r\n        form_data.append('id', editingform._id);\r\n        form_data.append('phone', editingform.phone);\r\n        form_data.append('datacategory', editingform.datacategory);\r\n        \r\n        let url = 'https://app.kiranvoleti.com/ui/admin/edituser/';\r\n        // console.log(editingform)\r\n        // return\r\n        \r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                setEditModal(false)\r\n                props.fetchusers()              \r\n                \r\n\r\n            })\r\n            .catch(err =>{\r\n                setEditModal(false)\r\n                console.log(err)\r\n            }\r\n            )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        \r\n        props.setIsalert(!props.isalert)\r\n        setAlertmsg(\"plase check your password\");\r\n        setAlertmsgcolor('danger');\r\n\r\n        \r\n        let form_data = new FormData();\r\n        form_data.append('first_name', formchangedata.username);\r\n        form_data.append('pwd', formchangedata.password);\r\n        form_data.append('email', formchangedata.email);\r\n        form_data.append('userrole', formchangedata.capability);\r\n        console.log(formchangedata)\r\n        \r\n        let url = 'https://app.kiranvoleti.com/ui/admin/saveuser/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                toggleModal()\r\n                props.fetchusers()\r\n\r\n            })\r\n            .catch(err =>{\r\n                toggleModal()\r\n                console.log(err)\r\n            }\r\n                \r\n            )\r\n        // Object.entries(formData).map(entry => { \r\n        //     // let key = entry[0]; \r\n        //     // let value = entry[1]; \r\n        //     return console.log(entry); \r\n        // }); \r\n\r\n        // toggleModal(\"exampleModal\")\r\n        // ... submit to API or something\r\n    };\r\n    // form state\r\n    const statuschange = (e)=>{\r\n        \r\n        \r\n        let form_data = new FormData();\r\n        form_data.append('user_id', e.target.id);\r\n        form_data.append('is_active', e.target.checked);\r\n        \r\n        let url = 'https://app.kiranvoleti.com/ui/admin/getuserupdate/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                tosttrigger(\"Successfully Status Changed !\",\"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\",\"error\")\r\n                \r\n            )    \r\n\r\n    }\r\n\r\n    const adminstatus = (e)=>{\r\n        \r\n        \r\n        let form_data = new FormData();\r\n        form_data.append('user_id', e.target.id);\r\n        form_data.append('capability', e.target.value);\r\n        console.log(e.target.id,e.target.value)\r\n        \r\n        let url = 'https://app.kiranvoleti.com/ui/admin/getuserupdateadmin/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                tosttrigger(\"Successfully Status Changed !\",\"success\");\r\n                props.fetchusers()\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\",\"error\")\r\n                \r\n            )    \r\n\r\n    }\r\n    // Subscribe change\r\n\r\n    const subscribestatechange = (e)=>{\r\n        \r\n        \r\n        let form_data = new FormData();\r\n        form_data.append('user_id', e.target.id);\r\n        form_data.append('capability', e.target.value);\r\n        console.log(e.target.id,e.target.value)\r\n        \r\n        let url = 'https://app.kiranvoleti.com/ui/admin/updatesubscribestatus/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                tosttrigger(\"Successfully Status Changed !\",\"success\");\r\n                props.fetchusers()\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\",\"error\")\r\n                \r\n            )    \r\n\r\n    }\r\n\r\n    // Subscribe change end\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n          const cookies = document.cookie.split(';');\r\n          for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return cookieValue;\r\n      }\r\n    const toggleModal = () => {\r\n        setExampleModal(!exampleModal);\r\n        props.setIsalert(false)\r\n    };\r\n    const toggleeditModal = async (e) => {\r\n        \r\n        const initialeditingform = {\r\n            username: e.target.dataset.username,\r\n            email: e.target.dataset.email,\r\n            _id: e.target.dataset.id\r\n\r\n        };\r\n        await updateEditingform(initialeditingform)\r\n        setEditModal(!editModal);\r\n        props.setIsalert(false)\r\n        console.log(editingform)\r\n    };\r\n\r\n    // Checkbox\r\n    const handleAllChecked = (event) => {\r\n        \r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        if (event.target.checked) {\r\n            allelm.forEach(elm => {\r\n                elm.setAttribute(\"checked\", event.target.checked)\r\n            })\r\n\r\n        }\r\n        else {\r\n            allelm.forEach(elm => {\r\n                elm.removeAttribute(\"checked\")\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handlechange = (event) => {\r\n        let userstateaction = userstate;\r\n        function ischeckf(val) {\r\n            if (val._id === event.target.id) {\r\n                return val !== event.target.id;\r\n            }\r\n        }\r\n        if (event.target.checked) {\r\n            let nowobj = [{ _id: event.target.id, isChecked: event.target.checked }]\r\n            setUserstate([...userstateaction, ...nowobj]);\r\n        } else {\r\n            let nowobj = userstateaction.filter(ischeckf)\r\n            setUserstate([...nowobj]);\r\n        }\r\n        \r\n    }\r\n    // end checkbox\r\n\r\n    \r\n    function tosttrigger(msg,status){\r\n        if(status === \"success\"){\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            }else{\r\n                toast.error(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n}\r\n        \r\n    }\r\n    // function hideSwalert() {\r\n    //     setSwlert(\"\");\r\n    // }\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            {swalert}\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Button trigger modal */}\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"exampleModal\")}\r\n                    >\r\n                        Add User<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteUser}\r\n                    >\r\n                        Delete<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            Total Records: {props.totalpages}\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n\r\n                        {/* <th scope=\"col\">Name</th> */}\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Subscribed</th>\r\n                        <th scope=\"col\">Mobile</th>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Capability</th>\r\n                        <th scope=\"col\">Permission</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.users.map(row => (\r\n\r\n                        <tr key={row._id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n                                <Media className=\"align-items-center\">\r\n                                    <a\r\n                                        className=\"avatar rounded-circle mr-3\"\r\n                                        href=\"#pablo\"\r\n                                        onClick={e => e.preventDefault()}\r\n                                    >\r\n                                        <img\r\n                                            alt=\"...\"\r\n                                            src={require(\"assets/img/theme/user.jpg\")}\r\n                                        />\r\n                                    </a>\r\n                                    <Media>\r\n                                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                                            <input\r\n                                                className=\"custom-control-input\"\r\n                                                id={row._id}\r\n                                                type=\"checkbox\"\r\n                                                name=\"childbox\"\r\n                                                onChange={handlechange}\r\n\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor={row._id}>\r\n\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </Media>\r\n                                </Media>\r\n                            </th>\r\n                            \r\n                            <td>{row.email}</td>\r\n                            <td>{row.newsletter ? 'Subscribed':'Not Subscribed'}\r\n                            \r\n                            <select className=\"ml-2\" id={row.email} name=\"subscribestate\" onChange={subscribestatechange}>\r\n                                    <option value=\"y\">--is_subscribed--</option>\r\n                                    <option value=\"y\">Subscribe</option>\r\n                                    <option value=\"n\">Unsubscribe</option>\r\n                                </select>\r\n                            </td>\r\n                            \r\n\r\n\r\n                            <td>{row.phone}</td>\r\n                            \r\n                                \r\n                                <td id={row._id}>\r\n                                <label className=\"custom-toggle\">\r\n                                {row.is_active ? \r\n                                \r\n                                <input id={row._id} onChange={statuschange} defaultChecked type=\"checkbox\" />\r\n                                \r\n                                : \r\n                                \r\n                                \r\n                                <input id={row._id} onChange={statuschange} type=\"checkbox\" />\r\n                                \r\n                                \r\n                                }\r\n                                <span className=\"custom-toggle-slider rounded-circle\" />\r\n                              </label>\r\n                                </td>\r\n                                <td>All</td>\r\n                                <td>\r\n                                {row.is_superuser ? \"Admin\" : row.is_staff ? \"Staff\": \"User\"}\r\n                                <select className=\"ml-2\" id={row._id} name=\"capability\" onChange={adminstatus}>\r\n                                    <option value=\"u\">--Role--</option>\r\n                                    <option value=\"u\">User</option>\r\n                                    <option value=\"s\">Staff</option>\r\n                                    <option value=\"a\">Admin</option>\r\n                                </select>\r\n                                \r\n                            </td>\r\n                                \r\n         \r\n\r\n                            \r\n\r\n\r\n                           \r\n                            \r\n\r\n                            <td>\r\n\r\n                                <Button data-id={row._id} color=\"danger\" size=\"sm\" type=\"button\"\r\n                                    onClick={props.deleteUserind}\r\n                                >\r\n                                    <i data-id={row._id} className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row.id}\r\n                                    data-email={row.email}                                \r\n                                    onClick={toggleeditModal}\r\n                                >\r\n                                    <i className=\"fas fa-pen\"                                    \r\n                                    data-username={row.username}\r\n                                    data-id={row.id}\r\n                                    data-email={row.email}\r\n                                    aria-hidden=\"true\"></i>\r\n                                </Button>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={exampleModal}\r\n                toggle={() => toggleModal(\"exampleModal\")}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New User\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={() => toggleModal(\"exampleModal\")}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={alertmsgcolor}>\r\n                            {alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={handleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-user\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Username\" id=\"username\" name=\"username\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-email-83\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Email\" id=\"email\" name=\"email\" type=\"email\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup>\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-lock-circle-open\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={handleChange} placeholder=\"Password\" id=\"password\" name=\"password\" type=\"password\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                    \r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fa fa-bars\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>                                \r\n                                <Input onChange={handleChange}  \r\n                                        id=\"capability\" name=\"capability\" type=\"select\">\r\n                                        <option>Select Option</option>                                        \r\n                                        <option value=\"u\">User</option>\r\n                                        <option value=\"s\">Staff</option>\r\n                                        <option value=\"a\">Admin</option>\r\n\r\n                                </Input>\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={() => toggleModal(\"exampleModal\")}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n            {/* Modal for editing */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={editModal}\r\n                toggle={toggleeditModal}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"editmodal\">\r\n                        Edit User\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={toggleeditModal}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={alertmsgcolor}>\r\n                            {alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={ehandleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-user\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={ehandleChange}\r\n                                    value={editingform.username}\r\n                                    placeholder=\"Username\" id=\"username\" name=\"username\"\r\n                                    type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-email-83\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={ehandleChange}\r\n                                    value={editingform.email}\r\n                                    placeholder=\"Email\" id=\"email\" name=\"email\" type=\"email\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fa fa-phone\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                \r\n                                <Input onChange={ehandleChange}\r\n                                    value={editingform.phone}\r\n                                    placeholder=\"Phone\" id=\"phone\" name=\"phone\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fa fa-bars\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>                                \r\n                                <Input onChange={optionhandleChange} multiple \r\n                                     id=\"datacategory\" name=\"datacategory\" type=\"select\">\r\n                                        {/* <option>Select Option</option> */}\r\n                                        <option value=\"all\">All</option>\r\n                                        <option value=\"articles\">Articles</option>\r\n                                        <option value=\"videos\">Videos</option>\r\n                                        <option value=\"tools\">Tools</option>\r\n\r\n                                </Input>\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        \r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={toggleeditModal}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    closeClassName: PropTypes.string,\r\n    color: PropTypes.string, // default: 'success'\r\n    isOpen: PropTypes.bool,  // default: true\r\n    toggle: PropTypes.func,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    fade: PropTypes.bool, // default: true\r\n    // Controls the transition of the alert fading in and out\r\n    // See Fade for more details\r\n}\r\nexport default Userlisttable\r\n","import React from 'react'\r\nimport {\r\n    CardFooter,\r\n    Pagination\r\n} from \"reactstrap\";\r\n\r\nfunction Paginationtable() {\r\n    return (\r\n        <>\r\n\r\n            <CardFooter className=\"py-4\">\r\n                <nav aria-label=\"...\">\r\n                    <Pagination\r\n                        className=\"pagination justify-content-end mb-0\"\r\n                        listClassName=\"justify-content-end mb-0\"\r\n                    >\r\n                       \r\n                    </Pagination>\r\n                </nav>\r\n            </CardFooter>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Paginationtable\r\n","import React, {useState,createContext, useEffect} from 'react';\r\nimport axios from 'axios';\r\nexport const UsersContext = createContext();\r\nexport const QueryContext = createContext();\r\nexport const PaginationContext = createContext();\r\nexport const UserslengthContext = createContext();\r\n\r\n\r\nconst UsersProvider = ({children})=> {\r\n    const [users, setUsers] = useState([])\r\n    const [q, setQ] = useState('');\r\n    const [currentpage, setCurrentpage] = useState(1);\r\n    const [totalpages, setTotalpages] = useState(1);\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n           \r\n        const url = \"https://app.kiranvoleti.com/ui/getuserlist/\";\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',                \r\n                'Accept': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n                \r\n            }\r\n        };\r\n       \r\n        axios.get(url,config)\r\n        .then(res=>{            \r\n            setUsers(res.data.users);\r\n            // setCurrentpage(prevCurrentpage => prevCurrentpage+1)\r\n            setTotalpages(res.data.total);      \r\n            console.log(res.data.users)\r\n               \r\n\r\n                    \r\n            \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    ,[])\r\n\r\n\r\n    // Get Current Posts\r\n  \r\n    // const postsperpage = 5;\r\n    // const indexoflastpost = currentpage * postsperpage;\r\n    // const indexoffirstpost = indexoflastpost - postsperpage;\r\n    // const currentposts = users.slice(indexoffirstpost,indexoflastpost);\r\n\r\n    function search(rows) {\r\n        return rows.filter(\r\n            (row) =>\r\n            \r\n                // row.first_name.toLowerCase().indexOf(q) > -1 ||\r\n            row.email.toLowerCase().indexOf(q) > -1\r\n\r\n         \r\n            \r\n        )\r\n    }\r\n\r\n    function sorting(forsort){\r\n        // return forsort.sort((a,b) => b['id'] - a['id'])\r\n        return forsort.sort((a,b) => (\r\n            -1 * a['name'].localeCompare(b['name'])\r\n        ))\r\n    }\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n          const cookies = document.cookie.split(';');\r\n          for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return cookieValue;\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <UsersContext.Provider value={[search(users),setUsers]}>        \r\n        <QueryContext.Provider value={[q,setQ]}>\r\n        <PaginationContext.Provider value={{currentpage, setCurrentpage, totalpages,setTotalpages}}>\r\n        \r\n          \r\n            {children}\r\n        \r\n        </PaginationContext.Provider>\r\n        </QueryContext.Provider>\r\n        \r\n        </UsersContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default UsersProvider","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n// reactstrap components\nimport {\n\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Col,\n  Spinner,\n  CardFooter,\n  Button,\n  Pagination\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport Userlisttable from \"./tables/Userlisttable\";\nimport PaginationComponent from \"react-reactstrap-pagination\";\nimport Paginationtable from \"./tables/Paginationtable\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { UsersContext, QueryContext, PaginationContext } from './contexts/UserContext';\nimport { Redirect } from 'react-router-dom'\nconst Userslist = (props) => {\n  const [users, setUsers] = useContext(UsersContext);\n  const [q, setQ] = useContext(QueryContext);\n  const {currentpage, setCurrentpage, totalpages,setTotalpages} = useContext(PaginationContext); \n  const [isalert,setIsalert] = useState(false)\n  \n  // useEffect(() => {\n  //   if(window.localStorage.getItem('usertype') !== \"superuser\"){\n  //     props.history.push('/admin/categories/manage')\n  //   }\n    \n  // }, [])\n  const paginate = async (e) => {   \n    \n    const url=\"https://app.kiranvoleti.com/ui/getuserlist/\";\n    const body = JSON.stringify({\n      'page':e,\n    })\n   \n    setCurrentpage(e)\n    const config = {\n      headers: {\n          'Content-Type': 'application/json',\n          'Accept':'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    await axios.get(url, body, config)\n    .then(res=>{            \n        setUsers(res.data.users); \n        setIsalert(false)                       \n        \n    })\n    .catch(err=>{\n        console.log(err)\n        setIsalert(false)\n    })\n    \n    \n  }\n  const fetchusers = async () => {\n    const url=\"https://app.kiranvoleti.com/ui/getuserlist/\";\n    \n    const form_data = new FormData();\n    form_data.append('page',currentpage)\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept':'application/json',\n        'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    await axios.get(url, form_data, config)\n    .then(res=>{            \n        setUsers(res.data.users);                        \n        setIsalert(false)\n    })\n    .catch(err=>{\n        console.log(err)\n        setIsalert(false)\n    })\n}\n\nconst fetchfromdatabase = async (e) => {\n  const url=\"https://app.kiranvoleti.com/ui/getuserlistsearch/\";\n  console.log(e.target.value)\n  let form_data = new FormData();\n  form_data.append('searchterm',e.target.value.toLowerCase())\n  const config = {\n    headers: {\n        'content-type': 'application/json',\n        'X-CSRFToken': getCookie('csrftoken')\n        // 'Authorization': 'JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjA5Mjc2Nzg1LCJqdGkiOiIwZjM0YzYxZDczZWI0NzMxODlhMjUxYjA0MWQ5YmUwYSIsInVzZXJfaWQiOjF9.FAp0NBCBufFmJ8Prr0ZBRz0aCZQHlLp4aUVcCLer9oE'\n    }\n  }\n  await axios.post(url, form_data, config)\n  .then(res=>{            \n      setUsers(res.data.users); \n      setIsalert(false); \n                            \n      \n  })\n  .catch(err=>{\n      console.log(err)\n  })\n}\n\n\n\nconst deleteUser = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   var allelm = document.querySelectorAll(\"input[name=childbox]\");\n\n   await allelm.forEach(elm => {\n       if (elm.checked) {\n           list.push(elm.id)           \n       }\n   })\n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'backend_useraccount');\n   let url = 'https://app.kiranvoleti.com/ui/bulkdeltereactusers/';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           fetchusers()\n           console.log('deleted')\n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nconst deleteUserind = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   list.push(e.target.dataset.id)      \n \n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'backend_useraccount');\n   let url = 'https://app.kiranvoleti.com/ui/bulkdeltereactusers/';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           fetchusers()\n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nfunction tosttrigger(msg,status){\n  if(status === \"success\"){\n\n      toast.success(msg, {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n      });\n\n      }else{\n          toast.error(msg, {\n              position: \"top-right\",\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n          });\n\n}\n  \n}\n\nconst getCookie = (name) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\n\n\n\n \n  \n  \n  return (\n   \n    <>\n\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Table */}\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Users</h3>\n              </CardHeader>\n              <Form>\n                <Row>\n                  <Col md=\"4 m-2\">\n                    <FormGroup>\n                    <InputGroup className=\"mb-4\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-zoom-split-in\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input value= {q} onChange={e => setQ((e.target.value).toLowerCase())} placeholder=\"Filter\" type=\"text\" />\n                </InputGroup>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"4 m-2\">\n                    <FormGroup>\n                    <InputGroup className=\"mb-4\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-zoom-split-in\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Search from Database\" onChange={fetchfromdatabase} type=\"text\" />\n                </InputGroup>\n                    </FormGroup>\n                  </Col>                  \n                </Row>\n              </Form>              \n\n              <Userlisttable \n              isalert = {isalert}\n              setIsalert = {setIsalert}\n              fetchusers = {fetchusers} \n              deleteUserind = {deleteUserind} deleteUser = {deleteUser} users={users} totalpages={totalpages} />\n              \n              <Col md=\"6\" className=\"mt-1\">\n                  <Pagination aria-label=\"Page navigation example\">\n                  \n                      <PaginationComponent\n                          totalItems={totalpages}\n                          pageSize={5}\n                          onSelect={paginate}\n                          maxPaginationNumbers={5}\n                          defaultActivePage={1}\n                          firstPageText={'<'}\n                          previousPageText={'<<'}\n                          nextPageText={'>>'}\n                          lastPageText={'>'}\n                      />\n\n\n                  </Pagination>\n              </Col>\n\n              {isalert ? <Spinner color=\"primary\" />\n\n              :\n\n\n             null\n              \n              \n              }\n              <CardFooter className=\"py-4\">\n                                    \n                      \n                      \n                </CardFooter>\n              \n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n\nexport default Userslist;\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Tagstable = (props) => {\r\n  \r\n\r\n   \r\n    \r\n\r\n    \r\n   \r\n\r\n    \r\n    function tosttrigger(msg,status){\r\n        if(status === \"success\"){\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            }else{\r\n                toast.error(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n}\r\n        \r\n    }\r\n    // function hideSwalert() {\r\n    //     setSwlert(\"\");\r\n    // }\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            \r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Button trigger modal */}\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                   \r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteUser}\r\n                    >\r\n                        Delete<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            Total Records: {props.totalpages}\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={props.handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n\r\n                        {/* <th scope=\"col\">Name</th> */}\r\n                        <th scope=\"col\">Tag</th>    \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.tags.map(row => (\r\n\r\n                        <tr key={row._id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n                              \r\n                                    <Media>\r\n                                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                                            <input\r\n                                                className=\"custom-control-input\"\r\n                                                id={row.id}\r\n                                                type=\"checkbox\"\r\n                                                name=\"childbox\"\r\n                                                onChange={props.handleCheckchange}\r\n                                                checked={row.ischecked}\r\n\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor={row.id}>\r\n\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </Media>\r\n                                \r\n                            </th>\r\n                            \r\n                            <td>{row.tag}</td>\r\n\r\n                            \r\n\r\n                           \r\n                        </tr>\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    closeClassName: PropTypes.string,\r\n    color: PropTypes.string, // default: 'success'\r\n    isOpen: PropTypes.bool,  // default: true\r\n    toggle: PropTypes.func,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    fade: PropTypes.bool, // default: true\r\n    // Controls the transition of the alert fading in and out\r\n    // See Fade for more details\r\n}\r\nexport default Tagstable\r\n","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n// reactstrap components\nimport {\n\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Col,\n  Spinner,\n  CardFooter,\n  Button,\n  Pagination\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport Tagstable from \"./tables/Tagstable\";\nimport PaginationComponent from \"react-reactstrap-pagination\";\nimport Paginationtable from \"./tables/Paginationtable\";\nimport { ToastContainer, toast } from 'react-toastify';\n// import { UsersContext, QueryContext, PaginationContext } from './contexts/UserContext';\nimport { Redirect } from 'react-router-dom'\nconst Subscribelist = (props) => {\n  const [subscribers, setSubscribers] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [q, setQ] = useState('');  \n  const [currentpage, setCurrentpage] = useState(0);\n  const [totalpages, setTotalpages] = useState(0);\n  const [isalert,setIsalert] = useState(false);\n  const [stateallchecked, setStateallchecked] = useState(false);\n  const [taglist,setTaglist] = useState('')\n  \n  useEffect(() => {\n    // if(window.localStorage.getItem('usertype') !== \"superuser\"){\n    //   props.history.push('/admin/categories/manage')\n    // }\n    fetchtags();\n    \n  }, []);\n\n  const paginate = async (e) => {   \n    \n    const url=\"https://app.kiranvoleti.com/ui/admin/tagslist/\";\n    let form_data = new FormData();\n    form_data.append('page', e);\n    setCurrentpage(e)\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    await axios.post(url, form_data, config)\n    .then(res=>{            \n      var resptags = res.data.tags.map(val => (\n        { ...val, ischecked: false }\n      ))\n        setTags(resptags);      \n                         \n        \n        setIsalert(false)                       \n        \n    })\n    .catch(err=>\n      {        \n        setIsalert(false)\n      })\n    \n    \n  }\n\n  \n  const fetchtags = async () => {\n    const url=\"https://app.kiranvoleti.com/ui/admin/tagslist/\";\n    let form_data = new FormData();\n    form_data.append('page', currentpage);\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    await axios.post(url, form_data, config)\n    .then(res=>{            \n      var resptags = res.data.tags.map(val => (\n        { ...val, ischecked: false }\n    ))\n        setTags(resptags);       \n        setTotalpages(res.data.total)                 \n        setIsalert(false)\n        \n    })\n    .catch(err=>{\n        console.log(err)\n        setIsalert(false)\n    })\n}\n\nconst handleCheckchange = (e) => {\n  let valid = e.target.id;\n  let valchecked = e.target.checked;\n  console.log(valid, valchecked);\n  var somesubsupdated = tags.filter((val, key) => {\n\n      return [...tags, (val.id).toString() === valid.toString() ? val.ischecked = valchecked : val.ischecked]\n\n\n  });\n\n  setTags(somesubsupdated);\n\n}\n\nconst handleAllChecked = (event) => {\n\n  var respvideos = tags.map(val => (\n      { ...val, ischecked: event.target.checked }\n  ))\n  setTags(respvideos)  \n  setStateallchecked(event.target.checked)\n\n\n\n}\n// Handle Submit Section\n\nconst handlesubmit = (e) => {\n  e.preventDefault();  \n\n  let form_data = new FormData();\n\n  \n  form_data.append('feed', taglist);\n\n\n  \n\n  // Before Ui Elements\n  \n  tosttrigger('Sit back .. Process is initiating..', 'success')\n  // Before Ui Elements\n  // Backend Submission\n\n  let url = \"https://app.kiranvoleti.com/ui/admin/tagscreate/\";\n  // let url = 'https://jsonplaceholder.typicode.com/todos';\n  const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n  }\n  axios.post(url, form_data, config)\n      .then(res => {\n          console.log(res.data)\n          tosttrigger(\"success\", 'success')\n          fetchtags();\n\n      })\n      .catch(err =>\n          {\n            \n          tosttrigger(err, 'error')}\n\n\n      )\n\n\n}\n// End Hndle Submit Section\nconst fetchfromdatabase = async (e) => {\n  const url=\"https://app.kiranvoleti.com/getsubscriberssearch\";\n  \n  let form_data = new FormData();\n  form_data.append('searchterm',e.target.value.toLowerCase())\n  const config = {\n    headers: {\n        'content-type': 'application/json'\n        // 'X-CSRFToken': getCookie('csrftoken')\n    }\n  }\n  await axios.post(url, form_data, config)\n  .then(res=>{            \n    setSubscribers(res.data.users); \n      setIsalert(false); \n                            \n      \n  })\n  .catch(err=>{\n      console.log(err)\n  })\n}\n\n\n\nconst deleteUser = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   var allelm = document.querySelectorAll(\"input[name=childbox]\");\n\n   await allelm.forEach(elm => {\n       if (elm.checked) {\n           list.push(elm.id)           \n       }\n   })\n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'keytags');\n   let url = 'https://app.kiranvoleti.com/ui/admin/bulkdeltereact/';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           fetchtags();\n           \n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nconst deleteUserind = async (e) => {        \n  // Deleter\n\n\n\n   let form_data = new FormData();\n   var list = []\n   list.push(e.target.dataset.id)      \n \n  \n\n   form_data.append('deletelist', list);\n   form_data.append('tablename', 'lunchbox_subscriptions');\n   let url = 'https://app.kiranvoleti.com/ui/admin/bulkdeltereactusers/';\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\n   const config = {\n       headers: {\n           'content-type': 'application/json',\n           'X-CSRFToken': getCookie('csrftoken')\n       }\n   }\n\n   axios.post(url, form_data, config)\n       .then(res => {\n\n           tosttrigger(res.data.msg, \"success\");\n           \n\n       })\n       .catch(err =>\n           tosttrigger(\"Something Went Wrong !\", \"error\")\n\n       )\n}\nfunction tosttrigger(msg,status){\n  if(status === \"success\"){\n\n      toast.success(msg, {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n      });\n\n      }else{\n          toast.error(msg, {\n              position: \"top-right\",\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n          });\n\n}\n  \n}\n\nconst getCookie = (name) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\n\n\n\n \n  \n  \n  return (\n   \n    <>\n\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Table */}\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Tags List</h3>\n              </CardHeader>\n              <Form>\n                <Row>\n                 \n                  <Col md=\"10 m-2\">\n                    <FormGroup>\n                    <InputGroup className=\"mb-4\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-tag\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input onChange={(e) => setTaglist(e.target.value)} placeholder=\"tags by enter\" name=\"taglist\" id=\"taglist\" type=\"textarea\" />\n                </InputGroup>\n                  <Button color=\"primary\" onClick={handlesubmit} outline type=\"button\">Submit</Button>\n                    </FormGroup>\n                  </Col>                  \n                </Row>\n              </Form>              \n\n              <Tagstable \n              \n              fetchtags = {fetchtags} \n              deleteUserind = {deleteUserind} deleteUser = {deleteUser} \n              tags={tags} totalpages={totalpages}\n              handleCheckchange = {handleCheckchange}\n              handleAllChecked = {handleAllChecked}\n               />\n              \n              <Col md=\"6\" className=\"mt-1\">\n                  <Pagination aria-label=\"Page navigation example\">\n                  \n                      <PaginationComponent\n                          totalItems={totalpages}\n                          pageSize={50}\n                          onSelect={paginate}\n                          maxPaginationNumbers={5}\n                          defaultActivePage={1}\n                          firstPageText={'<'}\n                          previousPageText={'<<'}\n                          nextPageText={'>>'}\n                          lastPageText={'>'}\n                      />\n\n\n                  </Pagination>\n              </Col>\n\n              {isalert ? <Spinner color=\"primary\" />\n\n              :\n\n\n             null\n              \n              \n              }\n              <CardFooter className=\"py-4\">\n                                    \n                      \n                      \n                </CardFooter>\n              \n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n\nexport default Subscribelist;\n","import React, { useState, createContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport const CategoryContext = createContext();\r\n\r\nconst CategoryProvider = ({ children, match }) => {\r\n    const [categories, setCategories] = useState([])\r\n    const [subcategories, setSubcategories] = useState([])\r\n    const [supsubcategories, setSupsubcategories] = useState([])\r\n    const [swalert, setSwlert] = useState(\"\");\r\n    const [catmodel, setCatmodel] = useState(false);\r\n    const [subcatmodel, setSubcatmodel] = useState(false);   \r\n    const [supsubcatmodel, setSupsubcatmodel] = useState(false);\r\n    const [updatecatmodel, setUpdatecatmodel] = useState(false);\r\n    // const [editModal, setEditModal] = useState(false);\r\n    const [isalert, setIsalert] = useState(false);\r\n    const [isspinner, setIsspinner] = useState(false);\r\n    const [alertmsgcolor, setAlertmsgcolor] = useState(\"info\");\r\n    const [alertmsg, setAlertmsg] = useState(\"\");\r\n    const [categorystate, setCategorystate] = useState([]);\r\n    const [deleteid, setDeleteid] = useState('');\r\n\r\n    // form state\r\n    const initialFormData = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password1: \"\",\r\n        phone: \"\",\r\n        capability: \"\",\r\n        category: \"\",\r\n        id: \"\",\r\n        mainref:\"\",\r\n        superref:\"\"\r\n    });\r\n\r\n    const initialeditingform = Object.freeze({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password1: \"\",\r\n        phone: \"\",\r\n        capability: \"\",\r\n        category: \"\",\r\n        id: \"\"\r\n    });\r\n    const [formchangedata, updateFormchangedata] = React.useState(initialFormData);\r\n    const [editingform, updateEditingform] = React.useState(initialeditingform);\r\n\r\n    const rhandleChange = (e) => {\r\n\r\n        updateFormchangedata({\r\n            ...formchangedata,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n\r\n    // Checkbox\r\n    const handleAllChecked = (event) => {\r\n        \r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        if (event.target.checked) {\r\n            allelm.forEach(elm => {\r\n                elm.setAttribute(\"checked\", event.target.checked)\r\n            })\r\n\r\n        }\r\n        else {\r\n            allelm.forEach(elm => {\r\n                elm.removeAttribute(\"checked\")\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    const handlechange = (event) => {\r\n        let categorytateaction = categorystate;\r\n        function ischeckf(val) {\r\n            if (val.id === event.target.id) {\r\n                return val !== event.target.id;\r\n            }\r\n        }\r\n        if (event.target.checked) {\r\n            let nowobj = [{ id: event.target.id, isChecked: event.target.checked }]\r\n            setCategorystate([...categorytateaction, ...nowobj]);\r\n        } else {\r\n            let nowobj = categorytateaction.filter(ischeckf)\r\n            setCategorystate([...nowobj]);\r\n        }\r\n        \r\n    }\r\n    // end checkbox\r\n    const statuschange = () => {\r\n\r\n    }\r\n\r\n    const toggleeditModal = (e) => {\r\n        setUpdatecatmodel(!updatecatmodel);\r\n        const initialeditingform = Object.freeze({\r\n            category: e.target.dataset.category,\r\n            id: e.target.dataset.id\r\n        });\r\n        updateEditingform(initialeditingform)\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    }\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    function tosttrigger(msg, status) {\r\n        if (status === \"success\") {\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } else {\r\n            toast.error(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        setIsspinner(!isspinner);\r\n        setIsalert(!isalert)\r\n        setAlertmsg(\"Submitting Please Wait...\");\r\n        setAlertmsgcolor('info');\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', formchangedata.category);\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/addmaincat/\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                toggleModal();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                // setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('info'),\r\n\r\n            )\r\n\r\n    };\r\n\r\n    const updatehandlesubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n\r\n        // let form_data = new FormData();\r\n        setIsspinner(!isspinner);\r\n        if (formchangedata.category === \"\") {\r\n            setIsalert(!isalert)\r\n            setAlertmsg(\"Submitting please wait....\");\r\n            setAlertmsgcolor('success');\r\n            setIsspinner(!isspinner);\r\n            return\r\n        }\r\n        let form_data = new FormData();\r\n        form_data.append('catdata', formchangedata.category);\r\n        form_data.append('catid', editingform.id);\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/main_cat_update/\";\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                toggleeditModal();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setAlertmsg(\"Submitting please wait....\"),\r\n                setIsspinner(!isspinner)\r\n\r\n\r\n            )\r\n\r\n    };\r\n    function hideSwalert() {\r\n        setSwlert(\"\");\r\n    }\r\n    const toggleModal = () => {\r\n        setCatmodel(!catmodel);\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    };\r\n\r\n\r\n    const deleteThisGoal = (e) => {\r\n        let delsid = e.target.id\r\n        setIsspinner(!isspinner);\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', e.target.id);\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/delmaincat/\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                setSwlert(\"\");\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                // const teamPlayers = this.state.teamPlayers.filter(i => i.idTeam !== id));\r\n                setCategories(categories.filter(i => i.category !== delsid))\r\n\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('danger'),\r\n\r\n            )\r\n        setSwlert(\"\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const url = \"https://app.kiranvoleti.com/ui/admin/addmaincat/\";\r\n\r\n    useEffect(() => {\r\n        const fetchusers = async () => {\r\n            await axios.get(url)\r\n                .then(res => {\r\n                    setCategories(res.data.maincats);\r\n                    setSubcategories(res.data.subcats);\r\n                    setSupsubcategories(res.data.supsubcats);\r\n\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n        fetchusers()\r\n    }, [])\r\n\r\n\r\n// SubCategory Section\r\n\r\n// Deleting Purpose\r\nconst subcatgorydeletebutton = (e) => {\r\n    let delsid = e.target.dataset.id\r\n\r\n    tosttrigger(\"Deleting plz Wait\", 'success')    \r\n    \r\n\r\n    let form_data = new FormData();\r\n    form_data.append('catid', e.target.dataset.id);\r\n\r\n    let url = \"https://app.kiranvoleti.com/ui/admin/sub_cat_delete/\";\r\n    \r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken')\r\n        }\r\n    }\r\n    axios.post(url, form_data, config)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                tosttrigger(res.data.msg, 'error')\r\n            }        \r\n            else{\r\n                tosttrigger(res.data.msg, 'success')\r\n                setSubcategories(subcategories.filter(i => parseInt(i.id) !== parseInt(delsid)))\r\n            }\r\n        })\r\n        .catch(err =>\r\n            console.log(err)          \r\n\r\n        )\r\n    setSwlert(\"\");\r\n\r\n    \r\n    }\r\n\r\n    // Editing purpose(sub category)\r\n    // Editing Purpose(sub category)\r\n\r\n    \r\n\r\n    \r\n\r\n   \r\n\r\n    // Adding purpose (Sub Category)\r\n\r\n    \r\n    const addsubcategorymodel = () => {\r\n        setSubcatmodel(!subcatmodel);\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    };\r\n\r\n    const subcathandleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        \r\n        \r\n        setIsspinner(!isspinner);\r\n        setIsalert(!isalert)\r\n        setAlertmsg(\"Submitting Please Wait...\");\r\n        setAlertmsgcolor('info');\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', formchangedata.category);\r\n        form_data.append('mainref', formchangedata.mainref);\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/addsubcat/\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                addsubcategorymodel();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                setSubcategories(prevSubcategories => [...prevSubcategories, { id: res.data.indexkey, category: formchangedata.category, mainref:formchangedata.mainref }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                // setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('info'),\r\n\r\n            )\r\n\r\n    };\r\n\r\n    // Sup Sub Category Section\r\n    // Adding Purpose\r\n\r\n    const addsupsubcategorymodel = () => {\r\n        setSupsubcatmodel(!supsubcatmodel);\r\n        setIsalert(false)\r\n        setIsspinner(false)\r\n    };\r\n\r\n    const supsubcathandleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // let form_data = new FormData();\r\n        \r\n        \r\n        \r\n        setIsspinner(!isspinner);\r\n        setIsalert(!isalert)\r\n        setAlertmsg(\"Submitting Please Wait...\");\r\n        setAlertmsgcolor('info');\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('category', formchangedata.category);\r\n        form_data.append('refrence', formchangedata.mainref);\r\n        form_data.append('masterrefrence', formchangedata.superref);\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/addsupsubcat/\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                addsupsubcategorymodel();\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(!isspinner);\r\n                setSupsubcategories(prevSupsubcategories => [...prevSupsubcategories, { id: res.data.indexkey, category: formchangedata.category, \r\n                    masterrefrence:formchangedata.superref,\r\n                    refrence:formchangedata.mainref\r\n                }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error'),\r\n                setIsalert(!isalert),\r\n                setIsspinner(!isspinner),\r\n                // setAlertmsg(\"plase check your Category\"),\r\n                setAlertmsgcolor('info'),\r\n\r\n            )\r\n\r\n    };\r\n\r\n    // Deleting Purpose\r\nconst supsubcatgorydeletebutton = (e) => {\r\n    let delsid = e.target.dataset.id\r\n\r\n    tosttrigger(\"Deleting plz Wait\", 'success')  \r\n    \r\n    let form_data = new FormData();\r\n    form_data.append('catid', e.target.dataset.id);\r\n\r\n    let url = \"https://app.kiranvoleti.com/ui/admin/sup_sub_cat_delete/\";\r\n    \r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken')\r\n        }\r\n    }\r\n    axios.post(url, form_data, config)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                tosttrigger(res.data.msg, 'error')\r\n            }        \r\n            else{\r\n                tosttrigger(res.data.msg, 'success')\r\n                setSupsubcategories(supsubcategories.filter(i => parseInt(i.id) !== parseInt(delsid)))\r\n            }\r\n        })\r\n        .catch(err =>\r\n            console.log(err)          \r\n\r\n        )\r\n    setSwlert(\"\");\r\n\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <CategoryContext.Provider value={{\r\n            categories, setCategories, subcategories,\r\n            setSubcategories, supsubcategories, setSupsubcategories,\r\n            deleteThisGoal, toggleModal, toggleeditModal, updatecatmodel, formchangedata, initialeditingform, updateFormchangedata,\r\n            editingform, updateEditingform, swalert, catmodel, handleSubmit, isalert,\r\n            alertmsgcolor, alertmsg, rhandleChange, isspinner, handlechange, handleAllChecked, updatehandlesubmit,\r\n\r\n            addsubcategorymodel,subcatmodel,subcathandleSubmit,subcatgorydeletebutton,\r\n\r\n            addsupsubcategorymodel, supsubcatmodel, supsubcathandleSubmit,supsubcatgorydeletebutton\r\n\r\n        }}>\r\n\r\n            {children}\r\n\r\n        </CategoryContext.Provider>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default CategoryProvider","import React from \"react\";\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nfunction Categoriestable(props) {\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n                <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.addcatmodeltrigger}\r\n                    >\r\n                        Add Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    {/* <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteThisGoal}\r\n                    >\r\n                        Delete Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button> */}\r\n                </Col>\r\n\r\n            </Row>\r\n        \r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={props.handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Category</th>                        \r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cats.map((row,index) => (\r\n\r\n                        <tr key={index}>\r\n\r\n                            <th scope=\"row\">\r\n                                \r\n                                    \r\n                                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                                            <input\r\n                                                className=\"custom-control-input\"\r\n                                                id={row.id}\r\n                                                type=\"checkbox\"\r\n                                                name=\"childbox\"\r\n                                                onChange={props.handlechange}\r\n\r\n                                            />\r\n                                            \r\n                                            <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                            {index + 1}\r\n                                            </label>\r\n                                        </div>\r\n                                        \r\n\r\n                                   \r\n                            </th>\r\n                            \r\n                            <td>{row.category}</td>\r\n                                                      \r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\"\r\n                                id={row.category} onClick={props.deleteThisGoal}\r\n                                >\r\n                                    <i id={row.category} className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-category={row.category}\r\n                                    data-id={row.id}                                    \r\n                                    onClick={props.toggleeditModal}\r\n                                >\r\n                                    <i \r\n                                    data-category={row.category}\r\n                                    data-id={row.id}\r\n                                    className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n           \r\n                     \r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categoriestable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Categorymodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.catmodel}\r\n                toggle={props.addcatmodeltrigger}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New Category\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.addcatmodeltrigger}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.handleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={props.rhandleChange} placeholder=\"category\" id=\"category\" name=\"category\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.addcatmodeltrigger}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n            {/* Modal for editing */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.updatecatmodel}\r\n                toggle={props.toggleeditModal}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"editmodal\">\r\n                        Edit User\r\n                </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.toggleeditModal}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.updatehandlesubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            \r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input                                     \r\n                                    value={props.formchangedata.category}\r\n                                    onChange={props.rhandleChange}\r\n                                    placeholder=\"category\" id=\"category\" name=\"category\"\r\n                                    type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>                                             \r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.toggleeditModal}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categorymodel\r\n","import React, {  useContext } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { ToastContainer} from 'react-toastify';\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport {\r\n\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row\r\n    \r\n} from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport Categoriestable from \"./tables/Categoriestable\";\r\nimport Categorymodel from \"./models/Categorymodel\";\r\nfunction Categories(props) {\r\n    const catmanager = useContext(CategoryContext);\r\n    // const { token } = useParams();\r\n    let trys = useRouteMatch(\"/admin/categories/:token\");\r\n    \r\n\r\n    return (\r\n        <>\r\n        \r\n        {catmanager.swalert}\r\n        <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Header />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                \r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">{trys.params.token}</h3>\r\n                            </CardHeader>\r\n\r\n                            \r\n\r\n                            <Categoriestable catref={trys.params.token} cats={catmanager.categories}\r\n                            addcatmodeltrigger={catmanager.toggleModal} deleteThisGoal={catmanager.deleteThisGoal}\r\n                            handlechange={catmanager.handlechange} handleAllChecked={catmanager.handleAllChecked}\r\n                            updatecatmodel = {catmanager.updatecatmodel} toggleeditModal = {catmanager.toggleeditModal}\r\n                            \r\n                            \r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Categorymodel \r\n                delete = {catmanager.deleteThisGoal}     \r\n                editingform = {catmanager.editingform}   \r\n                formchangedata = {catmanager.formchangedata} \r\n                addcatmodeltrigger={catmanager.toggleModal}      \r\n                catmodel = {catmanager.catmodel}\r\n                handleSubmit = {catmanager.handleSubmit}\r\n                isalert ={catmanager.isalert}\r\n                alertmsgcolor = {catmanager.alertmsgcolor}\r\n                alertmsg = {catmanager.alertmsg}\r\n                rhandleChange = {catmanager.rhandleChange}\r\n                isspinner = {catmanager.isspinner}\r\n                updatecatmodel = {catmanager.updatecatmodel}\r\n                toggleeditModal = {catmanager.toggleeditModal}\r\n                updatehandlesubmit = {catmanager.updatehandlesubmit}\r\n                initialeditingform = {catmanager.initialeditingform}\r\n\r\n                />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Row,\r\n    Col,\r\n   \r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Subcategoriestable(props) {\r\n   \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.addsubcategorymodel}\r\n                    >\r\n                        Add Sub Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    {/* <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deleteThisGoal}\r\n                    >\r\n                        Delete Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button> */}\r\n                </Col>\r\n\r\n            </Row>\r\n           \r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            #\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Sub Category</th>\r\n                        <th scope=\"col\">Topics</th>                        \r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cats.map((row,index) => (\r\n\r\n                        <tr key={row.id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n                                 {index + 1}                                   \r\n                            </th>\r\n                            \r\n                            <td>{row.category}</td>\r\n                            \r\n\r\n                            <td>{props.refcats.map(ris=>(ris.id === parseInt(row.mainref) ? ris.category: null))}</td>                                \r\n                                \r\n                                                     \r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\" data-id={row.id}\r\n                                    onClick={props.subcatgorydeletebutton}\r\n                                >\r\n                                    <i className=\"fa fa-trash\" data-id={row.id} aria-hidden=\"true\"></i>\r\n                                </Button>\r\n                                {/* <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row._id}\r\n                                    data-email={row.email}\r\n                                    onClick={props.subcategoryeditmodel}\r\n                                >\r\n                                    <i className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button> */}\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n\r\n\r\n\r\n            \r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subcategoriestable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Subcategorymodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.subcatmodel}\r\n                toggle={props.addsubcategorymodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New Sub Category\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.addsubcategorymodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.subcathandleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={props.rhandleChange} placeholder=\"category\" id=\"category\" name=\"category\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Category</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.refcats.map((val,index) =>(\r\n                                    <option key={index} value={val.id}>{val.category}</option>\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.addsubcategorymodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n            {/* Edit SubCategory Model */}\r\n             \r\n             {/* <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.updatesubcatmodel}\r\n                toggle={props.subcategoryeditmodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"editmodal\">\r\n                        Edit User\r\n                </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.subcategoryeditmodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n                            <Spinner size=\"sm\" color=\"light\" />\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.updatesubcathandlesubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            \r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input                                     \r\n                                    value={props.formchangedata.category}\r\n                                    onChange={props.rhandleChange}\r\n                                    placeholder=\"category\" id=\"category\" name=\"category\"\r\n                                    type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>                                             \r\n\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.subcategoryeditmodel}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Save changes\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n */}\r\n\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Subcategorymodel\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport { ToastContainer} from 'react-toastify';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row\r\n  } from \"reactstrap\";\r\n  import Header from \"components/Headers/Header.js\";\r\nimport Subcategoriestable from \"./tables/Subcategoriestable\";\r\nimport Subcategorymodel from \"./models/Subcategorymodel\";\r\n\r\nfunction Subcategories() {\r\n    const catmanager = useContext(CategoryContext);   \r\n    let trys = useRouteMatch(\"/admin/categories/:token\");\r\n\r\n    // const vals = catmanager.categories.map(val=>{\r\n    //     catmanager.subcategories.filter(val1=>{\r\n    //         val1.ref\r\n    //     })\r\n    // });\r\n    // console.log(vals);\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">{trys.params.token}</h3>\r\n                            </CardHeader>  \r\n                                                      \r\n                            <Subcategoriestable cats={catmanager.subcategories} refcats = {catmanager.categories}\r\n                            addsubcategorymodel={catmanager.addsubcategorymodel}\r\n                            subcatgorydeletebutton = {catmanager.subcatgorydeletebutton}\r\n                            \r\n                            \r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Subcategorymodel \r\n                addsubcategorymodel={catmanager.addsubcategorymodel}\r\n                subcatmodel={catmanager.subcatmodel}\r\n                refcats = {catmanager.categories}\r\n                subcathandleSubmit = {catmanager.subcathandleSubmit}\r\n                rhandleChange = {catmanager.rhandleChange}\r\n                \r\n\r\n                />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Subcategories\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Supsubcategoriestable(props) {\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.addsupsubcategorymodel}\r\n                    >\r\n                        Add Sup Sub Category<i className=\"fa fa-user-plus ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                   \r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            #\r\n                        </th>\r\n                        <th scope=\"col\">Sup Sub Category</th>\r\n                        <th scope=\"col\">Sub Category</th>\r\n                        <th scope=\"col\">Topics</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.cats.map((row, index) => (\r\n\r\n                        <tr key={row.id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                            {index + 1}\r\n\r\n\r\n\r\n                            </th>\r\n\r\n                            <td>{row.category}</td>\r\n\r\n\r\n                            <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td>\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\" data-id={row.id}\r\n                                    onClick={props.supsubcatgorydeletebutton}\r\n                                >\r\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\" data-id={row.id}></i>\r\n                                </Button>\r\n                                {/* <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row._id}\r\n                                    data-email={row.email}\r\n                                    onClick={toggleeditModal}\r\n                                >\r\n                                    <i className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button> */}\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Supsubcategoriestable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\n\r\nfunction Supsubcategorymodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.supsubcatmodel}\r\n                toggle={props.addsupsubcategorymodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Add New Sup Sub Category\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.addsupsubcategorymodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {props.isalert ?\r\n                        <Alert color={props.alertmsgcolor}>\r\n                            {props.alertmsg}\r\n\r\n                        </Alert> : null\r\n                    }\r\n\r\n                    <Form role=\"form\" onSubmit={props.supsubcathandleSubmit}>\r\n                        <FormGroup className=\"mb-3\">\r\n                            <InputGroup className=\"input-group-alternative\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"fas fa-list\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={props.rhandleChange} placeholder=\"Sub Category\" id=\"category\" name=\"category\" type=\"text\" />\r\n                            </InputGroup>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.masterefcat.map((val,index) =>(\r\n                                    <option key={index} value={val.id}>{val.category}</option>\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.refcats.map((val,index) =>(  \r\n                                    parseInt(val.mainref) === parseInt(props.formchangedata.superref) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.formchangedata.superref})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.addsupsubcategorymodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Supsubcategorymodel\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport {\r\n\r\n    Card,\r\n    CardHeader,\r\n    Container,\r\n    Row\r\n  } from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport Supsubcategoriestable from \"./tables/Supsubcategoriestable\";\r\nimport Supsubcategorymodel from \"./models/Supsubcategorymodel\";\r\nimport { ToastContainer} from 'react-toastify';\r\n\r\nfunction Supsubcategories() {\r\n    const catmanager = useContext(CategoryContext);   \r\n    console.log(catmanager.supsubcategories);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">Super-Sub Categories</h3>\r\n                            </CardHeader>  \r\n                                                      \r\n                            <Supsubcategoriestable cats={catmanager.supsubcategories} \r\n                            refcats = {catmanager.subcategories}\r\n                            masterefcat = {catmanager.categories}\r\n                            addsupsubcategorymodel = {catmanager.addsupsubcategorymodel}\r\n                            supsubcatgorydeletebutton = {catmanager.supsubcatgorydeletebutton}\r\n                             />\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Supsubcategorymodel \r\n                refcats = {catmanager.subcategories}\r\n                masterefcat = {catmanager.categories}\r\n                rhandleChange = {catmanager.rhandleChange}\r\n                addsupsubcategorymodel = {catmanager.addsupsubcategorymodel}\r\n                supsubcatmodel = {catmanager.supsubcatmodel}\r\n                formchangedata = {catmanager.formchangedata}\r\n                supsubcathandleSubmit = {catmanager.supsubcathandleSubmit}\r\n                isspinner={catmanager.isspinner}\r\n                \r\n\r\n                />\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Supsubcategories\r\n","import React, { useState, createContext } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const TopicsContext = createContext();\r\n\r\nconst TopicsProvider = ({ children }) => {\r\n    const [isspinner, setIsspinner] = useState(false)\r\n    // form state\r\n    const Topicsform = Object.freeze({\r\n        category: \"\",\r\n        iptype: \"multiple\",\r\n        iptextarea: \"\",\r\n        id: \"\",\r\n        urlid: \"\",\r\n        mainref: \"\",\r\n        superref: \"\",\r\n        typeofsubmit: \"googlenewsfeeds\",\r\n        multirefiles: \"\",\r\n        perpage: 50,\r\n        page: 1,\r\n        start_from: 0\r\n    });\r\n\r\n    const [feedform, updateFeedform] = useState(Topicsform);\r\n    const [feedreadylist, setFeedreadylist] = useState([]);\r\n    const [topicstate, setTopicstate] = useState([]);\r\n    const [fetchcategory, setFetchcategory] = useState('');\r\n    const [howmanyfetch, setHowmanyfetch] = useState(0);\r\n    // \r\n    const [articlevideoperpage, setArticlevideoperpage] = useState(50);\r\n    const [articlevideopage, setArticlevideopage] = useState(1);\r\n    const [articlevideosearch, setArticlevideosearch] = useState('');\r\n    const [articlevideoauthor, setArticlevideoauthor] = useState('');    \r\n    const [articlevideostatus, setArticlevideostatus] = useState('checked');\r\n    const [articlevideoisactive, setArticlevideoisactive] = useState('');\r\n    const [articlevideoisview, setArticlevideoisview] = useState('');\r\n    const [articlevideochannel, setArticlevideochannel] = useState('');        \r\n    const [totalresults, setTotalresults] = useState(0);\r\n    const [allarticles, setAllarticles] = useState([]);\r\n    const [articlemodel, setArticlemodel] = useState(false)\r\n    const [videomodel, setVideomodel] = useState(false)\r\n    const [toolmodel, setToolmodel] = useState(false)\r\n    const [collectioncountarticle, setCollectioncountarticle] = useState(0)\r\n    const [paginationcount, setPaginationcount] = useState(0)\r\n    const [allvideos, setAllvideos] = useState([]);\r\n    \r\n    const [tools, setTools] = useState([]);\r\n    const [collectioncounttools, setCollectioncounttools] = useState(0);\r\n    const [totaltool, setTotaltool] = useState(0);\r\n    const [stateallchecked, setStateallchecked] = useState(false);\r\n    const [dynotoollink,setDynotoollink] = useState('');\r\n    const [dynotooltext,setDynotooltext] = useState('');\r\n\r\n\r\n\r\n    // Handle Change Section\r\n\r\n    const rhandleChange = (e) => {\r\n\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            [e.target.name]: e.target.files\r\n\r\n        });\r\n    }\r\n\r\n\r\n    // End Handle Change Section\r\n\r\n    // Handle Toggle\r\n    const togglemodel = (e) => {\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            mainref: e.target.dataset.mainref,\r\n            superref: e.target.dataset.superref,\r\n            urlid: e.target.dataset.id,\r\n\r\n        });\r\n\r\n        setArticlemodel(!articlemodel)\r\n\r\n    }\r\n\r\n    const togglevideomodel = (e) => {\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            mainref: e.target.dataset.mainref,\r\n            superref: e.target.dataset.superref,\r\n            urlid: e.target.dataset.id,\r\n\r\n        });\r\n\r\n        setVideomodel(!videomodel)\r\n\r\n    }\r\n    const toggletoolmodel = (e) => {\r\n        updateFeedform({\r\n            ...feedform,\r\n            // Trimming any whitespace\r\n            mainref: e.target.dataset.mainref,\r\n            superref: e.target.dataset.superref,\r\n            urlid: e.target.dataset.id,\r\n\r\n        });\r\n        console.log('toolmodel')\r\n\r\n        setToolmodel(!toolmodel)\r\n\r\n    }\r\n\r\n    // End Handle Toggle\r\n\r\n    // State Toggle\r\n    const statetoggle = (e) => {\r\n        setArticlevideoisactive(e.target.value.trim())\r\n    }\r\n    const viewtoggle = (e) => {\r\n        setArticlevideoisview(e.target.value.trim())\r\n    }\r\n    const searchquery = (e) => {\r\n        setArticlevideosearch(e.target.value.trim())\r\n    }\r\n    const authorquery = (e) => {\r\n        setArticlevideoauthor(e.target.value.trim())\r\n    }\r\n    \r\n    const sitequery = (e) => {\r\n        setArticlevideochannel(e.target.value.trim())\r\n    }\r\n    \r\n\r\n    // End State Toggle\r\n    // Deleting Purpose\r\nconst deletefeeditem = (e) => {\r\n    let delsid = e.target.dataset.id\r\n\r\n    tosttrigger(\"Deleting plz Wait\", 'success')    \r\n    let list = []\r\n    list.push(e.target.dataset.id)\r\n\r\n    let form_data = new FormData();\r\n    form_data.append('deletelist', e.target.dataset.id);\r\n    form_data.append('tablename', 'feedentryboard');\r\n\r\n    let url = \"https://app.kiranvoleti.com/ui/admin/bulkdeltereact/\";\r\n    \r\n    const config = {\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'X-CSRFToken': getCookie('csrftoken')\r\n        }\r\n    }\r\n    axios.post(url, form_data, config)\r\n        .then(res => {\r\n            if(res.data.error){\r\n                tosttrigger(res.data.msg, 'error')\r\n            }        \r\n            else{\r\n                tosttrigger(res.data.msg, 'success')\r\n                setFeedreadylist(feedreadylist.filter(i => parseInt(i.id) !== parseInt(list[0])))\r\n            }\r\n        })\r\n        .catch(err =>\r\n            console.log(err)          \r\n\r\n        )\r\n    \r\n\r\n    \r\n    }\r\n\r\n\r\n    // Handle Submit Section\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const options = {\r\n            onUploadProgress: (progressEvent) => {\r\n                const { loaded, total } = progressEvent;\r\n                let percent = Math.floor((loaded * 100) / total);\r\n                console.log(`${loaded} kb of ${total} kb | ${percent}`)\r\n            }\r\n        }\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('category', feedform.superref);\r\n        form_data.append('datatype', feedform.iptype);\r\n        form_data.append('feed', feedform.iptextarea);\r\n\r\n\r\n        if (feedform.multirefiles) {\r\n            for (const key of Object.keys(feedform.multirefiles)) {\r\n                form_data.append('uploadfile', feedform.multirefiles[key])\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        tosttrigger('Sit back .. Process is initiating..', 'success')\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/feedsummary/\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config, options)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n                \r\n                setIsspinner(false);\r\n                tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                {setIsspinner(false)\r\n                tosttrigger(err, 'error')}\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n    // End Hndle Submit Section\r\n\r\n\r\n\r\n    // Get All Feed Tables\r\n    const handlePageClick = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', e);\r\n        form_data.append('typeofsubmit', feedform.typeofsubmit);\r\n\r\n        // form_data.append('start_from', feedform.start_from);\r\n\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        tosttrigger('Sit back .. Process is initiating..', 'success')\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/getfeedlist/\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        await axios.post(url, form_data, config)\r\n            .then(res => {\r\n                setFeedreadylist(res.data.feeds)\r\n                setPaginationcount(res.data.total)\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n    };\r\n\r\n\r\n    const getallfeedstable = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', parseInt(feedform.page));\r\n        form_data.append('typeofsubmit', feedform.typeofsubmit);\r\n\r\n        // form_data.append('start_from', feedform.start_from);\r\n\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        tosttrigger('Sit back .. Process is initiating..', 'success')\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/getfeedlist/\";\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n\r\n                var respfeeds = res.data.feeds.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                \r\n\r\n                setFeedreadylist(respfeeds)\r\n\r\n                setPaginationcount(res.data.total)\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // End Get All Feed Tables\r\n\r\n\r\n    // Fetch All Section\r\n\r\n    const [spin, setSpin] = useState([])\r\n\r\n    const delpin = (e) => {\r\n        const someval = spin.filter(i => parseInt(i.id) !== parseInt(130))\r\n        setSpin(someval)\r\n\r\n    }\r\n\r\n    const sendforFetch = async (e) => {\r\n        e.preventDefault();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                let nowobj = { id: elm.id, ispin: true }\r\n                list.push(nowobj)\r\n\r\n                triggerfeedsfetch(elm.id)\r\n\r\n            }\r\n        })\r\n        setSpin(list)\r\n\r\n        tosttrigger('Process initiated', 'success')\r\n        setSpin([])\r\n\r\n\r\n    }\r\n\r\n    // list fetch\r\n\r\n    const sendchannelfetch = async (e) => {\r\n        e.preventDefault();\r\n        var list = []\r\n        \r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n\r\n            }\r\n        })\r\n        \r\n        let form_data = new FormData();\r\n\r\n        form_data.append('category', feedform.typeofsubmit);\r\n        form_data.append('index', 1);\r\n        form_data.append('urlid', list);\r\n        console.log(feedform.typeofsubmit)\r\n        \r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/fetchvideochannels/\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        await axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n\r\n                setHowmanyfetch(prevHowmany => parseInt(prevHowmany) + parseInt(res.data.successdatalength))\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n        \r\n\r\n\r\n    }\r\n\r\n    // End List fetch\r\n    const sendforFetchtable = async (e) => {\r\n        e.preventDefault();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                let nowobj = { id: elm.id, ispin: true }\r\n\r\n                reactfetch(elm.id)\r\n                list.push(nowobj)\r\n\r\n            }\r\n        })\r\n        setSpin(list)\r\n\r\n\r\n\r\n        await tosttrigger('Success Process is Done', 'success')\r\n        setSpin([])\r\n\r\n\r\n    }\r\n    const triggerfeedsfetch = (valid) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('category', feedform.typeofsubmit);\r\n        form_data.append('index', 1);\r\n        form_data.append('urlid', valid);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/fetchfeeds/\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setIsspinner(false);\r\n\r\n                setHowmanyfetch(prevHowmany => parseInt(prevHowmany) + parseInt(res.data.successdatalength))\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // End Fetch All Section\r\n    // React fetch to tables\r\n    const reactfetch = (valid) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('fetchcategory', fetchcategory);\r\n        form_data.append('id', valid);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/reactfetcher/\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                setIsspinner(false);\r\n                setHowmanyfetch(res.data.successdatalength)\r\n                tosttrigger('Fetched Successfully', 'success')\r\n\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // End Fetch to tables\r\n\r\n    // Get All Articles\r\n    const handlePageClickarticle = async (e) => {\r\n        \r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', e);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n        form_data.append('author', articlevideoauthor);\r\n\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n        \r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        \r\n        allelm.forEach(elm => {\r\n            elm.removeAttribute(\"checked\")\r\n        })\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/getarticlelist/\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setTotalresults(res.data.total)\r\n                setCollectioncountarticle(res.data.collectioncountarticle)\r\n                var resparticles = res.data.articles.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setAllarticles(resparticles);\r\n                setStateallchecked(false)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n    };\r\n    const getallarticles = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', articlevideopage);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n        form_data.append('author', articlevideoauthor);\r\n        \r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/getarticlelist/\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n                \r\n                // tosttrigger(res.data.msg, 'success')\r\n                setTotalresults(res.data.total)\r\n                setCollectioncountarticle(res.data.collectioncountarticle)\r\n                var resparticles = res.data.articles.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setAllarticles(resparticles)\r\n                \r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n    // End All Articles\r\n    // All Videos\r\n\r\n    const handlePageClickvideo = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', e);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n               \r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/getvideolist/\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n                setStateallchecked(false)\r\n                // tosttrigger(res.data.msg, 'success')\r\n                setAllvideos(res.data.videos)\r\n                setCollectioncountarticle(res.data.collectioncountvideos)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n    const getallvideos = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', articlevideopage);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/getvideolist/\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                var respvideos = res.data.videos.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setAllvideos(respvideos)\r\n                setCollectioncountarticle(res.data.collectioncountvideos)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n\r\n    // End All Videos\r\n\r\n    // All Tools\r\n\r\n    const getalltools = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', articlevideopage);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n        form_data.append('author', articlevideoauthor);\r\n\r\n        // Before Ui Elements\r\n        setIsspinner(!isspinner);\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/gettoollist/\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                \r\n                var resptools = res.data.tools.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setTools(resptools)               \r\n                setCollectioncounttools(res.data.collectioncounttools)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n\r\n    const handlePageClicktools = (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('perpage', articlevideoperpage);\r\n        form_data.append('page', e);\r\n        form_data.append('search', articlevideosearch);\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        form_data.append('status', articlevideostatus);\r\n        form_data.append('isactive', articlevideoisactive);\r\n        form_data.append('author', articlevideoauthor);\r\n\r\n        setStateallchecked(false)        \r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/ui/admin/gettoollist/\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                var resptools = res.data.tools.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setTools(resptools)     \r\n                setCollectioncounttools(res.data.collectioncounttools)\r\n                setPaginationcount(res.data.total)\r\n                setIsspinner(false);\r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n\r\n    }\r\n\r\n    // End Tools\r\n    // Handle All Checks\r\n    const handleAllCheckedArticles = (event) => {\r\n        // alert(event.target.id)\r\n        \r\n        setStateallchecked(event.target.checked)\r\n        var resparticles = allarticles.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setAllarticles(resparticles)\r\n        \r\n    }\r\n    const handleCheckchangeArticles = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var somearticlesupdated = allarticles.filter((val, key) => {\r\n\r\n            return [...allarticles, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setAllarticles(somearticlesupdated);\r\n\r\n    }\r\n    // Videos\r\n\r\n    const handleAllCheckedVideos = (event) => {\r\n        // alert(event.target.id)\r\n        \r\n        setStateallchecked(event.target.checked)\r\n        var respvideos = allvideos.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setAllvideos(respvideos)\r\n        \r\n    }\r\n    const handleCheckchangeVideos = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var somearticlesupdated = allvideos.filter((val, key) => {\r\n\r\n            return [...allvideos, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setAllvideos(somearticlesupdated);\r\n\r\n    }\r\n\r\n    const handleAllCheckedTools = (event) => {\r\n        // alert(event.target.id)\r\n        \r\n        setStateallchecked(event.target.checked)\r\n        var resptools = tools.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setTools(resptools)\r\n        \r\n    }\r\n    \r\n    const handleCheckchangeTools = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var somevideosupdated = tools.filter((val, key) => {\r\n\r\n            return [...tools, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setTools(somevideosupdated);\r\n\r\n    }\r\n\r\n    const handleCheckchangeSource = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var somefeedsupdated = feedreadylist.filter((val, key) => {\r\n\r\n            return [...feedreadylist, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setFeedreadylist(somefeedsupdated);\r\n\r\n    }\r\n    const handleAllCheckedSource = (event) => {\r\n        // alert(event.target.id)\r\n        \r\n        setStateallchecked(event.target.checked)\r\n        var respfeeds = feedreadylist.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setFeedreadylist(respfeeds)\r\n        \r\n    }\r\n\r\n\r\n    \r\n    const dynolinktextupdater = (e) => {\r\n        let valid = e.target.id;\r\n        \r\n        var somevideosupdated = tools.filter((val, key) => {\r\n\r\n            return [...tools, parseInt(val.id) === parseInt(valid) ? (val.title = dynotooltext,val.URL=dynotoollink) : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', valid);\r\n        form_data.append('tablename', 'Tools');\r\n        form_data.append('statereview', 'toolupdate');\r\n        form_data.append('URL', dynotoollink);\r\n        form_data.append('title', dynotooltext);\r\n\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/bulkreviewupdater/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                \r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n        setTools(somevideosupdated);\r\n\r\n    }\r\n\r\n    // End Videos\r\n    const handleAllChecked = (event) => {\r\n        alert(event.target.id)\r\n        setTopicstate([]);\r\n        if (event.target.name === \"videos\"){\r\n            var respvideos = allvideos.map(val => (\r\n                { ...val, ischecked: event.target.checked }\r\n            ))\r\n            setAllvideos(respvideos)\r\n            \r\n\r\n        }\r\n        else if (event.target.name === \"articles\"){\r\n            var resparticles = allarticles.map(val => (\r\n                { ...val, ischecked: event.target.checked }\r\n            ))\r\n            setAllarticles(resparticles)\r\n            \r\n\r\n        }\r\n        else if (event.target.name === \"tools\"){\r\n            var resptools = tools.map(val => (\r\n                { ...val, ischecked: event.target.checked }\r\n            ))\r\n            setTools(resptools)\r\n            \r\n\r\n        }\r\n        else{\r\n            alert('feeds');\r\n        }\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    const handlechange = (event) => \r\n    {\r\n        // let categorytateaction = topicstate;\r\n        // function ischeckf(val) {\r\n        //     if (parseInt(val.id) === parseInt(event.target.id)) {\r\n        //         return parseInt(val) !== parseInt(event.target.id);\r\n        //     }\r\n        // }\r\n        // if (event.target.checked) {\r\n\r\n        //     let nowobj = [{ id: parseInt(event.target.id), isChecked: event.target.checked }]\r\n        //     setTopicstate([...categorytateaction, ...nowobj]);\r\n        // } else {\r\n\r\n        //     let nowobj = categorytateaction.filter(ischeckf)\r\n        //     setTopicstate([...nowobj]);\r\n        // }\r\n        if (event.target.checked){\r\n            \r\n            event.target.setAttribute(\"checked\", true)          \r\n        }else{\r\n            event.target.removeAttribute(\"checked\")  \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // End Handle All Checks\r\n\r\n\r\n    // Status Changer\r\n\r\n    const topicstatuschange = (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('is_active', e.target.checked);\r\n\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/statechanger/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                \r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    // Status Changer\r\n\r\n    // Dynamic status changer\r\n    const articlestatuschange = (e) => {\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('isactive', e.target.checked);\r\n        form_data.append('action', 'updateactive');\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/articleupdate/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                // getallarticles(e)\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n    const videostatuschange = (e) => {\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('isactive', e.target.checked);\r\n        form_data.append('action', 'videoactive');\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/articleupdate/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    const toolstatuschange = (e) => {\r\n\r\n        let form_data = new FormData();\r\n        form_data.append('id', e.target.id);\r\n        form_data.append('isactive', e.target.checked);\r\n        form_data.append('action', 'toolactive');\r\n        // console.log(e.target.id,e.target.checked)\r\n        // return\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/articleupdate/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                \r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n    // End Dynamci status changer\r\n\r\n    // Bulk Review updater\r\n\r\n    const reviewupdate = async (e) => {\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        var tablename = e.target.id;\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n       \r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', tablename);\r\n        form_data.append('statereview', 'review');\r\n        form_data.append('channel', articlevideochannel);\r\n        form_data.append('isreview', articlevideoisview);\r\n        \r\n\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/bulkreviewupdater/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }    \r\n        \r\n       \r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                if(res.data.error){\r\n                    tosttrigger(res.data.msg, 'error')\r\n                }        \r\n                else{\r\n                    tosttrigger(res.data.msg, 'success')\r\n                    if (tablename === \"Videos\"){\r\n                        var someavideosupdated = allvideos.filter((val,key) =>{\r\n                            return [...allvideos,val.isreview=articlevideoisview]                           \r\n                           });\r\n                           \r\n                           setAllvideos(someavideosupdated);   \r\n                           tosttrigger('Review Changed', 'success')\r\n                    }\r\n                    else{\r\n                        var somearticlesupdated = allarticles.filter((val,key) =>{\r\n                            return [...allarticles,val.isreview=articlevideoisview]                           \r\n                           });\r\n                           \r\n                           setAllarticles(somearticlesupdated);   \r\n                           tosttrigger('Review Changed', 'success')\r\n                    }\r\n                    \r\n                }\r\n            })\r\n            .catch(err =>\r\n                console.log(err)          \r\n    \r\n            )\r\n        \r\n    \r\n        \r\n        }\r\n    \r\n\r\n    // End Bulk Review Updater\r\n\r\n    // Status Changer\r\n\r\n    const statusupdate = async (e) => {\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        var tablename = e.target.id\r\n        \r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(parseInt(elm.id))\r\n            }\r\n        })\r\n       \r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', tablename);\r\n        form_data.append('statereview', 'state');\r\n        form_data.append('is_active', articlevideoisactive);\r\n        \r\n\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/bulkreviewupdater/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }    \r\n        \r\n       \r\n        await axios.post(url, form_data, config)\r\n            .then(res => {\r\n                  \r\n                tosttrigger(res.data.message, 'success')\r\n                    if (tablename === \"Videos\"){\r\n                        var someavideosupdated = allvideos.filter((val,key) =>{\r\n                            return [...allvideos, list.includes(val.id) ? val.isactive=articlevideoisactive:val]\r\n                           \r\n                           });\r\n                        \r\n                        setAllvideos(someavideosupdated)\r\n\r\n                        \r\n                    }\r\n                    else if (tablename === \"Articles\"){\r\n                        \r\n                        var somearticlesupdated = allarticles.filter((val,key) =>{\r\n                         return [...allarticles, list.includes(val.id) ? val.isactive=articlevideoisactive:val]\r\n                        \r\n                        });\r\n                        \r\n                        setAllarticles(somearticlesupdated);                      \r\n                        \r\n                        \r\n                    }\r\n                    else {\r\n                        var sometoolsupdated = tools.filter((val,key) =>{\r\n                            return [...tools, list.includes(val.id) ? val.isactive=articlevideoisactive:val]\r\n                           \r\n                           });\r\n                           \r\n                           setTools(sometoolsupdated);  \r\n                           \r\n\r\n                    }\r\n\r\n\r\n                }\r\n            )\r\n            .catch(err =>\r\n                console.log(err)          \r\n    \r\n            )\r\n        \r\n    \r\n        \r\n        }\r\n\r\n    // End Status Changer\r\n\r\n    // Edit form\r\n\r\n    const articlevideohandlesubmit = (e) => {\r\n        e.preventDefault();\r\n        let form_data = new FormData();\r\n        form_data.append('id', feedform.urlid);\r\n        form_data.append('mainref', feedform.mainref);\r\n        form_data.append('supersubcat', feedform.superref);\r\n        form_data.append('action', 'updatearticle');\r\n\r\n\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/articleupdate/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(\"Successfully Status Changed !\", \"success\");\r\n                setArticlemodel(false);\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    const Videoarticlehandlesubmit = (e) => {\r\n        e.preventDefault();\r\n        let form_data = new FormData();\r\n        form_data.append('id', feedform.urlid);\r\n        form_data.append('mainref', feedform.mainref);\r\n        form_data.append('supersubcat', feedform.superref);\r\n        form_data.append('action', 'updatevideo');\r\n\r\n\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/articleupdate/';\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.message, \"success\");\r\n                setVideomodel(false);\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    const toolhandlesubmit = (e) => {\r\n        e.preventDefault();\r\n        let form_data = new FormData();\r\n        form_data.append('id', feedform.urlid);\r\n        form_data.append('mainref', feedform.mainref);\r\n        form_data.append('supersubcat', feedform.superref);\r\n        form_data.append('action', 'updatetool');\r\n\r\n\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/articleupdate/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(\"Successfully Status Changed !\", \"success\");\r\n                setArticlemodel(false);\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n\r\n    // End Edit form\r\n\r\n    // Deleter\r\n    const bulkdeleter = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n        \r\n         \r\n        \r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', 'Articles');\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/bulkdeltereact/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                tosttrigger(res.data.msg, \"success\");\r\n                var somearticlesupdated = allarticles.filter((val,key) =>(\r\n                    ! list.includes(val.id.toString()))\r\n                    );\r\n                   \r\n                   setAllarticles(somearticlesupdated);  \r\n                \r\n                \r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\", \"error\")\r\n\r\n            )\r\n\r\n    }\r\n    const bulkdeletervideos = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n\r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', 'Videos');\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/bulkdeltereact/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                var somevideosupdated = allvideos.filter((val,key) =>(\r\n                    ! list.includes(val.id.toString()))\r\n                    );\r\n                   \r\n                   setAllvideos(somevideosupdated);  \r\n                tosttrigger(res.data.msg, \"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\", \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    // End Deleter\r\n\r\n    // Tools Deleter\r\n\r\n    const bulkdeletertools = async (e) => {\r\n\r\n\r\n        let form_data = new FormData();\r\n        var list = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                list.push(elm.id)\r\n            }\r\n        })\r\n\r\n        form_data.append('deletelist', list);\r\n        form_data.append('tablename', 'Tools');\r\n        let url = 'https://app.kiranvoleti.com/ui/admin/bulkdeltereact/';\r\n        // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                var sometoolsupdated = tools.filter((val,key) =>(\r\n                    ! list.includes(val.id.toString()))\r\n                    );\r\n                   \r\n                   setTools(sometoolsupdated);  \r\n                tosttrigger(res.data.msg, \"success\");\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(\"Something Went Wrong !\", \"error\")\r\n\r\n            )\r\n\r\n    }\r\n\r\n    // End BulkDeleter\r\n\r\n\r\n    // ui Elements\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    function tosttrigger(msg, status) {\r\n        if (status === \"success\") {\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } else {\r\n            toast.error(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // End Ui Elements\r\n\r\n\r\n\r\n    return (\r\n        <TopicsContext.Provider value={{\r\n            handleSubmit, rhandleChange, onFileChange, feedform, isspinner,\r\n            feedreadylist, getallfeedstable, handlechange, handleAllChecked,\r\n\r\n            sendforFetch, spin, delpin, topicstatuschange, howmanyfetch, fetchcategory,\r\n\r\n            sendforFetchtable, sendchannelfetch,setArticlevideoperpage,articlevideoperpage,\r\n\r\n            allarticles, totalresults, articlevideostatus, articlevideosearch, togglemodel,\r\n            articlemodel, statetoggle,viewtoggle, articlevideoisactive, collectioncountarticle,\r\n            articlevideopage, getallarticles, bulkdeleter,\r\n            articlevideohandlesubmit, articlestatuschange,\r\n            searchquery, paginationcount, handlePageClick, handlePageClickarticle,\r\n            handlePageClickvideo,deletefeeditem,sitequery,authorquery,setFetchcategory,\r\n            setArticlevideoisactive,setArticlevideoisview,setArticlevideosearch,setArticlevideoauthor,\r\n            setArticlevideochannel,articlevideoisview,        \r\n\r\n\r\n\r\n\r\n\r\n\r\n            allvideos, videomodel, getallvideos, bulkdeletervideos,\r\n            togglevideomodel, Videoarticlehandlesubmit, videostatuschange,\r\n            reviewupdate,statusupdate,\r\n\r\n            getalltools,tools,collectioncounttools,totaltool,bulkdeletertools,\r\n            toolmodel, setToolmodel ,toggletoolmodel,toolhandlesubmit, handlePageClicktools,\r\n\r\n            handleAllCheckedArticles,handleCheckchangeArticles,stateallchecked,setStateallchecked,\r\n            handleAllCheckedVideos,handleCheckchangeVideos,handleAllCheckedTools,handleAllCheckedSource,\r\n            handleCheckchangeTools,handleCheckchangeSource,setDynotoollink,setDynotooltext,dynolinktextupdater,toolstatuschange\r\n            \r\n\r\n        }}>\r\n\r\n\r\n            {children}\r\n\r\n        </TopicsContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TopicsProvider","import React, { useContext } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\n\r\nfunction Articletable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    checked={topicmanager.stateallchecked}\r\n                                    onChange={topicmanager.handleAllCheckedSource}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">Feed Link</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">is_Fetched</th>\r\n                        <th scope=\"col\">parent_id</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.feedreadylist.map((row, index) => (\r\n\r\n                        <tr key={row.id} className={row.id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        data-url={row.feedlist}\r\n                                        onChange={topicmanager.handleCheckchangeSource}\r\n                                        checked={row.ischecked}\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a href={row.feedlist} target=\"_blank\" rel=\"noopener noreferrer\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.feedlist.substring(0, 60)}</div></a></td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n\r\n                            <td id={row._id}>\r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive ? \r\n                            \r\n                            <input id={row._id} onChange={topicmanager.topicstatuschange} defaultChecked type=\"checkbox\" />\r\n                            \r\n                            : \r\n                            \r\n                            \r\n                            <input  id={row._id} onChange={topicmanager.topicstatuschange} type=\"checkbox\" />\r\n                            \r\n                            \r\n                            }\r\n                            <span className=\"custom-toggle-slider rounded-circle\" />\r\n                            </label>\r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            <td>{row.isfetched  ? \"Fetched\" : \"Not Fetched\"}</td>                            \r\n                            <td>{row.parent_id ? row.parent_id : \"its is parent\"}</td>\r\n                            <td>{row.pubdate}</td>\r\n                            <td>{row.lastmodified}</td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                                <Button color=\"danger\" size=\"sm\" type=\"button\" data-id={row.id}\r\n                                    onClick={topicmanager.deletefeeditem}\r\n                                >\r\n                                    <i className=\"fa fa-trash\" aria-hidden=\"true\" data-id={row.id}></i>\r\n                                </Button>\r\n                                {/* <Button color=\"info\" size=\"sm\" type=\"button\"\r\n                                    data-username={row.username}\r\n                                    data-id={row._id}\r\n                                    data-email={row.email}\r\n                                    onClick={toggleeditModal}\r\n                                >\r\n                                    <i className=\"fas fa-pen\" aria-hidden=\"true\"></i>\r\n                                </Button> */}\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articletable\r\n","import React, { useContext } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\n\r\nfunction Articlevideotable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);   \r\n\r\n    // const subcatfilter = (valid) =>{\r\n    //     const subcatfiltered = \r\n    //     return subcatfiltered\r\n    // }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"articleparent\"\r\n                                    type=\"checkbox\"  \r\n                                    name = \"articles\" \r\n                                    checked={topicmanager.stateallchecked}\r\n                                    onChange={topicmanager.handleAllCheckedArticles}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"articleparent\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">URL</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">cat</th>\r\n                        <th scope=\"col\">s.cat</th>\r\n                        <th scope=\"col\">review</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.allarticles.map((row, index) => (\r\n\r\n                        <tr key={index} className={row.id}>\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        data-url={row.feedlist}\r\n                                        onChange={topicmanager.handleCheckchangeArticles}\r\n                                        checked={row.ischecked}\r\n                                        \r\n                                        \r\n\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a  href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.title}</div></a></td>\r\n                            <td>\r\n\r\n                            <Media className=\"align-items-center\">\r\n                  <a\r\n                    className=\" mr-3\"\r\n                    href={row.URL}\r\n                    \r\n                  >\r\n                    <img\r\n                      alt=\"...\"\r\n                      height=\"auto\"\r\n                      width=\"150px\"\r\n                      src={row.image}\r\n                    />\r\n                  </a>\r\n                 \r\n                </Media>\r\n\r\n                            </td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n                            \r\n                            <td id={row._id}>\r\n                            \r\n                            \r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive.toString() === \"true\" ?\r\n\r\n                            <><input id={row._id} onChange={topicmanager.articlestatuschange} defaultChecked type=\"checkbox\" />\r\n                            <span className=\"custom-toggle-slider rounded-circle\" /></>\r\n                            \r\n                            : null}\r\n                            {row.isactive.toString() === \"false\" ?\r\n                            <><input id={row._id} onChange={topicmanager.articlestatuschange} type=\"checkbox\" />\r\n                            <span className=\"custom-toggle-slider rounded-circle\" /></>\r\n                            :null\r\n                            }\r\n\r\n                            </label>\r\n                            \r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            \r\n                           <td>\r\n                               {catmanager.subcategories.map(val=>parseInt(val.id)===parseInt(row.subcategory)? val.category:null)}\r\n                           </td>\r\n                           <td>\r\n                           {catmanager.supsubcategories.map(val=>parseInt(val.id)===parseInt(row.supersubcat)? val.category:null)}\r\n                           </td>\r\n\r\n                            <td>{row.isreview ? 'Reviewed' : \"Not Reviewed\"}</td>\r\n                            <td>{row.videopublishedat}</td>\r\n                            <td>{row.lastmodified}</td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                               \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"                                   \r\n                                   \r\n                                    onClick={props.togglemodel}\r\n                                    data-id={row.id}\r\n                                    data-mainref={row.subcategory}\r\n                                    data-superref={row.supersubcat}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articlevideotable\r\n","import React, { useContext } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\n\r\nfunction Toolsvideotable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);   \r\n\r\n    // const subcatfilter = (valid) =>{\r\n    //     const subcatfiltered = \r\n    //     return subcatfiltered\r\n    // }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"toolsparentbox\"\r\n                                    type=\"checkbox\"\r\n                                    checked={topicmanager.stateallchecked}\r\n                                    onChange={topicmanager.handleAllCheckedTools}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"toolsparentbox\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">URL</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">cat</th>\r\n                        <th scope=\"col\">s.cat</th>\r\n                        <th scope=\"col\">review</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.tools.map((row, index) => (\r\n\r\n                        <tr key={index} className={row.id}>\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        data-url={row.URL}\r\n                                        onChange={topicmanager.handleCheckchangeTools}\r\n                                        checked={row.ischecked}\r\n\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a  href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.title}</div></a>\r\n                            <br></br>\r\n                            <input className=\"form-control\" onChange={(e)=>topicmanager.setDynotooltext(e.target.value)} name=\"title\" placeholder=\"new title\" />\r\n                            <br></br>\r\n                            <input className=\"form-control\" onChange={(e)=>topicmanager.setDynotoollink(e.target.value)} name=\"link\" placeholder=\"new link\" />\r\n                            <Button color=\"primary\" id={row.id} type=\"button\" size=\"sm\" className=\"mt-1\" onClick={topicmanager.dynolinktextupdater}>Change</Button>\r\n                            </td>\r\n                           \r\n                            <td>\r\n\r\n                            <Media className=\"align-items-center\">\r\n                  <a\r\n                    className=\" mr-3\"\r\n                    href={row.URL}\r\n                    \r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <img\r\n                      alt=\"...\"\r\n                      height=\"auto\"\r\n                      width=\"150px\"\r\n                      src={row.image}\r\n                    />\r\n                  </a>\r\n                 \r\n                </Media>\r\n\r\n                            </td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n                            \r\n                            <td id={row._id}>\r\n                            \r\n                            \r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive.toString() === \"true\" ?\r\n\r\n                            <><input id={row._id} onChange={topicmanager.toolstatuschange} defaultChecked type=\"checkbox\" />\r\n                            <span className=\"custom-toggle-slider rounded-circle\" /></>\r\n                            \r\n                            : null}\r\n                            {row.isactive.toString() === \"false\" ?\r\n                            <><input id={row._id} onChange={topicmanager.toolstatuschange} type=\"checkbox\" />\r\n                            <span className=\"custom-toggle-slider rounded-circle\" /></>\r\n                            :null\r\n                            }\r\n\r\n                            </label>\r\n                            \r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            \r\n                           <td>\r\n                               {catmanager.subcategories.map(val=>parseInt(val.id)===parseInt(row.subcategory)? val.category:null)}\r\n                           </td>\r\n                           <td>\r\n                           {catmanager.supsubcategories.map(val=>parseInt(val.id)===parseInt(row.supersubcat)? val.category:null)}\r\n                           </td>\r\n\r\n                            <td>{row.isreview ? 'Reviewed' : \"Not Reviewed\"}</td>\r\n                            <td>{row.videopublishedat}</td>\r\n                            <td>{row.lastmodified}</td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                               \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"                                   \r\n                                   \r\n                                    onClick={props.toggletoolmodel}\r\n                                    data-id={row.id}\r\n                                    data-mainref={row.subcategory}\r\n                                    data-superref={row.supersubcat}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolsvideotable\r\n","import React, { useContext } from \"react\";\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\nimport { CategoryContext } from '../contexts/CategoryContext';\r\nimport { TopicsContext } from '../contexts/TopicsContext';\r\nimport NumericLabel from 'react-pretty-numbers';\r\nimport Moment from 'react-moment';\r\n\r\nfunction Videoarticletable(props) {\r\n\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);   \r\n\r\n    // const subcatfilter = (valid) =>{\r\n    //     const subcatfiltered = \r\n    //     return subcatfiltered\r\n    // }\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"videoparent\"\r\n                                    type=\"checkbox\"\r\n                                    checked={topicmanager.stateallchecked}\r\n                                    onChange={topicmanager.handleAllCheckedVideos}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"videoparent\">\r\n                                    #\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">URL</th>\r\n                        <th scope=\"col\">Views</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">is_Active</th>\r\n                        <th scope=\"col\">cat</th>\r\n                        <th scope=\"col\">s.cat</th>\r\n                        <th scope=\"col\">Review</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {topicmanager.allvideos.map((row, index) => (\r\n\r\n                        <tr key={index} className={row.id}>\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n                                <div className=\"custom-control custom-checkbox mb-3\">\r\n                                    <input\r\n                                        className=\"custom-control-input\"\r\n                                        id={row.id}\r\n                                        type=\"checkbox\"\r\n                                        name=\"childbox\"\r\n                                        onChange={topicmanager.handleCheckchangeVideos}\r\n                                        checked={row.ischecked}\r\n\r\n                                    />\r\n\r\n                                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                                        {index + 1}\r\n                                    </label>\r\n                                </div>\r\n\r\n\r\n\r\n                            </th>\r\n                            <td><a  href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{width:'200px',wordWrap: 'break-word',whiteSpace:\"pre-wrap\"}}>{row.title}</div></a></td>\r\n                            <td><NumericLabel>{row.views}</NumericLabel></td>\r\n                            <td>\r\n\r\n                            <Media className=\"align-items-center\">\r\n                  <a\r\n                    className=\" mr-3\"\r\n                    href=\"#pablo\"\r\n                    onClick={e => e.preventDefault()}\r\n                  >\r\n                    <img\r\n                      alt=\"...\"\r\n                      height=\"auto\"\r\n                      width=\"150px\"\r\n                      src={row.image}\r\n                    />\r\n                  </a>\r\n                 \r\n                </Media>\r\n\r\n                            </td>\r\n                            <td>{row.category}</td>                            \r\n                            <td>{row.typeofsubmit}</td>\r\n                                                          \r\n\r\n                            <td id={row._id}>\r\n                            <label className=\"custom-toggle\">\r\n                            {row.isactive ? \r\n                            \r\n                            <input id={row._id} onChange={topicmanager.videostatuschange} defaultChecked type=\"checkbox\" />\r\n                            \r\n                            : null}\r\n                            \r\n                            {!row.isactive ?\r\n                            <input id={row._id} onChange={topicmanager.videostatuschange} type=\"checkbox\" />\r\n                            :null\r\n                            \r\n                            }\r\n                            <span className=\"custom-toggle-slider rounded-circle\" />\r\n                            </label>\r\n                            </td>\r\n                                \r\n\r\n\r\n                            \r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n                            \r\n                           <td>\r\n                               {catmanager.subcategories.map(val=>parseInt(val.id)===parseInt(row.subcategory)? val.category:null)}\r\n                           </td>\r\n                           <td>\r\n                           {catmanager.supsubcategories.map(val=>parseInt(val.id)===parseInt(row.supersubcat)? val.category:null)}\r\n                           </td>\r\n\r\n                            <td>{row.isreview ? 'Reviewed' : 'Not Reviewed'}</td>\r\n                            <td><Moment date={row.videopublishedat} /></td>\r\n                            <td><Moment date={row.lastmodified} /></td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n                            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                               \r\n                                <Button color=\"info\" size=\"sm\" type=\"button\"                                   \r\n                                   \r\n                                    onClick={props.togglevideomodel}\r\n                                    data-id={row.id}\r\n                                    data-mainref={row.subcategory}\r\n                                    data-superref={row.supersubcat}\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                {topicmanager.spin.map(spinid => (\r\n                                    parseInt(spinid.id) === parseInt(row.id) ? <Spinner key={row.id} size=\"sm\" color=\"info\" /> : null\r\n\r\n\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videoarticletable\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction Articlevideomodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.topicmanager.articlemodel}\r\n                toggle={props.topicmanager.togglemodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Edit\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.topicmanager.togglemodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                   \r\n\r\n                    <Form role=\"form\" onSubmit={props.topicmanager.articlevideohandlesubmit}>\r\n                        <Input onChange={props.topicmanager.rhandleChange} placeholder=\"Sub Category\" id=\"urlid\" name=\"urlid\" type=\"hidden\" />\r\n                            \r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.subcategories.map((val,index) =>(\r\n                                    parseInt(val.mainref) === parseInt(props.superrefsarticle) ?  \r\n                                    <option key={index} value={val.id}>{val.category}</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.supsubcategories.map((val,index) =>(  \r\n                                    parseInt(val.masterrefrence) === parseInt(props.superrefsarticle) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.superrefsarticle})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.topicmanager.togglemodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Articlevideomodel\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Label,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nfunction Videoarticlemodel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.topicmanager.videomodel}\r\n                toggle={props.topicmanager.togglevideomodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Edit Videos\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.topicmanager.togglevideomodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                   \r\n\r\n                    <Form role=\"form\" onSubmit={props.topicmanager.Videoarticlehandlesubmit}>\r\n                        <Input onChange={props.topicmanager.rhandleChange} placeholder=\"Sub Category\" id=\"urlid\" name=\"urlid\" type=\"hidden\" />\r\n                            \r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.subcategories.map((val,index) =>(\r\n                                    parseInt(val.mainref) === parseInt(props.superrefsarticle) ?  \r\n                                    <option key={index} value={val.id}>{val.category}</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.supsubcategories.map((val,index) =>(  \r\n                                    parseInt(val.masterrefrence) === parseInt(props.superrefsarticle) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.superrefsarticle})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.topicmanager.togglevideomodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Videoarticlemodel\r\n","import React from 'react'\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Spinner\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction ToolsModel(props) {\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* Modal For adding */}\r\n            <Modal\r\n                className=\"modal-dialog-centered\"\r\n                isOpen={props.topicmanager.toolmodel}\r\n                toggle={props.topicmanager.toggletoolmodel}\r\n            >\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                        Edit\r\n            </h5>\r\n                    <button\r\n                        aria-label=\"Close\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"modal\"\r\n                        type=\"button\"\r\n                        onClick={props.topicmanager.toggletoolmodel}\r\n                    >\r\n                        <span aria-hidden={true}>×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                   \r\n\r\n                    <Form role=\"form\" onSubmit={props.topicmanager.toolhandlesubmit}>\r\n                        <Input onChange={props.topicmanager.rhandleChange} placeholder=\"Sub Category\" id=\"urlid\" name=\"urlid\" type=\"hidden\" />\r\n                            \r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Topic</Label>\r\n                            <Input type=\"select\" name=\"mainref\" id=\"mainref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.subcategories.map((val,index) =>(\r\n                                    parseInt(val.mainref) === parseInt(props.superrefsarticle) ?  \r\n                                    <option key={index} value={val.id}>{val.category}</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\">\r\n                            <Label for=\"exampleSelect\">Select Sub Category</Label>\r\n                            <Input type=\"select\" name=\"superref\" id=\"superref\" onChange={props.topicmanager.rhandleChange}>\r\n                                <option>Select Option</option>\r\n                                {props.catmanager.supsubcategories.map((val,index) =>(  \r\n                                    parseInt(val.masterrefrence) === parseInt(props.superrefsarticle) ?                                  \r\n                                    <option key={index} value={val.id}>{val.category}({props.superrefsarticle})</option>:null\r\n                                ))}                            \r\n                            </Input>\r\n                        </FormGroup>\r\n                       \r\n                        \r\n                        <div className=\"modal-footer\">\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                data-dismiss=\"modal\"\r\n                                type=\"button\"\r\n                                onClick={props.topicmanager.toggletoolmodel}\r\n                            >\r\n                                Close\r\n            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                {props.isspinner ? <Spinner size=\"sm\" color=\"light\" /> : null}Save changes\r\n            </Button>\r\n                        </div>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n           \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToolsModel\r\n","import React, { useState, useContext } from 'react';\r\nimport classnames from \"classnames\";\r\nimport Header from \"components/Headers/Header.js\";\r\n// import \"./Topicforms.css\"\r\nimport PropTypes from 'prop-types';\r\n// reactstrap components\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    CardHeader,\r\n    Container,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Col,\r\n    Label,\r\n    Button,\r\n    InputGroup,\r\n    CustomInput,\r\n    Spinner, Pagination\r\n} from \"reactstrap\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport PaginationComponent from \"react-reactstrap-pagination\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { CategoryContext } from './contexts/CategoryContext';\r\nimport { TopicsContext } from './contexts/TopicsContext';\r\nimport Articletable from './tables/Articletable';\r\nimport Articlevideotable from './tables/Articlevideotable';\r\nimport Toolsvideotable from './tables/Toolsvideotable';\r\nimport Videoarticletable from './tables/Videoarticletable';\r\nimport Articlevideomodel from './models/Articlevideomodel';\r\nimport Videoarticlemodel from './models/Videoarticlemodel';\r\nimport ToolsModel from './models/ToolsModel';\r\n\r\nfunction Topicsforms(props) {\r\n\r\n    // form state\r\n    const initialFormData = Object.freeze({\r\n        tabs: 1\r\n\r\n    });\r\n    const catmanager = useContext(CategoryContext);\r\n    const topicmanager = useContext(TopicsContext);\r\n\r\n    const [formchangedata, updateFormchangedata] = useState(initialFormData);\r\n    const [tabs, setTabs] = useState(formchangedata.tabs)\r\n\r\n\r\n\r\n\r\n\r\n    const toggleNavs = (e, state, index) => {\r\n        e.preventDefault();\r\n        setTabs(index)\r\n        topicmanager.setFetchcategory('')\r\n        topicmanager.setArticlevideoisactive('')\r\n        topicmanager.setArticlevideoisview('')\r\n        topicmanager.setArticlevideosearch('')\r\n        topicmanager.setArticlevideoauthor('')\r\n        topicmanager.setArticlevideochannel('')\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                {/* Table */}\r\n                <Row>\r\n                    <div className=\"col-md\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <h3 className=\"mb-0\">Topics</h3>\r\n                            </CardHeader>\r\n                            <div className=\"nav-wrapper\">\r\n                                <Nav\r\n                                    className=\"nav-fill flex-column flex-md-row\"\r\n                                    id=\"tabs-icons-text\"\r\n                                    pills\r\n                                    role=\"tablist\"\r\n                                >\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 1}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 1\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 1)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-cloud-upload-96 mr-2\" />\r\n                Feed and Links Dumping\r\n              </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 2}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 2\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 2)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-books mr-2\" />\r\n                                            {'Source Table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 3}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 3\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 3)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-book-bookmark mr-2\" />\r\n                                            {'Fetched Articles table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 4}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 4\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 4)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-button-play mr-2\" />\r\n                                            {'Fetched Video table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            aria-selected={tabs === 5}\r\n                                            className={classnames(\"mb-sm-3 mb-md-0\", {\r\n                                                active: tabs === 5\r\n                                            })}\r\n                                            onClick={e => toggleNavs(e, \"tabs\", 5)}\r\n                                            href=\"#pablo\"\r\n                                            role=\"tab\"\r\n                                        >\r\n                                            <i className=\"ni ni-settings mr-2\" />\r\n                                            {'Fetched Tool table'}\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n\r\n                                </Nav>\r\n                            </div>\r\n                            <Card className=\"shadow\">\r\n                                <CardBody>\r\n                                    <TabContent activeTab={\"tabs\" + tabs}>\r\n                                        <TabPane tabId=\"tabs1\">\r\n\r\n                                            <Form onSubmit={topicmanager.handleSubmit}>\r\n                                                <Row>\r\n                                                    <Col md=\"12\">\r\n                                                        <FormGroup className=\"mb-3\">\r\n                                                            <Label for=\"superref\">Select Topic</Label>\r\n                                                            <Input type=\"select\" name=\"superref\" id=\"superref\"\r\n                                                                onChange={topicmanager.rhandleChange}\r\n                                                            >\r\n                                                                <option>Select Option</option>\r\n                                                                <option value=\"feeds\">Feeds (text data)</option>\r\n                                                                <option value=\"googlenewsfeeds\">Googlenewsfeeds (text data)</option>\r\n                                                                <option value=\"links\">Links (text data)</option>\r\n                                                                <option value=\"channel\">Channel (video data)</option>\r\n                                                                <option value=\"username\">Channel Username (video data)</option>\r\n                                                                <option value=\"keyword\">Keyword (video data)</option>\r\n                                                                <option value=\"video\">Video (video data)</option>\r\n                                                                <option value=\"tools\">Tools</option>\r\n\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n\r\n                                                        <FormGroup className=\"mb-3\">\r\n                                                            <Label for=\"iptype\">Select Input Type</Label>\r\n                                                            <Input type=\"select\" name=\"iptype\" id=\"iptype\"\r\n                                                                onChange={topicmanager.rhandleChange}\r\n                                                            >\r\n                                                                <option value=\"multiple\">Multiple</option>\r\n                                                                <option value=\"csv\">Csv File</option>\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n                                                        {topicmanager.feedform.iptype === 'multiple' ?\r\n                                                            <FormGroup>\r\n                                                                <Input\r\n                                                                    id=\"iptextarea\"\r\n                                                                    name=\"iptextarea\"\r\n                                                                    placeholder=\"Enter Links By Enter\"\r\n                                                                    rows=\"3\"\r\n                                                                    type=\"textarea\"\r\n                                                                    onChange={topicmanager.rhandleChange}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                            :\r\n                                                            <FormGroup className=\"mb-3\">\r\n                                                                <Label for=\"multirefiles\">Upload csv file</Label>\r\n                                                                <InputGroup className=\"input-group-alternative\">\r\n                                                                    <CustomInput type=\"file\" id=\"multirefiles\" name=\"multirefiles\"\r\n                                                                        onChange={topicmanager.onFileChange} label=\"Yo, pick a CSV file\" />\r\n                                                                </InputGroup>\r\n                                                            </FormGroup>\r\n                                                        }\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Button color=\"primary\" type=\"submit\" disabled={topicmanager.isspinner}>\r\n                                                    {topicmanager.isspinner ? <Spinner size=\"sm\" color=\"secondary\" className=\"mr-1\" /> : null}\r\n                                                    {topicmanager.isspinner ? 'Processing..' : 'Submit'}\r\n                                                </Button>\r\n\r\n                                            </Form>\r\n\r\n\r\n                                        </TabPane>\r\n                                        <TabPane tabId=\"tabs2\">\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n\r\n                                                    <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallfeedstable} >Refresh</Button>\r\n\r\n                                                    {topicmanager.feedform.typeofsubmit === \"feeds\" ||\r\n\r\n                                                        topicmanager.feedform.typeofsubmit === \"googlenewsfeeds\" ?\r\n\r\n                                                        <Button outline color=\"info\" size=\"sm\" onClick={topicmanager.sendforFetch} >Crawl Now (Extract)</Button>\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                    {topicmanager.feedform.typeofsubmit === \"channel\" ?\r\n\r\n                                                        <Button outline color=\"danger\" size=\"sm\" onClick={topicmanager.sendchannelfetch} >Fetch Video Channels</Button>\r\n\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                    {/* <Button color=\"secondary\" onClick={topicmanager.delpin} >Delete</Button> */}\r\n\r\n\r\n                                            fetched: {topicmanager.howmanyfetch}\r\n                                                    <FormGroup className=\"mt-3\">\r\n                                                        {/* <Label for=\"typeofsubmit\">Select type</Label> */}\r\n                                                        <Input type=\"select\" name=\"typeofsubmit\" bsSize=\"sm\" id=\"typeofsubmit\"\r\n                                                            onChange={topicmanager.rhandleChange}\r\n                                                        >\r\n                                                            <option>Select Option</option>\r\n                                                            <option value=\"\">---------Parent---------</option>\r\n                                                            <option value=\"feeds\">Feeds (text data)</option>\r\n                                                            <option value=\"googlenewsfeeds\">Googlenewsfeeds (text data)</option>\r\n                                                            <option value=\"links\">Links (text data)</option>\r\n                                                            <option value=\"channel\">Channel ID(video data)</option>\r\n                                                            <option value=\"username\">Channel name(video data)</option>\r\n                                                            <option value=\"video\">Video (video data)</option>\r\n                                                            <option value=\"\">---------Children---------</option>\r\n\r\n                                                            <option value=\"genfromgooglefeeds\">Gen from Googlefeeds (text data (child))</option>\r\n                                                            <option value=\"genfromfeeds\">Gen from feeds (text data (child))</option>\r\n                                                            <option value=\"genfromchannel\">Gen from channels (video data (child))</option>\r\n                                                            <option value=\"links\">Links (text data (child))</option>\r\n                                                            <option value=\"video\">Video (video data (child))</option>\r\n\r\n\r\n\r\n                                                        </Input>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <hr />\r\n                                                {/* <Col md='6'>\r\n                                                    <h4 className=\"text-center\">Fetching to Tables</h4>\r\n                                                    <FormGroup className=\"m-3\"> */}\r\n                                                {/* <Label for=\"fetchcategory\">Select type</Label>\r\n                                                        <Input type=\"select\" name=\"fetchcategory\" id=\"fetchcategory\"\r\n                                                            onChange={topicmanager.rhandleChange}\r\n                                                        >\r\n                                                            <option>Select Option</option>\r\n                                                            {catmanager.categories.map(val => (\r\n                                                                <option key={val.id} value={val.id}>{val.category}</option>\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                        </Input> */}\r\n                                                {/* {topicmanager.feedform.typeofsubmit === \"video\" ?\r\n                                                            <Button outline color=\"info\" size=\"sm\" onClick={topicmanager.sendforvideoFetch} >Youtube Fetch</Button>\r\n                                                            : <Button outline size=\"sm\" color=\"info\" onClick={topicmanager.sendforFetchtable} >Fetch to Tables</Button>\r\n                                                        } */}\r\n                                                {/* </FormGroup>\r\n                                                </Col> */}\r\n                                            </Row>\r\n                                            {topicmanager.isspinner ?\r\n                                                <Spinner size=\"md\" color=\"info\" /> : null}\r\n                                            <Articletable />\r\n\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total results: {topicmanager.paginationcount}\r\n                                                    {/* <FormGroup>\r\n                                                        <Input placeholder=\"Type Page number [0-10]\" name=\"page\" id=\"page\" onChange={topicmanager.rhandleChange} />\r\n                                                    </FormGroup> */}\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.paginationcount}\r\n                                                            pageSize={50}\r\n                                                            onSelect={topicmanager.handlePageClick}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n                                                    </Pagination>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n\r\n\r\n                                        </TabPane>\r\n                                        <TabPane tabId=\"tabs3\">\r\n\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallarticles} >Refresh</Button>\r\n                                                        <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeleter} >Delete</Button>\r\n                                                        <Button outline color=\"info\" size=\"sm\" id=\"Articles\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                        <Button outline color=\"success\" size=\"sm\" id=\"Articles\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                    </FormGroup>\r\n                                                    <Form inline>\r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                                value={topicmanager.articlevideoisactive}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                value={topicmanager.articlevideoisview}\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">website: </Label>\r\n                                                            <Input bsSize=\"sm\"\r\n                                                                onChange={topicmanager.sitequery}\r\n                                                                placeholder=\"Enter website term\"\r\n                                                                id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"authorquery\">author: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.authorquery} placeholder=\"Enter authorquery\" id=\"authorquery\" name=\"authorquery\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"q\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\" value={topicmanager.articlevideosearch} onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"perpage\">Per page: </Label>\r\n\r\n                                                            <Input\r\n                                                                value={topicmanager.articlevideoperpage}\r\n                                                                type=\"select\" bsSize=\"sm\"\r\n                                                                onChange={(e) => topicmanager.setArticlevideoperpage(e.target.value)}\r\n                                                                placeholder=\"Perpage\" id=\"perpage\" name=\"perpage\">\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={50}>50</option>\r\n                                                                <option value={100}>100</option>\r\n                                                                <option value={150}>150</option>\r\n                                                                <option value={200}>200</option>\r\n                                                                <option value={250}>250</option>\r\n                                                                <option value={300}>300</option>\r\n\r\n\r\n\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    Fetched Results: {topicmanager.totalresults} of Total {topicmanager.collectioncountarticle}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                            <Articlevideotable articlemodel={topicmanager.articlemodel} togglemodel={topicmanager.togglemodel} />\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total Pages: {Math.ceil(topicmanager.totalresults / 50)}\r\n\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n\r\n\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        {/* <PaginationComponent\r\n                                                            size=\"sm\"\r\n                                                            totalItems={Math.ceil(topicmanager.totalresults / 20)}\r\n                                                            pageSize={5}\r\n                                                            onSelect={topicmanager.handlePageClickarticle}\r\n                                                            /> */}\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.totalresults}\r\n                                                            pageSize={+topicmanager.articlevideoperpage}\r\n                                                            onSelect={topicmanager.handlePageClickarticle}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n\r\n                                                    </Pagination>\r\n\r\n\r\n                                                </Col>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallarticles} >Refresh</Button>\r\n                                                        <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeleter} >Delete</Button>\r\n                                                        <Button outline color=\"info\" size=\"sm\" id=\"Articles\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                        <Button outline color=\"success\" size=\"sm\" id=\"Articles\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                    </FormGroup>\r\n                                                    <Form inline>\r\n\r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" value={topicmanager.articlevideoisactive} type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                                value={topicmanager.articlevideoisview}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">website: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter website term\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"authorquery\">author: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.authorquery} placeholder=\"Enter authorquery\" id=\"authorquery\" name=\"authorquery\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"q\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\" value={topicmanager.articlevideosearch} onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"perpage\">Per page: </Label>\r\n                                                            <Input\r\n                                                                value={topicmanager.articlevideoperpage}\r\n                                                                type=\"select\" bsSize=\"sm\"\r\n                                                                onChange={(e) => topicmanager.setArticlevideoperpage(e.target.value)}\r\n                                                                placeholder=\"Perpage\" id=\"perpage\" name=\"perpage\">\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={50}>50</option>\r\n                                                                <option value={100}>100</option>\r\n                                                                <option value={150}>150</option>\r\n                                                                <option value={200}>200</option>\r\n                                                                <option value={250}>250</option>\r\n                                                                <option value={300}>300</option>\r\n\r\n\r\n\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPane>\r\n                                        <TabPane tabId=\"tabs4\">\r\n\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallvideos} >Refresh</Button>\r\n                                                        <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeletervideos} >Delete</Button>\r\n                                                        <Button outline color=\"info\" size=\"sm\" id=\"Videos\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                        <Button outline color=\"success\" size=\"sm\" id=\"Videos\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                    </FormGroup>\r\n                                                    <Form inline>\r\n\r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                                value={topicmanager.articlevideoisactive}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                                value={topicmanager.articlevideoisview}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">channelid: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter Channelid\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\" value={topicmanager.articlevideosearch} onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"perpage\">Per page: </Label>\r\n                                                            <Input\r\n                                                                value={topicmanager.articlevideoperpage}\r\n                                                                type=\"select\" bsSize=\"sm\"\r\n                                                                onChange={(e) => topicmanager.setArticlevideoperpage(e.target.value)}\r\n                                                                placeholder=\"Perpage\" id=\"perpage\" name=\"perpage\">\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={50}>50</option>\r\n                                                                <option value={100}>100</option>\r\n                                                                <option value={150}>150</option>\r\n                                                                <option value={200}>200</option>\r\n                                                                <option value={250}>250</option>\r\n                                                                <option value={300}>300</option>\r\n\r\n\r\n\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    Fetched Results: {topicmanager.paginationcount} of Total {topicmanager.collectioncountarticle}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                            <Videoarticletable videomodel={topicmanager.videomodel} togglevideomodel={topicmanager.togglevideomodel} />\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total Pages: {Math.ceil(topicmanager.paginationcount / 50)}\r\n\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.paginationcount}\r\n                                                            pageSize={+topicmanager.articlevideoperpage}\r\n                                                            onSelect={topicmanager.handlePageClickvideo}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n\r\n\r\n                                                    </Pagination>\r\n                                                </Col>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n                                                        <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getallvideos} >Refresh</Button>\r\n                                                        <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeletervideos} >Delete</Button>\r\n                                                        <Button outline color=\"info\" size=\"sm\" id=\"Videos\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                        <Button outline color=\"success\" size=\"sm\" id=\"Videos\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                    </FormGroup>\r\n                                                    <Form inline>\r\n\r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                                value={topicmanager.articlevideoisactive}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                                value={topicmanager.articlevideoisview}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">channelid: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter Channelid\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\" value={topicmanager.articlevideosearch} onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"perpage\">Per page: </Label>\r\n                                                            <Input\r\n                                                                value={topicmanager.articlevideoperpage}\r\n                                                                type=\"select\" bsSize=\"sm\"\r\n                                                                onChange={(e) => topicmanager.setArticlevideoperpage(e.target.value)}\r\n                                                                placeholder=\"Perpage\" id=\"perpage\" name=\"perpage\">\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={50}>50</option>\r\n                                                                <option value={100}>100</option>\r\n                                                                <option value={150}>150</option>\r\n                                                                <option value={200}>200</option>\r\n                                                                <option value={250}>250</option>\r\n                                                                <option value={300}>300</option>\r\n\r\n\r\n\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPane>\r\n                                        {/* Tools */}\r\n                                        <TabPane tabId=\"tabs5\">\r\n\r\n                                            <Row>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n\r\n                                                        <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getalltools} >Refresh</Button>\r\n                                                        <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeletertools} >Delete</Button>\r\n                                                        <Button outline color=\"info\" size=\"sm\" id=\"Tools\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                        <Button outline color=\"success\" size=\"sm\" id=\"Tools\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                    </FormGroup>\r\n                                                    <Form inline>\r\n\r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                                value={topicmanager.articlevideoisactive}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                                value={topicmanager.articlevideoisview}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">website: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter website term\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"authorquery\">author: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.authorquery} placeholder=\"Enter authorquery\" id=\"authorquery\" name=\"authorquery\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"q\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\"\r\n                                                                value={topicmanager.articlevideosearch}\r\n                                                                onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"perpage\">Per page: </Label>\r\n                                                            <Input\r\n                                                                value={topicmanager.articlevideoperpage}\r\n                                                                type=\"select\" bsSize=\"sm\"\r\n                                                                onChange={(e) => topicmanager.setArticlevideoperpage(e.target.value)}\r\n                                                                placeholder=\"Perpage\" id=\"perpage\" name=\"perpage\">\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={50}>50</option>\r\n                                                                <option value={100}>100</option>\r\n                                                                <option value={150}>150</option>\r\n                                                                <option value={200}>200</option>\r\n                                                                <option value={250}>250</option>\r\n                                                                <option value={300}>300</option>\r\n\r\n\r\n\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                                <Col md=\"4\">\r\n                                                    Fetched Results: {topicmanager.paginationcount} of Total {topicmanager.collectioncounttools}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                            <Toolsvideotable toolmodel={topicmanager.toolmodel} toggletoolmodel={topicmanager.toggletoolmodel} />\r\n                                            <Row>\r\n                                                <Col md=\"6\">\r\n                                                    total Pages: {Math.ceil(topicmanager.paginationcount / 50)}\r\n\r\n                                                </Col>\r\n                                                <Col md=\"6\" className=\"mt-1\">\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                                        <PaginationComponent\r\n                                                            totalItems={topicmanager.paginationcount}\r\n                                                            pageSize={+topicmanager.articlevideoperpage}\r\n                                                            onSelect={topicmanager.handlePageClicktools}\r\n                                                            maxPaginationNumbers={5}\r\n                                                            defaultActivePage={1}\r\n                                                            firstPageText={'<'}\r\n                                                            previousPageText={'<<'}\r\n                                                            nextPageText={'>>'}\r\n                                                            lastPageText={'>'}\r\n                                                        />\r\n\r\n\r\n                                                    </Pagination>\r\n                                                </Col>\r\n                                                <Col md=\"12\">\r\n                                                    <FormGroup>\r\n\r\n                                                        <Button outline color=\"primary\" size=\"sm\" onClick={topicmanager.getalltools} >Refresh</Button>\r\n                                                        <Button outline color=\"warning\" size=\"sm\" onClick={topicmanager.bulkdeletertools} >Delete</Button>\r\n                                                        <Button outline color=\"info\" size=\"sm\" id=\"Tools\" onClick={topicmanager.reviewupdate} >Change Review</Button>\r\n                                                        <Button outline color=\"success\" size=\"sm\" id=\"Tools\" onClick={topicmanager.statusupdate} >Change Status</Button>\r\n\r\n                                                    </FormGroup>\r\n                                                    <Form inline>\r\n\r\n\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isactive\">state: {topicmanager.articlevideoisactive}</Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isactive\" id=\"isactive\"\r\n                                                                onChange={topicmanager.statetoggle}\r\n                                                                value={topicmanager.articlevideoisactive}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Active</option>\r\n                                                                <option value={false}>Deactivated</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n\r\n                                                            <Label for=\"isreview\"> Review: </Label>\r\n                                                            <Input bsSize=\"sm\" type=\"select\" name=\"isreview\" id=\"isreview\"\r\n                                                                onChange={topicmanager.viewtoggle}\r\n                                                                value={topicmanager.articlevideoisview}\r\n                                                            >\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={true}>Marked as Reviewed</option>\r\n                                                                <option value={false}>Not Reviewed</option>\r\n\r\n\r\n\r\n                                                            </Input>\r\n\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"channelid\">website: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.sitequery} placeholder=\"Enter website term\" id=\"channelid\" name=\"channelid\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"authorquery\">author: </Label>\r\n                                                            <Input bsSize=\"sm\" onChange={topicmanager.authorquery} placeholder=\"Enter authorquery\" id=\"authorquery\" name=\"authorquery\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"q\">search query: </Label>\r\n                                                            <Input bsSize=\"sm\"\r\n                                                                value={topicmanager.articlevideosearch}\r\n                                                                onChange={topicmanager.searchquery} placeholder=\"Enter Query\" id=\"q\" name=\"q\" />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"m-1\">\r\n                                                            <Label for=\"perpage\">Per page: </Label>\r\n                                                            <Input\r\n                                                                value={topicmanager.articlevideoperpage}\r\n                                                                type=\"select\" bsSize=\"sm\"\r\n                                                                onChange={(e) => topicmanager.setArticlevideoperpage(e.target.value)}\r\n                                                                placeholder=\"Perpage\" id=\"perpage\" name=\"perpage\">\r\n                                                                <option value=\"\">Select Option</option>\r\n                                                                <option value={50}>50</option>\r\n                                                                <option value={100}>100</option>\r\n                                                                <option value={150}>150</option>\r\n                                                                <option value={200}>200</option>\r\n                                                                <option value={250}>250</option>\r\n                                                                <option value={300}>300</option>\r\n\r\n\r\n\r\n\r\n                                                            </Input>\r\n                                                        </FormGroup>\r\n                                                    </Form>\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </TabPane>\r\n                                        {/* End Tools */}\r\n                                    </TabContent>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n                <Articlevideomodel\r\n                    catmanager={catmanager}\r\n                    topicmanager={topicmanager}\r\n                    superrefsarticle={8}\r\n\r\n                />\r\n                <Videoarticlemodel\r\n                    catmanager={catmanager}\r\n                    topicmanager={topicmanager}\r\n                    superrefsarticle={9}\r\n\r\n                />\r\n                <ToolsModel\r\n                    catmanager={catmanager}\r\n                    topicmanager={topicmanager}\r\n                    superrefsarticle={10}\r\n\r\n                />\r\n\r\n\r\n\r\n\r\n            </Container>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nPaginationComponent.propTypes = {\r\n    // Total number of items\r\n    totalItems: PropTypes.number.isRequired,\r\n    // Number of items displayed each page\r\n    pageSize: PropTypes.number.isRequired,\r\n    // Function to receive the event when a page is selected\r\n    onSelect: PropTypes.func.isRequired,\r\n    // Number of pages being displayed, by default 5\r\n    maxPaginationNumbers: PropTypes.number,\r\n    // Page where the pagination starts, by default 1\r\n    defaultActivePage: PropTypes.number,\r\n    // Change text of \"First\" button\r\n    firstPageText: PropTypes.string,\r\n    // Change text of \"Previous\" button\r\n    previousPageText: PropTypes.string,\r\n    // Change text of \"Next\" button\r\n    nextPageText: PropTypes.string,\r\n    // Change text of \"Last\" button\r\n    lastPageText: PropTypes.string,\r\n    // Changes the size of the component. Values: \"sm\" and \"lg\". Without the prop the size is normal.\r\n    size: PropTypes.string\r\n}\r\nexport default Topicsforms\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Spinner,\r\n    CardHeader,\r\n    Card,\r\n    Label,\r\n    Alert,\r\n    Container,\r\n    CustomInput,\r\n    Pagination\r\n} from \"reactstrap\";\r\nimport PaginationComponent from \"react-reactstrap-pagination\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst Lettersubscription = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [scrolling, setScrolling] = useState(true);    \r\n    const [bannerlink, setBannerlink] = useState(\"\");\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [datatype, setDatatype] = useState(\"articles\");\r\n    const [pagenumber, setPagenumber] = useState(1);\r\n    const [totalcount, setTotalcount] = useState(1);\r\n    const [subvideos, setSubvideos] = useState([]);\r\n    const [multirefiles, setMultirefiles] = useState([]);\r\n    const [list, setList] = useState([]);\r\n    const [videolist, setVideolist] = useState([]);\r\n    const [toollist, setToollist] = useState([]);    \r\n    const [hasmore,setHasmore] = useState(false);\r\n    const [stateallchecked, setStateallchecked] = useState(false);\r\n    \r\n    const observer =useRef();\r\n    \r\n    const lastElmRef = useCallback( node => {\r\n        \r\n        // if(scrolling) return\r\n        \r\n        if (observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if (entries[0].isIntersecting) {\r\n                  \r\n                // setPagenumber(prevPagenumber => prevPagenumber + 1)           \r\n                handlePageClickvideo(pagenumber);\r\n            }\r\n        })\r\n        if (node) observer.current.observe(node)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n        let form_data = new FormData();\r\n\r\n        form_data.append('per_page', 5);\r\n        form_data.append('start_from', 1);\r\n        form_data.append('datatype', datatype);\r\n        // form_data.append('phone', editingform.phone);\r\n        // form_data.append('datacategory', editingform.datacategory);\r\n\r\n        let url = 'https://app.kiranvoleti.com/daily';\r\n        // console.log(editingform)\r\n        // return\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                var respvideos = res.data.dailyvideos.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setSubvideos(respvideos)\r\n                setTotalcount(res.data.totalcount)\r\n                setScrolling(false)\r\n\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err)\r\n            }\r\n            )\r\n\r\n            \r\n\r\n            \r\n\r\n\r\n    }, [])\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    const refreshdata = () => {\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('per_page', 15);\r\n        form_data.append('start_from', 1);\r\n        form_data.append('datatype', datatype);\r\n        // form_data.append('phone', editingform.phone);\r\n        // form_data.append('datacategory', editingform.datacategory);\r\n\r\n        let url = 'https://app.kiranvoleti.com/daily';\r\n        // console.log(editingform)\r\n        // return\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n\r\n                var respvideos = res.data.dailyvideos.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                setSubvideos(respvideos)\r\n\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n\r\n                console.log(err)\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n    // const handleChange = (e) => {\r\n\r\n\r\n    //     [e.target.name] = e.target.value.trim()\r\n\r\n\r\n    // };\r\n\r\n    const onFileChange = (e) => {\r\n        setMultirefiles(e.target.files[0])\r\n    }\r\n\r\n\r\n    \r\n\r\n    const handlePageClickvideo = async (e) => {\r\n        const pagevalue = document.getElementById('refvaluepagination').value;\r\n        let form_data = new FormData();\r\n        setPagenumber(prevPagenumber => prevPagenumber + 1)\r\n        form_data.append('per_page',5);\r\n        form_data.append('start_from', parseInt(pagevalue)+1);\r\n        form_data.append('datatype', datatype);\r\n        setStateallchecked(false);    \r\n        \r\n        \r\n        \r\n\r\n\r\n\r\n        // Before Ui Elements\r\n\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/daily\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        \r\n\r\n        \r\n        \r\n        await axios.post(url, form_data, config)\r\n            .then(res => {\r\n                \r\n                // setFeedreadylist(res.data.feeds)     \r\n                \r\n                // tosttrigger(res.data.msg, 'success')\r\n                // setHasmore(res.data.dailyvideos > 0)\r\n                \r\n                if (res.data.dailyvideos.length <=0 ){\r\n                    return alert('No More Data')\r\n                }\r\n                var respvideos = res.data.dailyvideos.map(val => (\r\n                    { ...val, ischecked: false }\r\n                ))\r\n                \r\n                setSubvideos(prevSubvideos => {\r\n                    return [...new Set([...prevSubvideos,...respvideos])]\r\n                });\r\n                \r\n                \r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>{\r\n                \r\n                tosttrigger(err, 'error')\r\n                }\r\n\r\n            )\r\n\r\n    };\r\n\r\n   \r\n\r\n    const handleAllChecked = (event) => {\r\n\r\n        var respvideos = subvideos.map(val => (\r\n            { ...val, ischecked: event.target.checked }\r\n        ))\r\n        setSubvideos(respvideos)\r\n        setStateallchecked(event.target.checked)\r\n\r\n\r\n\r\n    }\r\n    const assignids = (e) => {\r\n\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        if (datatype.toString() === \"articles\") {\r\n            allelm.forEach(elm => {\r\n                if (elm.checked) {\r\n\r\n                    let retrnindex = list.indexOf((elm.id).toString());\r\n                    if (retrnindex <= 0) {\r\n                        list.push(elm.id)\r\n                    }\r\n                }\r\n\r\n            })\r\n            setList(list);\r\n        }\r\n        if (datatype.toString() === \"videos\") {\r\n            allelm.forEach(elm => {\r\n                if (elm.checked) {\r\n\r\n                    let retrnindex = videolist.indexOf((elm.id).toString());\r\n                    if (retrnindex <= 0) {\r\n                        videolist.push(elm.id)\r\n                    }\r\n                }\r\n\r\n            })\r\n            setVideolist(videolist);\r\n        }\r\n        if (datatype.toString() === \"tools\") {\r\n            allelm.forEach(elm => {\r\n                if (elm.checked) {\r\n\r\n                    let retrnindex = toollist.indexOf((elm.id).toString());\r\n                    if (retrnindex <= 0) {\r\n                        toollist.push(elm.id)\r\n                    }\r\n                }\r\n\r\n            })\r\n            setToollist(toollist);\r\n        }\r\n\r\n\r\n\r\n        tosttrigger('Added to List', 'success')\r\n\r\n    }\r\n    const deassignids = async (e) => {\r\n        var tempraylist = []\r\n        var outputlist = []\r\n        var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n        await allelm.forEach(elm => {\r\n            if (elm.checked) {\r\n                tempraylist.push(elm.id)\r\n\r\n            }\r\n        })\r\n        outputlist = list.filter(n => !tempraylist.includes(n))\r\n\r\n\r\n        tosttrigger('Removed from List', 'success')\r\n        return setList(outputlist);\r\n\r\n    }\r\n\r\n    const handleCheckchange = (e) => {\r\n        let valid = e.target.id;\r\n        let valchecked = e.target.checked;\r\n        var someavideosupdated = subvideos.filter((val, key) => {\r\n\r\n            return [...subvideos, parseInt(val.id) === parseInt(valid) ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n        });\r\n\r\n        setSubvideos(someavideosupdated);\r\n\r\n    }\r\n\r\n    const handleSubscribe = async (e) => {\r\n\r\n        let form_data = new FormData();\r\n\r\n        form_data.append('list', list);\r\n        form_data.append('videolist', videolist);\r\n        form_data.append('toollist', toollist);\r\n        form_data.append('title', title);\r\n        form_data.append('subject', subject);\r\n        form_data.append('datatype', datatype);\r\n        form_data.append('bannerlink', bannerlink);\r\n\r\n        // for (const key of Object.keys(multirefiles)) {\r\n        //     form_data.append('uploadfile', multirefiles[key])\r\n        // }\r\n        form_data.append('uploadfile', multirefiles)\r\n\r\n        \r\n\r\n        // Before Ui Elements\r\n\r\n\r\n        // Before Ui Elements\r\n        // Backend Submission\r\n\r\n        let url = \"https://app.kiranvoleti.com/dailysubscribe\";\r\n        // let url = 'http://localhost:8099/fetchfeeds';\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            }\r\n        }\r\n        axios.post(url, form_data, config)\r\n            .then(res => {\r\n                // setFeedreadylist(res.data.feeds)     \r\n\r\n                // tosttrigger(res.data.msg, 'success')\r\n                \r\n                tosttrigger('Fetched Successfully', 'success')\r\n                // setCategories(prevCategories => [...prevCategories, { id: res.data.indexkey, category: formchangedata.category }])\r\n\r\n            })\r\n            .catch(err =>\r\n                tosttrigger(err, 'error')\r\n\r\n\r\n            )\r\n\r\n    };\r\n\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            const cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                const cookie = cookies[i].trim();\r\n                // Does this cookie string begin with the name we want?\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    // end checkbox\r\n\r\n\r\n    function tosttrigger(msg, status) {\r\n        if (status === \"success\") {\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } else {\r\n            toast.error(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    // function hideSwalert() {\r\n    //     setSwlert(\"\");\r\n    // }\r\n\r\n    function items() {\r\n        return (subvideos.map((row, index) => {\r\n\r\n         if(subvideos.length === index+1){\r\n            return <tr ref={lastElmRef} key={index} className={row.id}>\r\n        \r\n\r\n            <th scope=\"row\">\r\n\r\n\r\n                <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                        className=\"custom-control-input\"\r\n                        id={row.id}\r\n                        type=\"checkbox\"\r\n                        name=\"childbox\"\r\n                        onChange={handleCheckchange}\r\n                        checked={row.ischecked}\r\n\r\n                    />\r\n\r\n                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                        {index + 1}\r\n                    </label>\r\n                </div>\r\n\r\n\r\n\r\n            </th>\r\n            <td><a href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{ width: '200px', wordWrap: 'break-word', whiteSpace: \"pre-wrap\" }}>{row.title}</div></a></td>\r\n            <td>\r\n\r\n                <Media className=\"align-items-center\">\r\n                    <a\r\n                        className=\" mr-3\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                    >\r\n                        <img\r\n                            alt=\"...\"\r\n                            height=\"auto\"\r\n                            width=\"150px\"\r\n                            src={row.image}\r\n                        />\r\n                    </a>\r\n\r\n                </Media>\r\n\r\n            </td>\r\n            <td>{row.category}</td>\r\n\r\n            <td>{row.videopublishedat}</td>\r\n            <td>{row.lastmodified}</td>\r\n\r\n\r\n        </tr>\r\n\r\n         }  \r\n         else{\r\n            return <tr key={index} className={row.id}>\r\n        \r\n\r\n            <th scope=\"row\">\r\n\r\n\r\n                <div className=\"custom-control custom-checkbox mb-3\">\r\n                    <input\r\n                        className=\"custom-control-input\"\r\n                        id={row.id}\r\n                        type=\"checkbox\"\r\n                        name=\"childbox\"\r\n                        onChange={handleCheckchange}\r\n                        checked={row.ischecked}\r\n\r\n                    />\r\n\r\n                    <label className=\"custom-control-label\" htmlFor={row.id}>\r\n                        {index + 1}\r\n                    </label>\r\n                </div>\r\n\r\n\r\n\r\n            </th>\r\n            <td><a href={row.URL} rel=\"noopener noreferrer\" target=\"_blank\"><div style={{ width: '200px', wordWrap: 'break-word', whiteSpace: \"pre-wrap\" }}>{row.title}</div></a></td>\r\n            <td>\r\n\r\n                <Media className=\"align-items-center\">\r\n                    <a\r\n                        className=\" mr-3\"\r\n                        href=\"#pablo\"\r\n                        onClick={e => e.preventDefault()}\r\n                    >\r\n                        <img\r\n                            alt=\"...\"\r\n                            height=\"auto\"\r\n                            width=\"150px\"\r\n                            src={row.image}\r\n                        />\r\n                    </a>\r\n\r\n                </Media>\r\n\r\n            </td>\r\n            <td>{row.category}</td>\r\n\r\n            <td>{row.videopublishedat}</td>\r\n            <td>{row.lastmodified}</td>\r\n\r\n\r\n        </tr>\r\n         }                 \r\n        \r\n\r\n\r\n        }))}\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <Header />\r\n            <Container className=\"mt--7\" fluid>\r\n\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                {/* Button trigger modal */}\r\n                <Card className=\"shadow\">\r\n                    <CardHeader className=\"border-0\">\r\n                        <h3 className=\"mb-0\">Subscription Alert</h3>\r\n                    </CardHeader>\r\n                    <input type=\"hidden\" id =\"refvaluepagination\" value={pagenumber} />\r\n\r\n                    <Row>\r\n                        <Col md=\"10\" className=\"m-3\">\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"subject\">Subject</Label>\r\n                                <Input type=\"text\" name=\"subject\" id=\"subject\"\r\n                                    onChange={(e) => setSubject(e.target.value)}\r\n                                />\r\n\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"title\">Text</Label>\r\n                                <Input type=\"text\" name=\"title\" id=\"title\"\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                />\r\n\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"multirefiles\">Upload Banner</Label>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <CustomInput type=\"file\" id=\"multirefiles\" name=\"multirefiles\"\r\n                                        onChange={onFileChange} label=\"Yo, pick a files!\" />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"bannerlink\">Banner URL</Label>\r\n                                <Input type=\"text\" name=\"bannerlink\" id=\"bannerlink\"\r\n                                    onChange={(e) => setBannerlink(e.target.value)}\r\n                                />\r\n\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Label for=\"datatype\">Category Filter</Label>\r\n                                <Input type=\"select\" name=\"datatype\" id=\"datatype\"\r\n                                    onChange={(e) => setDatatype(e.target.value)}>\r\n                                    <option className=\"form-controle\" value=\"articles\">Articles</option>\r\n                                    <option className=\"form-controle\" value=\"videos\">Videos</option>\r\n                                    <option className=\"form-controle\" value=\"tools\">Tools</option>\r\n                                </Input>\r\n\r\n                            </FormGroup>\r\n\r\n\r\n                            <FormGroup className=\"mb-3\">\r\n                                <Button onClick={assignids}>Assign</Button>\r\n                                <Button onClick={handleSubscribe}>Send Mail</Button>\r\n                                <Button onClick={deassignids}>Deassign</Button>\r\n                                <Button onClick={refreshdata}>Refresh</Button>\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n\r\n\r\n\r\n                    </Row>\r\n\r\n\r\n                    <Table  className=\"align-items-center table-flush\" responsive>\r\n\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>\r\n                                    <div className=\"custom-control custom-checkbox mb-3\">\r\n                                        <input\r\n                                            className=\"custom-control-input\"\r\n                                            id=\"parentbox\"\r\n                                            type=\"checkbox\"\r\n                                            // checked = {stateallchecked}\r\n                                            onChange={handleAllChecked}\r\n                                        />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n                                            #\r\n                                </label>\r\n                                    </div>\r\n                                </th>\r\n                                <th scope=\"col\">URL</th>\r\n                                <th scope=\"col\">Image</th>\r\n                                <th scope=\"col\">Type</th>\r\n                                <th scope=\"col\">pubdate</th>\r\n                                <th scope=\"col\">lastmodified</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <>\r\n                            {items()}\r\n                            </>\r\n                        </tbody>\r\n                    </Table>\r\n                    {/* <Row>\r\n\r\n                        <Col md=\"6\" className=\"mt-1\">\r\n                            <Pagination aria-label=\"Page navigation example\">\r\n\r\n                                <PaginationComponent\r\n                                    totalItems={totalcount}\r\n                                    pageSize={5}\r\n                                    onSelect={handlePageClickvideo}\r\n                                    maxPaginationNumbers={5}\r\n                                    defaultActivePage={1}\r\n                                    firstPageText={'<'}\r\n                                    previousPageText={'<<'}\r\n                                    nextPageText={'>>'}\r\n                                    lastPageText={'>'}\r\n                                />\r\n\r\n\r\n                            </Pagination>\r\n                        </Col>\r\n                    </Row> */}\r\n\r\n                </Card>\r\n\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    closeClassName: PropTypes.string,\r\n    color: PropTypes.string, // default: 'success'\r\n    isOpen: PropTypes.bool,  // default: true\r\n    toggle: PropTypes.func,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    fade: PropTypes.bool, // default: true\r\n    // Controls the transition of the alert fading in and out\r\n    // See Fade for more details\r\n}\r\nexport default Lettersubscription\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// reactstrap components\r\nimport {    \r\n    Media,\r\n    Table,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport Moment from 'react-moment';\r\n\r\nconst Popularlisttable = (props) => {\r\n\r\n    // function hideSwalert() {\r\n    //     setSwlert(\"\");\r\n    // }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n\r\n            {/* Button trigger modal */}\r\n\r\n            Total Records: {props.totalpages}\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n\r\n                        <th scope=\"col\">URL</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">Category</th>\r\n                        <th scope=\"col\">Clicked</th>\r\n                        <th scope=\"col\">pubdate</th>\r\n                        <th scope=\"col\">lastmodifieddate</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.tools.map((row, index) => (\r\n\r\n                        <tr key={index} className={row.id}>\r\n\r\n\r\n                            <th scope=\"row\">\r\n\r\n\r\n\r\n\r\n                                {index + 1}\r\n\r\n                            </th>\r\n\r\n                            <td>\r\n\r\n                                <Media className=\"align-items-center\">\r\n                                    <a\r\n                                        className=\" mr-3\"\r\n                                        href={row.URL}\r\n\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                    >\r\n                                        <img\r\n                                            alt=\"...\"\r\n                                            height=\"auto\"\r\n                                            width=\"150px\"\r\n                                            src={row.image}\r\n                                        />\r\n                                    </a>\r\n\r\n                                </Media>\r\n\r\n                            </td>\r\n                            <td>{row.category}</td>\r\n                            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            {/* <td>{row.isactive ? \"Active\" : \"Deactivate\"}</td> */}\r\n\r\n                            <td>{row.clicked}</td>\r\n                            <td><Moment date={row.videopublishedat} /></td>\r\n                            <td><Moment date={row.lastmodified} /></td>\r\n\r\n\r\n\r\n\r\n                            {/* <td>{props.refcats.map(ris => (parseInt(ris.id) === parseInt(row.refrence) ? ris.category : null))}</td>\r\n            <td>{props.masterefcat.map(ris => (parseInt(ris.id) === parseInt(row.masterrefrence) ? ris.category : null))}</td> */}\r\n\r\n\r\n\r\n                            <td>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    closeClassName: PropTypes.string,\r\n    color: PropTypes.string, // default: 'success'\r\n    isOpen: PropTypes.bool,  // default: true\r\n    toggle: PropTypes.func,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    fade: PropTypes.bool, // default: true\r\n    // Controls the transition of the alert fading in and out\r\n    // See Fade for more details\r\n}\r\nexport default Popularlisttable\r\n","import React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n// reactstrap components\nimport {\n\n  Card,\n  CardHeader,\n  Container,\n  Row,\n  Col,\n  Spinner,\n  CardFooter,\n  Pagination\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\nimport Popularlisttable from \"./tables/Popularlisttable\";\nimport PaginationComponent from \"react-reactstrap-pagination\";\n// import { UsersContext, QueryContext, PaginationContext } from './contexts/UserContext';\n\nconst Popularlist = (props) => {\n  \n  const [currentpage, setCurrentpage] = useState(0);\n  const [totalpages, setTotalpages] = useState(0);\n  const [isalert,setIsalert] = useState(false);\n  const [toollist,setToollist] = useState([])\n  \n  useEffect(() => {\n    if(window.localStorage.getItem('userrole') !== \"superuser\"){\n      props.history.push('/admin/categories/manage')\n    }\n    fetchtools();\n    \n  }, []);\n\n  const paginate = async (e) => {   \n    \n    const url=\"https://app.kiranvoleti.com/ui/admin/popularlist/\";\n    let form_data = new FormData();\n    form_data.append('page', e);\n    form_data.append('perpage', 20);\n    form_data.append('isactive', '');\n    setCurrentpage(e)\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    await axios.post(url, form_data, config)\n    .then(res=>{            \n      var resptags = res.data.tools.map(val => (\n        { ...val, ischecked: false }\n      ))\n      setToollist(resptags);      \n                         \n        \n        setIsalert(false)                       \n        \n    })\n    .catch(err=>\n      {        \n        setIsalert(false)\n      })\n    \n    \n  }\n\n  \n  const fetchtools = async () => {\n    const url=\"https://app.kiranvoleti.com/ui/admin/popularlist/\";\n    let form_data = new FormData();\n    form_data.append('page', currentpage);\n    form_data.append('perpage', 20);\n    form_data.append('isactive', '');\n    const config = {\n      headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n      }\n    }\n    await axios.post(url, form_data, config)\n    .then(res=>{            \n      var resptags = res.data.tools.map(val => (\n        { ...val, ischecked: false }\n    ))\n        setToollist(resptags);       \n        setTotalpages(res.data.collectioncounttools)                 \n        setIsalert(false)\n        \n    })\n    .catch(err=>{\n        console.log(err)\n        setIsalert(false)\n    })\n}\n\n\n\nconst getCookie = (name) => {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\n\n\n\n \n  \n  \n  return (\n   \n    <>\n\n      <Header />\n      {/* Page content */}\n      <Container className=\"mt--7\" fluid>\n        {/* Table */}\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Poular Tools List</h3>\n              </CardHeader>\n                      \n\n              <Popularlisttable \n              \n              fetchtags = {fetchtools}\n\n              tools={toollist} \n              \n              totalpages={totalpages}\n\n               />\n              \n              <Col md=\"6\" className=\"mt-1\">\n                  <Pagination aria-label=\"Page navigation example\">\n                  \n                      <PaginationComponent\n                          totalItems={totalpages}\n                          pageSize={50}\n                          onSelect={paginate}\n                          maxPaginationNumbers={5}\n                          defaultActivePage={1}\n                          firstPageText={'<'}\n                          previousPageText={'<<'}\n                          nextPageText={'>>'}\n                          lastPageText={'>'}\n                      />\n\n\n                  </Pagination>\n              </Col>\n\n              {isalert ? <Spinner color=\"primary\" />\n\n              :\n\n\n             null\n              \n              \n              }\n              <CardFooter className=\"py-4\">\n                                    \n                      \n                      \n                </CardFooter>\n              \n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n\nexport default Popularlist;\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Media,\r\n    Table,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Paymentlisttable = (props) => {\r\n  \r\n\r\n   \r\n    \r\n\r\n    \r\n   \r\n\r\n    \r\n    function tosttrigger(msg,status){\r\n        if(status === \"success\"){\r\n\r\n            toast.success(msg, {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            }else{\r\n                toast.error(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n}\r\n        \r\n    }\r\n    // function hideSwalert() {\r\n    //     setSwlert(\"\");\r\n    // }\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            \r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            {/* Button trigger modal */}\r\n            <Row className=\"mr-2 mb-1\">\r\n                <Col md=\"12\" >\r\n                <Button\r\n                        size=\"sm\"\r\n                        className=\"float-left ml-1\"\r\n                        color=\"secondary\"\r\n                        type=\"button\"\r\n                        onClick={props.sortbydate}\r\n                    >\r\n                        Sort by Date<i className=\"fas fa-sort ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                   \r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"danger\"\r\n                        type=\"button\"\r\n                        onClick={props.deletepayment}\r\n                    >\r\n                        Delete<i className=\"fa fa-trash ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.subscriptionalert}\r\n                    >\r\n                        Subscription Alert<i className=\"fa fa-flag ml-2\" area-hidden=\"true\"></i>\r\n                    </Button>\r\n                    {/* <Button\r\n                        size=\"sm\"\r\n                        className=\"float-right mr-1\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        onClick={props.sendinvoice}\r\n                    >\r\n                        Send Invoice<i className=\"fas fa-file-invoice-dollar ml-2\" area-hidden=\"true\"></i>\r\n                        \r\n                    </Button> */}\r\n                </Col>\r\n\r\n            </Row>\r\n            Total Records: {props.totalpages}\r\n            <Table className=\"align-items-center table-flush\" responsive>\r\n                \r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>\r\n                            <div className=\"custom-control custom-checkbox mb-3\">\r\n                                <input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"parentbox\"\r\n                                    type=\"checkbox\"\r\n                                    onChange={props.handleAllChecked}\r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"parentbox\">\r\n\r\n                                </label>\r\n                            </div>\r\n                        </th>\r\n\r\n                        {/* <th scope=\"col\">Name</th> */}\r\n                        <th scope=\"col\">Email</th>    \r\n                        <th scope=\"col\">Amount</th>   \r\n                        <th scope=\"col\">PaymentStatus</th>   \r\n                        <th scope=\"col\">Customer</th>   \r\n                        <th scope=\"col\">PaymentIntent</th>   \r\n                        <th scope=\"col\">Date</th>   \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.tags.map(row => (\r\n\r\n                        <tr key={row._id}>\r\n\r\n\r\n\r\n\r\n                            <th scope=\"row\">\r\n                              \r\n                                    <Media>\r\n                                        <div className=\"custom-control custom-checkbox mb-3\">\r\n                                            <input\r\n                                                className=\"custom-control-input\"\r\n                                                id={row.id}\r\n                                                type=\"checkbox\"\r\n                                                name=\"childbox\"\r\n                                                onChange={props.handleCheckchange}\r\n                                                checked={row.ischecked}\r\n\r\n                                            />\r\n                                            <label className=\"custom-control-label\" htmlFor={row.id}>\r\n\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </Media>\r\n                                \r\n                            </th>\r\n                            \r\n                            <td>{row.email}</td>\r\n                            <td>{row.amount_total}</td>\r\n                            <td>{row.payment_status}</td>\r\n                            <td>{row.customer}</td>\r\n                            <td>{row.payment_intent}</td>\r\n                            <td>{row.createdat}</td>\r\n\r\n                            \r\n\r\n                           \r\n                        </tr>\r\n\r\n                    )\r\n                    )}\r\n\r\n                </tbody>\r\n            </Table>\r\n            \r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nAlert.propTypes = {\r\n    className: PropTypes.string,\r\n    closeClassName: PropTypes.string,\r\n    color: PropTypes.string, // default: 'success'\r\n    isOpen: PropTypes.bool,  // default: true\r\n    toggle: PropTypes.func,\r\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n    fade: PropTypes.bool, // default: true\r\n    // Controls the transition of the alert fading in and out\r\n    // See Fade for more details\r\n}\r\nexport default Paymentlisttable\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n// reactstrap components\r\nimport {\r\n\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  Row,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Col,\r\n  Spinner,\r\n  CardFooter,\r\n  Button,\r\n  Pagination\r\n} from \"reactstrap\";\r\n// core components\r\nimport Header from \"components/Headers/Header.js\";\r\nimport PaginationComponent from \"react-reactstrap-pagination\";\r\nimport Paymentlisttable from \"./tables/Paymentlisttable\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n// import { UsersContext, QueryContext, PaginationContext } from './contexts/UserContext';\r\nimport { Redirect } from 'react-router-dom'\r\nconst Paymentlist = (props) => {\r\n  const [subscribers, setSubscribers] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [q, setQ] = useState('');  \r\n  const [currentpage, setCurrentpage] = useState(0);\r\n  const [totalpages, setTotalpages] = useState(0);\r\n  const [isalert,setIsalert] = useState(false);\r\n  const [stateallchecked, setStateallchecked] = useState(false);\r\n  const [taglist,setTaglist] = useState('')\r\n  const [sortby,setSortby] = useState(true)\r\n  \r\n  useEffect(() => {\r\n    // if(window.localStorage.getItem('usertype') !== \"superuser\"){\r\n    //   props.history.push('/admin/categories/manage')\r\n    // }\r\n    fetchtags();\r\n    \r\n  }, []);\r\n\r\n  const paginate = async (e) => {   \r\n    \r\n    const url=\"https://app.kiranvoleti.com/ui/admin/paymentlist/\";\r\n    let form_data = new FormData();\r\n    form_data.append('page', e);\r\n    form_data.append('sort', sortby);\r\n    setCurrentpage(e)\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n    await axios.post(url, form_data, config)\r\n    .then(res=>{            \r\n      var resptags = res.data.tags.map(val => (\r\n        { ...val, ischecked: false }\r\n      ))\r\n        setTags(resptags);      \r\n                         \r\n        \r\n        setIsalert(false)                       \r\n        \r\n    })\r\n    .catch(err=>\r\n      {        \r\n        setIsalert(false)\r\n      })\r\n    \r\n    \r\n  }\r\n\r\n  \r\n  const fetchtags = async () => {\r\n    const url=\"https://app.kiranvoleti.com/ui/admin/paymentlist/\";\r\n    let form_data = new FormData();\r\n    form_data.append('page', currentpage);\r\n    form_data.append('sort', sortby);\r\n    form_data.append('searchterm','')\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n    await axios.post(url, form_data, config)\r\n    .then(res=>{            \r\n      var resptags = res.data.tags.map(val => (\r\n        { ...val, ischecked: false }\r\n    ))\r\n        setTags(resptags);       \r\n        setTotalpages(res.data.total)                 \r\n        setIsalert(false)\r\n        \r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n        setIsalert(false)\r\n    })\r\n}\r\n\r\nconst handleCheckchange = (e) => {\r\n  let valid = e.target.id;\r\n  let valchecked = e.target.checked;\r\n  console.log(valid, valchecked);\r\n  var somesubsupdated = tags.filter((val, key) => {\r\n\r\n      return [...tags, (val.id).toString() === valid.toString() ? val.ischecked = valchecked : val.ischecked]\r\n\r\n\r\n  });\r\n\r\n  setTags(somesubsupdated);\r\n\r\n}\r\n\r\nconst handleAllChecked = (event) => {\r\n\r\n  var respvideos = tags.map(val => (\r\n      { ...val, ischecked: event.target.checked }\r\n  ))\r\n  setTags(respvideos)  \r\n  setStateallchecked(event.target.checked)\r\n\r\n\r\n\r\n}\r\n// Handle Submit Section\r\n\r\nconst handlesubmit = (e) => {\r\n  e.preventDefault();  \r\n\r\n  let form_data = new FormData();\r\n\r\n  \r\n  form_data.append('feed', taglist);\r\n\r\n\r\n  \r\n\r\n  // Before Ui Elements\r\n  \r\n  tosttrigger('Sit back .. Process is initiating..', 'success')\r\n  // Before Ui Elements\r\n  // Backend Submission\r\n\r\n  let url = \"https://app.kiranvoleti.com/tagscreate\";\r\n  // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n  const config = {\r\n      headers: {\r\n          'content-type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n  }\r\n  axios.post(url, form_data, config)\r\n      .then(res => {\r\n          console.log(res.data)\r\n          tosttrigger(\"success\", 'success')\r\n          fetchtags();\r\n\r\n      })\r\n      .catch(err =>\r\n          {\r\n            \r\n          tosttrigger(err, 'error')}\r\n\r\n\r\n      )\r\n\r\n\r\n}\r\n// End Hndle Submit Section\r\n\r\n\r\nconst deletepayment = async (e) => {        \r\n  // Deleter\r\n\r\n\r\n\r\n   let form_data = new FormData();\r\n   var list = []\r\n   var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n\r\n   await allelm.forEach(elm => {\r\n       if (elm.checked) {\r\n           list.push(elm.id)           \r\n       }\r\n   })\r\n  \r\n\r\n   form_data.append('deletelist', list);\r\n   form_data.append('tablename', 'payments');\r\n   let url = 'https://app.kiranvoleti.com/ui/bulkdeltereact/';\r\n   // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n   const config = {\r\n       headers: {\r\n           'content-type': 'application/json',\r\n           'X-CSRFToken': getCookie('csrftoken')\r\n       }\r\n   }\r\n\r\n   axios.post(url, form_data, config)\r\n       .then(res => {\r\n\r\n           tosttrigger(res.data.msg, \"success\");\r\n           fetchtags();\r\n           \r\n\r\n       })\r\n       .catch(err =>\r\n           tosttrigger(\"Something Went Wrong !\", \"error\")\r\n\r\n       )\r\n}\r\n\r\n\r\n\r\n  const subscriptionalert = async (e) => {        \r\n    // Subscriptionalert \r\n  \r\n  \r\n     let form_data = new FormData();\r\n     var list = []\r\n     var allelm = document.querySelectorAll(\"input[name=childbox]\");\r\n  \r\n     await allelm.forEach(elm => {\r\n         if (elm.checked) {\r\n             list.push(elm.id)           \r\n         }\r\n     })\r\n    \r\n  \r\n     form_data.append('deletelist', list);\r\n     form_data.append('tablename', 'payments');\r\n     let url = 'https://app.kiranvoleti.com/ui/admin/subscriptionalert/';\r\n     // let url = 'https://jsonplaceholder.typicode.com/todos';\r\n     const config = {\r\n         headers: {\r\n             'content-type': 'application/json',\r\n             'X-CSRFToken': getCookie('csrftoken')\r\n         }\r\n     }\r\n  \r\n     axios.post(url, form_data, config)\r\n         .then(res => {\r\n  \r\n             tosttrigger(res.data.resonse, \"success\");\r\n             \r\n             \r\n  \r\n         })\r\n         .catch(err =>\r\n             tosttrigger(\"Something Went Wrong !\", \"error\")\r\n  \r\n         )\r\n  }\r\n\r\n  const sortbydate = async (e) => {        \r\n    // sortbydate\r\n  \r\n  \r\n    setSortby(!sortby)\r\n    const url=\"https://app.kiranvoleti.com/ui/admin/paymentlist/\";\r\n    let form_data = new FormData();\r\n    form_data.append('page', currentpage);\r\n    form_data.append('sort', sortby);\r\n    form_data.append('searchterm','');\r\n    \r\n    \r\n    const config = {\r\n      headers: {\r\n          'content-type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n    await axios.post(url, form_data, config)\r\n    .then(res=>{            \r\n      var resptags = res.data.tags.map(val => (\r\n        { ...val, ischecked: false }\r\n    ))\r\n        setTags(resptags);       \r\n        setTotalpages(res.data.total)                 \r\n        setIsalert(false)\r\n        \r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n        setIsalert(false)\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  const fetchfromdatabase = async (e) => {\r\n    \r\n    const url=\"https://app.kiranvoleti.com/ui/admin/paymentlist/\";\r\n    console.log(e.target.value)\r\n    let form_data = new FormData();\r\n    form_data.append('page', '0');\r\n    form_data.append('sort', sortby);\r\n    form_data.append('searchterm',e.target.value.toLowerCase())\r\n    const config = {\r\n      headers: {\r\n          'content-type': 'application/json',\r\n          'X-CSRFToken': getCookie('csrftoken')\r\n      }\r\n    }\r\n    await axios.post(url, form_data, config)\r\n    .then(res=>{            \r\n      var resptags = res.data.tags.map(val => (\r\n        { ...val, ischecked: false }\r\n    ))\r\n        setTags(resptags);       \r\n        setTotalpages(res.data.total)                 \r\n        setIsalert(false)\r\n        \r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n        setIsalert(false)\r\n    })\r\n  }\r\n  \r\nfunction tosttrigger(msg,status){\r\n  if(status === \"success\"){\r\n\r\n      toast.success(msg, {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n      });\r\n\r\n      }else{\r\n          toast.error(msg, {\r\n              position: \"top-right\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n          });\r\n\r\n}\r\n  \r\n}\r\n\r\nconst getCookie = (name) => {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\n\r\n\r\n\r\n \r\n  \r\n  \r\n  return (\r\n   \r\n    <>\r\n\r\n      <Header />\r\n      {/* Page content */}\r\n      <Container className=\"mt--7\" fluid>\r\n        {/* Table */}\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\">Payment List</h3>\r\n              </CardHeader>\r\n\r\n              <FormGroup>\r\n                    <InputGroup className=\"mb-4\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ni ni-zoom-split-in\" />\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input placeholder=\"Search from Database\" onChange={fetchfromdatabase} type=\"text\" />\r\n                </InputGroup>\r\n              </FormGroup>\r\n                          \r\n\r\n              <Paymentlisttable \r\n              \r\n              fetchtags = {fetchtags} \r\n              deletepayment = {deletepayment} \r\n              sortbydate = {sortbydate} \r\n              subscriptionalert = {subscriptionalert}               \r\n              tags={tags} totalpages={totalpages}\r\n              handleCheckchange = {handleCheckchange}\r\n              handleAllChecked = {handleAllChecked}\r\n               />\r\n              \r\n              <Col md=\"6\" className=\"mt-1\">\r\n                  <Pagination aria-label=\"Page navigation example\">\r\n                  \r\n                      <PaginationComponent\r\n                          totalItems={totalpages}\r\n                          pageSize={50}\r\n                          onSelect={paginate}\r\n                          maxPaginationNumbers={5}\r\n                          defaultActivePage={1}\r\n                          firstPageText={'<'}\r\n                          previousPageText={'<<'}\r\n                          nextPageText={'>>'}\r\n                          lastPageText={'>'}\r\n                      />\r\n\r\n\r\n                  </Pagination>\r\n              </Col>\r\n\r\n              {isalert ? <Spinner color=\"primary\" />\r\n\r\n              :\r\n\r\n\r\n             null\r\n              \r\n              \r\n              }\r\n              <CardFooter className=\"py-4\">\r\n                                    \r\n                      \r\n                      \r\n                </CardFooter>\r\n              \r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Paymentlist;\r\n","import Index from \"views/Index.js\";\nimport Userslist from \"views/examples/Userslist.js\";\nimport Subscribelist from \"views/examples/Subscribelist.js\";\nimport Categories from \"views/examples/Categories.js\";\nimport Subcategories from \"views/examples/Subcategories.js\";\nimport Supsubcategories from \"views/examples/Supsubcategories.js\";\nimport Topicsforms from \"views/examples/Topicsforms.js\";\nimport Lettersubscription from \"views/examples/Lettersubscription\";\nimport Popularlist from \"views/examples/Popularlist\";\nimport Paymentlist from \"views/examples/Paymentlist\";\n\n\n// import Icons from \"views/examples/Icons.js\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? 'block' : 'block'  \n  },\n  // {\n  //   path: \"/icons\",\n  //   name: \"Icons\",\n  //   icon: \"ni ni-planet text-blue\",\n  //   component: Icons,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   icon: \"ni ni-pin-3 text-orange\",\n  //   component: Maps,\n  //   layout: \"/admin\"\n  // },\n  // {\n  //   path: \"/user-profile\",\n  //   name: \"User Profile\",\n  //   icon: \"ni ni-single-02 text-yellow\",\n  //   component: Profile,\n  //   layout: \"/admin\"\n  // },\n  {\n    path: \"/users\",\n    name: \"Users\",\n    icon: \"ni ni-badge text-gray\",\n    component: Userslist,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? 'none' : 'block'  \n  },\n  \n  {\n    path: \"/categories/topics\",\n    name: \"Main Categories (topics)\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Categories,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? (localStorage.getItem('userrole') === \"staff\"?'block':'none') : 'block'  \n  },\n  {\n    path: \"/categories/subcategories\",\n    name: \"Sub Categories\",\n    icon: \"ni ni-bullet-list-67 text-gray\",\n    component: Subcategories,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? (localStorage.getItem('userrole') === \"staff\"?'block':'none') : 'block'  \n  },\n  {\n    path: \"/categories/supersubcategories\",\n    name: \"Supersub Categories\",\n    icon: \"ni ni-bullet-list-67 text-gray\",\n    component: Supsubcategories,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? (localStorage.getItem('userrole') === \"staff\"?'block':'none') : 'block'  \n  },\n  {\n    path: \"/categories/manage\",\n    name: \"Topics\",\n    icon: \"ni ni-collection text-gray\",\n    component: Topicsforms,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? (localStorage.getItem('userrole') === \"staff\"?'block':'none') : 'block'  \n  },\n  {\n    path: \"/categories/daily\",\n    name: \"Subscription\",\n    icon: \"ni ni-send text-gray\",\n    component: Lettersubscription,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? (localStorage.getItem('userrole') === \"staff\"?'block':'none') : 'block'  \n\n  },\n  {\n    path: \"/tags\",\n    name: \"Tags\",\n    icon: \"ni ni-tag text-gray\",\n    component: Subscribelist,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? 'none' : 'block'  \n  },\n  {\n    path: \"/popularlist\",\n    name: \"Popular Tools\",\n    icon: \"ni ni-active-40 text-gray\",\n    component: Popularlist,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? 'none' : 'block'  \n  },\n  {\n    path: \"/payments\",\n    name: \"Payments\",\n    icon: \"ni ni-credit-card text-gray\",\n    component: Paymentlist,\n    layout: \"/admin\",\n    displayproperty: localStorage.getItem('userrole') !== \"superuser\" ? 'none' : 'block'  \n  }\n  // {\n  //   path: \"/login\",\n  //   name: \"Login\",\n  //   icon: \"ni ni-key-25 text-info\",\n  //   component: Login,\n  //   layout: \"/auth\"\n  // },\n  // {\n  //   path: \"/register\",\n  //   name: \"Register\",\n  //   icon: \"ni ni-circle-08 text-pink\",\n  //   component: Register,\n  //   layout: \"/auth\"\n  // }\n];\nexport default routes;\n","\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport axios from 'axios';\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  componentDidMount(e) {\n    const getCookie = (name) => {\n      let cookieValue = null;\n      if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n            break;\n          }\n        }\n      }\n      return cookieValue;\n    }\n\n    const authurl = \"https://app.kiranvoleti.com/authcheck/\";\n    const config = {\n      headers: {\n          'Content-Type': 'application/json',                \n          'Accept': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n          \n      }\n  };\n    \n     axios.get(authurl,config).then(res=>{\n       console.log(res.data)\n            if (res.data.issuperuser){\n\n                localStorage.setItem('userrole', 'superuser');     \n                 \n                       \n            }else if (res.data.isstaff){\n                localStorage.setItem('userrole', 'staff');  \n                  \n            }\n            else{\n                localStorage.setItem('userrole', 'user');  \n                // window.location.assign(\"/login\")\n                \n\n            }\n            \n            \n        }).catch(err=>{\n            console.log(err)\n        })\n\n       \n    \n  }\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/digitalbox.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport axios from 'axios';\nimport routes from \"routes.js\";\n\nclass Admindash extends React.Component {\n  componentDidMount(e) {\n    const getCookie = (name) => {\n      let cookieValue = null;\n      if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n            break;\n          }\n        }\n      }\n      return cookieValue;\n    }\n\n    const authurl = \"https://app.kiranvoleti.com/authcheck/\";\n    const config = {\n      headers: {\n          'Content-Type': 'application/json',                \n          'Accept': 'application/json',\n          'X-CSRFToken': getCookie('csrftoken')\n          \n      }\n  };\n    \n     axios.get(authurl,config).then(res=>{\n       console.log(res.data)\n            if (res.data.issuperuser){\n\n                localStorage.setItem('userrole', 'superuser');     \n                 \n                       \n            }else if (res.data.isstaff){\n                localStorage.setItem('userrole', 'staff');  \n                  \n            }\n            else{\n                localStorage.setItem('userrole', 'user');  \n                // window.location.assign(\"/login\")\n                \n\n            }\n            \n            \n        }).catch(err=>{\n            console.log(err)\n        })\n\n  }\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\" && prop.path ===\"/index\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n       ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          logo={{\n            innerLink: \"/admin/index\",\n            imgSrc: require(\"assets/img/brand/digitalbox.png\"),\n            imgAlt: \"...\"\n          }}\n        />\n        <div className=\"main-content\" ref=\"mainContent\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>\n            {this.getRoutes(routes)}\n            <Redirect from=\"*\" to=\"/admin/index\" />\n          </Switch>\n          <Container fluid>\n            <AdminFooter />\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admindash;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar\n          className=\"navbar-top navbar-horizontal navbar-dark\"\n          expand=\"md\"\n        >\n          <Container className=\"px-4\">\n            <NavbarBrand to=\"/\" tag={Link}>\n              <img alt=\"...\" src={require(\"assets/img/brand/argon-react-white.png\")} />\n            </NavbarBrand>\n            <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n              <div className=\"navbar-collapse-header d-md-none\">\n                <Row>\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    <Link to=\"/\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/brand/argon-react.png\")}\n                      />\n                    </Link>\n                  </Col>\n                  <Col className=\"collapse-close\" xs=\"6\">\n                    <button\n                      className=\"navbar-toggler\"\n                      id=\"navbar-collapse-main\"\n                    >\n                      <span />\n                      <span />\n                    </button>\n                  </Col>\n                </Row>\n              </div>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                    <i className=\"ni ni-planet\" />\n                    <span className=\"nav-link-inner--text\">Dashboard</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/register\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-circle-08\" />\n                    <span className=\"nav-link-inner--text\">Register</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/auth/login\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-key-25\" />\n                    <span className=\"nav-link-inner--text\">Login</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className=\"nav-link-icon\"\n                    to=\"/admin/user-profile\"\n                    tag={Link}\n                  >\n                    <i className=\"ni ni-single-02\" />\n                    <span className=\"nav-link-inner--text\">Profile</span>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </UncontrolledCollapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\n\n// reactstrap components\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <>\n        <footer className=\"py-5\">\n          <Container>\n            <Row className=\"align-items-center justify-content-xl-between\">\n              <Col xl=\"6\">\n                <div className=\"copyright text-center text-xl-left text-muted\">\n                  © 2018{\" \"}\n                  <a\n                    className=\"font-weight-bold ml-1\"\n                    href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                    target=\"_blank\"\n                  >\n                    Creative Tim\n                  </a>\n                </div>\n              </Col>\n              <Col xl=\"6\">\n                <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Creative Tim\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://www.creative-tim.com/presentation?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      About Us\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"http://blog.creative-tim.com?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      Blog\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      href=\"https://github.com/creativetimofficial/argon-dashboard/blob/master/LICENSE.md?ref=adr-auth-footer\"\n                      target=\"_blank\"\n                    >\n                      MIT License\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nclass Auth extends React.Component {\n  componentDidMount() {\n    document.body.classList.add(\"bg-default\");\n  }\n  componentWillUnmount() {\n    document.body.classList.remove(\"bg-default\");\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">\n          <AuthNavbar />\n          <div className=\"header bg-gradient-info py-7 py-lg-8\">\n            <Container>\n              <div className=\"header-body text-center mb-7\">\n                <Row className=\"justify-content-center\">\n                  <Col lg=\"5\" md=\"6\">\n                    <h1 className=\"text-white\">Welcome!</h1>\n                    <p className=\"text-lead text-light\">\n                      Use these awesome forms to login or create new account in\n                      your project for free.\n                    </p>\n                  </Col>\n                </Row>\n              </div>\n            </Container>\n            <div className=\"separator separator-bottom separator-skew zindex-100\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"none\"\n                version=\"1.1\"\n                viewBox=\"0 0 2560 100\"\n                x=\"0\"\n                y=\"0\"\n              >\n                <polygon\n                  className=\"fill-default\"\n                  points=\"2560 0 2560 100 0 100\"\n                />\n              </svg>\n            </div>\n          </div>\n          {/* Page content */}\n          <Container className=\"mt--8 pb-5\">\n            <Row className=\"justify-content-center\">\n              <Switch>\n                {this.getRoutes(routes)}\n                <Redirect from=\"*\" to=\"/auth/login\" />\n              </Switch>\n            </Row>\n          </Container>\n        </div>\n        <AuthFooter />\n      </>\n    );\n  }\n}\n\nexport default Auth;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminLayout from \"layouts/Admin.js\";\nimport AdminLayoutdash from \"layouts/Admindash.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport UsersProvider from \"./views/examples/contexts/UserContext\"\nimport CategoryProvider from \"./views/examples/contexts/CategoryContext\"\nimport TopicsProvider from \"./views/examples/contexts/TopicsContext\"\n\nReactDOM.render(\n  <UsersProvider>\n  <CategoryProvider>\n    <TopicsProvider>\n  <BrowserRouter>\n    <Switch>\n    <Route exact path=\"/admin/categories/:token\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/manage/:token\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/users\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/tags\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/popularlist\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/payments\" render={props => <AdminLayout {...props} />} />\n    <Route exact path=\"/admin/index\" render={props => <AdminLayoutdash {...props} />} />\n      \n      <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\n      <Route exact path=\"/ui/admin\" render={props => <AdminLayoutdash {...props} />} />      \n      <Redirect from=\"/\" to=\"/ui/admin\" />\n    </Switch>\n  </BrowserRouter>\n  </TopicsProvider>\n  </CategoryProvider>\n  </UsersProvider>,\n  document.getElementById(\"root\")\n);\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function() {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped, radius;\n  var borderWidth = vm.borderWidth;\n  // Set Radius Here\n  // If radius is large enough to cause drawing errors a max radius is imposed\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    var radius: any = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function(chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function(label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function(value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                return \"$\" + value + \"k\";\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += \"$\" + yLabel + \"k\";\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 10, 30, 15, 40, 20, 60, 60]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [0, 20, 5, 25, 10, 30, 15, 40, 40]\n        }\n      ]\n    };\n  }\n};\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function(value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n};\n","module.exports = __webpack_public_path__ + \"static/media/user.e4867e9d.jpg\";"],"sourceRoot":""}